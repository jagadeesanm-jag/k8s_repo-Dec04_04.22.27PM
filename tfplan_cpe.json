{
    "format_version": "0.1",
    "terraform_version": "0.13.4",
    "variables": {
        "aiven_api_token": {
            "value": "test"
        },
        "aiven_project_id": {
            "value": ""
        },
        "application_name": {
            "value": ""
        },
        "gcp_project_id": {
            "value": ""
        },
        "stack_template": {
            "value": "local/stack.yaml"
        },
        "stack_vars": {
            "value": {}
        },
        "ultradns_password": {
            "value": "test"
        },
        "ultradns_username": {
            "value": "test"
        }
    },
    "planned_values": {
        "root_module": {
            "child_modules": [
                {
                    "resources": [
                        {
                            "address": "module.cpe_stack_instance.google_artifact_registry_repository.docker_repository",
                            "mode": "managed",
                            "type": "google_artifact_registry_repository",
                            "name": "docker_repository",
                            "provider_name": "registry.terraform.io/hashicorp/google-beta",
                            "schema_version": 0,
                            "values": {
                                "description": "docker repository",
                                "format": "DOCKER",
                                "kms_key_name": null,
                                "labels": null,
                                "location": "europe-west4",
                                "repository_id": "docker",
                                "timeouts": null
                            }
                        },
                        {
                            "address": "module.cpe_stack_instance.google_artifact_registry_repository_iam_member.repository_iam",
                            "mode": "managed",
                            "type": "google_artifact_registry_repository_iam_member",
                            "name": "repository_iam",
                            "provider_name": "registry.terraform.io/hashicorp/google-beta",
                            "schema_version": 0,
                            "values": {
                                "condition": [],
                                "location": "europe-west4",
                                "role": "roles/artifactregistry.writer"
                            }
                        },
                        {
                            "address": "module.cpe_stack_instance.google_project_service.artifact_registry",
                            "mode": "managed",
                            "type": "google_project_service",
                            "name": "artifact_registry",
                            "provider_name": "registry.terraform.io/hashicorp/google",
                            "schema_version": 0,
                            "values": {
                                "disable_dependent_services": null,
                                "disable_on_destroy": false,
                                "project": "cnp-standalone-eghe",
                                "service": "artifactregistry.googleapis.com",
                                "timeouts": null
                            }
                        },
                        {
                            "address": "module.cpe_stack_instance.google_service_account.repository_account",
                            "mode": "managed",
                            "type": "google_service_account",
                            "name": "repository_account",
                            "provider_name": "registry.terraform.io/hashicorp/google-beta",
                            "schema_version": 0,
                            "values": {
                                "account_id": "artifact-registry-sa",
                                "description": null,
                                "display_name": "Repository Service Account",
                                "timeouts": null
                            }
                        }
                    ],
                    "address": "module.cpe_stack_instance",
                    "child_modules": [
                        {
                            "resources": [
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.google_compute_address.public_ip_istiogateway",
                                    "mode": "managed",
                                    "type": "google_compute_address",
                                    "name": "public_ip_istiogateway",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "address_type": "EXTERNAL",
                                        "description": null,
                                        "name": "cluster01-istiogw-ip",
                                        "network_tier": "PREMIUM",
                                        "project": "cnp-standalone-eghe",
                                        "region": "europe-west4",
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_gar",
                                    "mode": "managed",
                                    "type": "google_project_iam_member",
                                    "name": "cluster_service_account_gar",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "condition": [],
                                        "project": "cnp-standalone-eghe",
                                        "role": "roles/artifactregistry.reader"
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_log_writer",
                                    "mode": "managed",
                                    "type": "google_project_iam_member",
                                    "name": "cluster_service_account_log_writer",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "condition": [],
                                        "project": "cnp-standalone-eghe",
                                        "role": "roles/logging.logWriter"
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_metric_writer",
                                    "mode": "managed",
                                    "type": "google_project_iam_member",
                                    "name": "cluster_service_account_metric_writer",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "condition": [],
                                        "project": "cnp-standalone-eghe",
                                        "role": "roles/monitoring.metricWriter"
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_monitoring_viewer",
                                    "mode": "managed",
                                    "type": "google_project_iam_member",
                                    "name": "cluster_service_account_monitoring_viewer",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "condition": [],
                                        "project": "cnp-standalone-eghe",
                                        "role": "roles/monitoring.viewer"
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_resource_metadata_writer",
                                    "mode": "managed",
                                    "type": "google_project_iam_member",
                                    "name": "cluster_service_account_resource_metadata_writer",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "condition": [],
                                        "project": "cnp-standalone-eghe",
                                        "role": "roles/stackdriver.resourceMetadata.writer"
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.google_project_service.kubernetesengine_api",
                                    "mode": "managed",
                                    "type": "google_project_service",
                                    "name": "kubernetesengine_api",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "disable_dependent_services": null,
                                        "disable_on_destroy": false,
                                        "project": "cnp-standalone-eghe",
                                        "service": "container.googleapis.com",
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.google_service_account.cluster_service_account",
                                    "mode": "managed",
                                    "type": "google_service_account",
                                    "name": "cluster_service_account",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "account_id": "cluster01",
                                        "description": null,
                                        "display_name": "Terraform-managed service account for gke cluster",
                                        "project": "cnp-standalone-eghe",
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.gcp_gke.null_resource.istio_loadbalancer_ip_patch",
                                    "mode": "managed",
                                    "type": "null_resource",
                                    "name": "istio_loadbalancer_ip_patch",
                                    "provider_name": "registry.terraform.io/hashicorp/null",
                                    "schema_version": 0,
                                    "values": {
                                        "triggers": null
                                    }
                                }
                            ],
                            "address": "module.cpe_stack_instance.module.gcp_gke",
                            "child_modules": [
                                {
                                    "resources": [
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.data.google_compute_subnetwork.gke_subnetwork[0]",
                                            "mode": "data",
                                            "type": "google_compute_subnetwork",
                                            "name": "gke_subnetwork",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/google",
                                            "schema_version": 0,
                                            "values": {
                                                "project": "cnp-standalone-eghe",
                                                "region": "europe-west4"
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_compute_firewall.intra_egress[0]",
                                            "mode": "managed",
                                            "type": "google_compute_firewall",
                                            "name": "intra_egress",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/google",
                                            "schema_version": 1,
                                            "values": {
                                                "allow": [
                                                    {
                                                        "ports": [],
                                                        "protocol": "ah"
                                                    },
                                                    {
                                                        "ports": [],
                                                        "protocol": "esp"
                                                    },
                                                    {
                                                        "ports": [],
                                                        "protocol": "icmp"
                                                    },
                                                    {
                                                        "ports": [],
                                                        "protocol": "sctp"
                                                    },
                                                    {
                                                        "ports": [],
                                                        "protocol": "tcp"
                                                    },
                                                    {
                                                        "ports": [],
                                                        "protocol": "udp"
                                                    }
                                                ],
                                                "deny": [],
                                                "description": "Managed by terraform gke module: Allow pods to communicate with each other and the master",
                                                "direction": "EGRESS",
                                                "disabled": null,
                                                "log_config": [],
                                                "name": "gke-cluster01-intra-cluster-egress",
                                                "priority": 1000,
                                                "project": "cnp-standalone-eghe",
                                                "source_service_accounts": null,
                                                "source_tags": null,
                                                "target_service_accounts": null,
                                                "target_tags": [
                                                    "gke-cluster01"
                                                ],
                                                "timeouts": null
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_compute_firewall.master_webhooks[0]",
                                            "mode": "managed",
                                            "type": "google_compute_firewall",
                                            "name": "master_webhooks",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/google",
                                            "schema_version": 1,
                                            "values": {
                                                "allow": [
                                                    {
                                                        "ports": [
                                                            "443",
                                                            "10250",
                                                            "15017"
                                                        ],
                                                        "protocol": "tcp"
                                                    }
                                                ],
                                                "deny": [],
                                                "description": "Managed by terraform gke module: Allow master to hit pods for admission controllers/webhooks",
                                                "direction": "INGRESS",
                                                "disabled": null,
                                                "log_config": [],
                                                "name": "gke-cluster01-webhooks",
                                                "priority": 1000,
                                                "project": "cnp-standalone-eghe",
                                                "source_ranges": [
                                                    "10.253.0.0/28"
                                                ],
                                                "source_service_accounts": null,
                                                "source_tags": null,
                                                "target_service_accounts": null,
                                                "target_tags": [
                                                    "gke-cluster01"
                                                ],
                                                "timeouts": null
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_container_cluster.primary",
                                            "mode": "managed",
                                            "type": "google_container_cluster",
                                            "name": "primary",
                                            "provider_name": "registry.terraform.io/hashicorp/google-beta",
                                            "schema_version": 1,
                                            "values": {
                                                "addons_config": [
                                                    {
                                                        "config_connector_config": [
                                                            {
                                                                "enabled": false
                                                            }
                                                        ],
                                                        "dns_cache_config": [
                                                            {
                                                                "enabled": false
                                                            }
                                                        ],
                                                        "gce_persistent_disk_csi_driver_config": [
                                                            {
                                                                "enabled": false
                                                            }
                                                        ],
                                                        "horizontal_pod_autoscaling": [
                                                            {
                                                                "disabled": false
                                                            }
                                                        ],
                                                        "http_load_balancing": [
                                                            {
                                                                "disabled": true
                                                            }
                                                        ],
                                                        "istio_config": [
                                                            {
                                                                "auth": "AUTH_MUTUAL_TLS",
                                                                "disabled": false
                                                            }
                                                        ],
                                                        "kalm_config": [
                                                            {
                                                                "enabled": false
                                                            }
                                                        ],
                                                        "network_policy_config": [
                                                            {
                                                                "disabled": false
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "authenticator_groups_config": [
                                                    {
                                                        "security_group": "gke-security-groups@decathlon.net"
                                                    }
                                                ],
                                                "cluster_autoscaling": [
                                                    {
                                                        "autoscaling_profile": "BALANCED",
                                                        "enabled": false,
                                                        "resource_limits": []
                                                    }
                                                ],
                                                "database_encryption": [
                                                    {
                                                        "key_name": "",
                                                        "state": "DECRYPTED"
                                                    }
                                                ],
                                                "default_max_pods_per_node": 110,
                                                "default_snat_status": [
                                                    {
                                                        "disabled": false
                                                    }
                                                ],
                                                "description": "",
                                                "enable_binary_authorization": false,
                                                "enable_intranode_visibility": false,
                                                "enable_kubernetes_alpha": false,
                                                "enable_legacy_abac": false,
                                                "enable_shielded_nodes": true,
                                                "enable_tpu": false,
                                                "initial_node_count": null,
                                                "ip_allocation_policy": [
                                                    {
                                                        "cluster_secondary_range_name": "k8s-services-pods",
                                                        "services_secondary_range_name": "k8s-services-range"
                                                    }
                                                ],
                                                "location": "europe-west4",
                                                "logging_service": "logging.googleapis.com/kubernetes",
                                                "maintenance_policy": [
                                                    {
                                                        "daily_maintenance_window": [
                                                            {
                                                                "start_time": "05:00"
                                                            }
                                                        ],
                                                        "recurring_window": []
                                                    }
                                                ],
                                                "master_auth": [
                                                    {
                                                        "client_certificate_config": [
                                                            {
                                                                "issue_client_certificate": false
                                                            }
                                                        ],
                                                        "password": "",
                                                        "username": ""
                                                    }
                                                ],
                                                "master_authorized_networks_config": [],
                                                "min_master_version": null,
                                                "monitoring_service": "monitoring.googleapis.com/kubernetes",
                                                "name": "cluster01",
                                                "network_policy": [
                                                    {
                                                        "enabled": true,
                                                        "provider": "CALICO"
                                                    }
                                                ],
                                                "networking_mode": "VPC_NATIVE",
                                                "node_pool": [
                                                    {
                                                        "autoscaling": [],
                                                        "initial_node_count": 0,
                                                        "name": "default-pool",
                                                        "node_config": [
                                                            {
                                                                "boot_disk_kms_key": null,
                                                                "kubelet_config": [],
                                                                "linux_node_config": [],
                                                                "min_cpu_platform": null,
                                                                "preemptible": false,
                                                                "sandbox_config": [],
                                                                "tags": null,
                                                                "workload_metadata_config": [
                                                                    {
                                                                        "node_metadata": "GKE_METADATA_SERVER"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "pod_security_policy_config": [],
                                                "private_cluster_config": [
                                                    {
                                                        "enable_private_endpoint": null,
                                                        "enable_private_nodes": true,
                                                        "master_global_access_config": [
                                                            {
                                                                "enabled": true
                                                            }
                                                        ],
                                                        "master_ipv4_cidr_block": "10.253.0.0/28"
                                                    }
                                                ],
                                                "project": "cnp-standalone-eghe",
                                                "release_channel": [
                                                    {
                                                        "channel": "REGULAR"
                                                    }
                                                ],
                                                "remove_default_node_pool": true,
                                                "resource_labels": {
                                                    "application": "monapp",
                                                    "cluster-name": "cluster01",
                                                    "project": "cnp-standalone-eghe",
                                                    "region": "europe-west4"
                                                },
                                                "resource_usage_export_config": [],
                                                "timeouts": {
                                                    "create": "45m",
                                                    "delete": "45m",
                                                    "read": null,
                                                    "update": "45m"
                                                },
                                                "vertical_pod_autoscaling": [
                                                    {
                                                        "enabled": true
                                                    }
                                                ],
                                                "workload_identity_config": [
                                                    {
                                                        "identity_namespace": "cnp-standalone-eghe.svc.id.goog"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_container_node_pool.pools[\"pool-01\"]",
                                            "mode": "managed",
                                            "type": "google_container_node_pool",
                                            "name": "pools",
                                            "index": "pool-01",
                                            "provider_name": "registry.terraform.io/hashicorp/google-beta",
                                            "schema_version": 1,
                                            "values": {
                                                "autoscaling": [
                                                    {
                                                        "max_node_count": 2,
                                                        "min_node_count": 1
                                                    }
                                                ],
                                                "cluster": "cluster01",
                                                "initial_node_count": 1,
                                                "location": "europe-west4",
                                                "management": [
                                                    {
                                                        "auto_repair": true,
                                                        "auto_upgrade": true
                                                    }
                                                ],
                                                "name": "pool-01",
                                                "node_config": [
                                                    {
                                                        "boot_disk_kms_key": "",
                                                        "disk_size_gb": 100,
                                                        "disk_type": "pd-standard",
                                                        "guest_accelerator": [],
                                                        "image_type": "CAS",
                                                        "kubelet_config": [],
                                                        "labels": {
                                                            "cluster_name": "cluster01",
                                                            "node_pool": "pool-01"
                                                        },
                                                        "linux_node_config": [],
                                                        "local_ssd_count": 0,
                                                        "machine_type": "n1-standard-4",
                                                        "metadata": {
                                                            "cluster_name": "cluster01",
                                                            "disable-legacy-endpoints": "true",
                                                            "node_pool": "pool-01"
                                                        },
                                                        "min_cpu_platform": null,
                                                        "oauth_scopes": [
                                                            "https://www.googleapis.com/auth/cloud-platform"
                                                        ],
                                                        "preemptible": false,
                                                        "sandbox_config": [],
                                                        "shielded_instance_config": [
                                                            {
                                                                "enable_integrity_monitoring": true,
                                                                "enable_secure_boot": false
                                                            }
                                                        ],
                                                        "tags": [
                                                            "gke-cluster01",
                                                            "gke-cluster01-pool-01"
                                                        ],
                                                        "taint": [
                                                            {
                                                                "effect": "PREFER_NO_SCHEDULE",
                                                                "key": "pool-01",
                                                                "value": "true"
                                                            }
                                                        ],
                                                        "workload_metadata_config": [
                                                            {
                                                                "node_metadata": "GKE_METADATA_SERVER"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "project": "cnp-standalone-eghe",
                                                "timeouts": {
                                                    "create": "45m",
                                                    "delete": "45m",
                                                    "update": "45m"
                                                },
                                                "upgrade_settings": [
                                                    {
                                                        "max_surge": 1,
                                                        "max_unavailable": 0
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_container_node_pool.pools[\"pool-02\"]",
                                            "mode": "managed",
                                            "type": "google_container_node_pool",
                                            "name": "pools",
                                            "index": "pool-02",
                                            "provider_name": "registry.terraform.io/hashicorp/google-beta",
                                            "schema_version": 1,
                                            "values": {
                                                "autoscaling": [
                                                    {
                                                        "max_node_count": 5,
                                                        "min_node_count": 0
                                                    }
                                                ],
                                                "cluster": "cluster01",
                                                "initial_node_count": 0,
                                                "location": "europe-west4",
                                                "management": [
                                                    {
                                                        "auto_repair": true,
                                                        "auto_upgrade": true
                                                    }
                                                ],
                                                "name": "pool-02",
                                                "node_config": [
                                                    {
                                                        "boot_disk_kms_key": "",
                                                        "disk_size_gb": 100,
                                                        "disk_type": "pd-standard",
                                                        "guest_accelerator": [],
                                                        "image_type": "CAS",
                                                        "kubelet_config": [],
                                                        "labels": {
                                                            "cluster_name": "cluster01",
                                                            "node_pool": "pool-02"
                                                        },
                                                        "linux_node_config": [],
                                                        "local_ssd_count": 0,
                                                        "machine_type": "n1-standard-4",
                                                        "metadata": {
                                                            "cluster_name": "cluster01",
                                                            "disable-legacy-endpoints": "true",
                                                            "node_pool": "pool-02"
                                                        },
                                                        "min_cpu_platform": null,
                                                        "oauth_scopes": [
                                                            "https://www.googleapis.com/auth/cloud-platform"
                                                        ],
                                                        "preemptible": false,
                                                        "sandbox_config": [],
                                                        "shielded_instance_config": [
                                                            {
                                                                "enable_integrity_monitoring": true,
                                                                "enable_secure_boot": false
                                                            }
                                                        ],
                                                        "tags": [
                                                            "gke-cluster01",
                                                            "gke-cluster01-pool-02"
                                                        ],
                                                        "workload_metadata_config": [
                                                            {
                                                                "node_metadata": "GKE_METADATA_SERVER"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "project": "cnp-standalone-eghe",
                                                "timeouts": {
                                                    "create": "45m",
                                                    "delete": "45m",
                                                    "update": "45m"
                                                },
                                                "upgrade_settings": [
                                                    {
                                                        "max_surge": 1,
                                                        "max_unavailable": 0
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_project_iam_member.cluster_service_account-log_writer[0]",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account-log_writer",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/google",
                                            "schema_version": 0,
                                            "values": {
                                                "condition": [],
                                                "project": "cnp-standalone-eghe",
                                                "role": "roles/logging.logWriter"
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_project_iam_member.cluster_service_account-metric_writer[0]",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account-metric_writer",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/google",
                                            "schema_version": 0,
                                            "values": {
                                                "condition": [],
                                                "project": "cnp-standalone-eghe",
                                                "role": "roles/monitoring.metricWriter"
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0]",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account-monitoring_viewer",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/google",
                                            "schema_version": 0,
                                            "values": {
                                                "condition": [],
                                                "project": "cnp-standalone-eghe",
                                                "role": "roles/monitoring.viewer"
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_project_iam_member.cluster_service_account-resourceMetadata-writer[0]",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account-resourceMetadata-writer",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/google",
                                            "schema_version": 0,
                                            "values": {
                                                "condition": [],
                                                "project": "cnp-standalone-eghe",
                                                "role": "roles/stackdriver.resourceMetadata.writer"
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_service_account.cluster_service_account[0]",
                                            "mode": "managed",
                                            "type": "google_service_account",
                                            "name": "cluster_service_account",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/google",
                                            "schema_version": 0,
                                            "values": {
                                                "description": null,
                                                "display_name": "Terraform-managed service account for cluster cluster01",
                                                "project": "cnp-standalone-eghe",
                                                "timeouts": null
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.random_shuffle.available_zones",
                                            "mode": "managed",
                                            "type": "random_shuffle",
                                            "name": "available_zones",
                                            "provider_name": "registry.terraform.io/hashicorp/random",
                                            "schema_version": 0,
                                            "values": {
                                                "input": [
                                                    "europe-west4-a",
                                                    "europe-west4-b",
                                                    "europe-west4-c"
                                                ],
                                                "keepers": null,
                                                "result_count": 3,
                                                "seed": null
                                            }
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.random_string.cluster_service_account_suffix",
                                            "mode": "managed",
                                            "type": "random_string",
                                            "name": "cluster_service_account_suffix",
                                            "provider_name": "registry.terraform.io/hashicorp/random",
                                            "schema_version": 1,
                                            "values": {
                                                "keepers": null,
                                                "length": 4,
                                                "lower": true,
                                                "min_lower": 0,
                                                "min_numeric": 0,
                                                "min_special": 0,
                                                "min_upper": 0,
                                                "number": true,
                                                "override_special": null,
                                                "special": false,
                                                "upper": false
                                            }
                                        }
                                    ],
                                    "address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
                                    "child_modules": [
                                        {
                                            "resources": [
                                                {
                                                    "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_wait_for_cluster.data.external.env_override",
                                                    "mode": "data",
                                                    "type": "external",
                                                    "name": "env_override",
                                                    "provider_name": "registry.terraform.io/hashicorp/external",
                                                    "schema_version": 0,
                                                    "values": {
                                                        "id": "-",
                                                        "program": [
                                                            ".terraform/modules/cpe_stack_instance.gcp_gke.gke.gcloud_wait_for_cluster/scripts/check_env.sh"
                                                        ],
                                                        "query": null,
                                                        "result": {
                                                            "download": ""
                                                        },
                                                        "working_dir": null
                                                    }
                                                },
                                                {
                                                    "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_wait_for_cluster.null_resource.module_depends_on[0]",
                                                    "mode": "managed",
                                                    "type": "null_resource",
                                                    "name": "module_depends_on",
                                                    "index": 0,
                                                    "provider_name": "registry.terraform.io/hashicorp/null",
                                                    "schema_version": 0,
                                                    "values": {
                                                        "triggers": {
                                                            "value": "3"
                                                        }
                                                    }
                                                }
                                            ],
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_wait_for_cluster"
                                        },
                                        {
                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_delete_default_kube_dns_configmap",
                                            "child_modules": [
                                                {
                                                    "resources": [
                                                        {
                                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_delete_default_kube_dns_configmap.module.gcloud_kubectl.data.external.env_override",
                                                            "mode": "data",
                                                            "type": "external",
                                                            "name": "env_override",
                                                            "provider_name": "registry.terraform.io/hashicorp/external",
                                                            "schema_version": 0,
                                                            "values": {
                                                                "id": "-",
                                                                "program": [
                                                                    ".terraform/modules/cpe_stack_instance.gcp_gke.gke.gcloud_delete_default_kube_dns_configmap/scripts/check_env.sh"
                                                                ],
                                                                "query": null,
                                                                "result": {
                                                                    "download": ""
                                                                },
                                                                "working_dir": null
                                                            }
                                                        },
                                                        {
                                                            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_delete_default_kube_dns_configmap.module.gcloud_kubectl.null_resource.module_depends_on[0]",
                                                            "mode": "managed",
                                                            "type": "null_resource",
                                                            "name": "module_depends_on",
                                                            "index": 0,
                                                            "provider_name": "registry.terraform.io/hashicorp/null",
                                                            "schema_version": 0,
                                                            "values": {
                                                                "triggers": {
                                                                    "value": "4"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_delete_default_kube_dns_configmap.module.gcloud_kubectl"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "resources": [
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"dareboost\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "dareboost",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize dareboost",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-dareboost",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "159.8.108.64/27",
                                            "159.8.93.128/28",
                                            "169.51.4.64/26"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-aws-china\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "decathlon-aws-china",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize decathlon-aws-china",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-decathlon-aws-china",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "52.80.59.8",
                                            "52.80.96.216",
                                            "54.222.184.98",
                                            "54.223.103.31"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-aws-eu\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "decathlon-aws-eu",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize decathlon-aws-eu",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-decathlon-aws-eu",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "34.241.16.28",
                                            "52.215.149.121"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-aws-sg\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "decathlon-aws-sg",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize decathlon-aws-sg",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-decathlon-aws-sg",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "18.136.13.195",
                                            "18.136.171.100"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-aws-us\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "decathlon-aws-us",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize decathlon-aws-us",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-decathlon-aws-us",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "18.204.189.189",
                                            "34.225.184.32"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-azure-china\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "decathlon-azure-china",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize decathlon-azure-china",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-decathlon-azure-china",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "40.73.104.195",
                                            "40.73.105.107"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-cube-china\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "decathlon-cube-china",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize decathlon-cube-china",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-decathlon-cube-china",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "52.76.100.183"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"imperva\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "imperva",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize imperva",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-imperva",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "103.28.248.0/22",
                                            "107.154.0.0/16",
                                            "149.126.72.0/21",
                                            "185.11.124.0/22",
                                            "192.230.64.0/18",
                                            "198.143.32.0/19",
                                            "199.83.128.0/21",
                                            "45.223.0.0/16",
                                            "45.60.0.0/16",
                                            "45.64.64.0/22"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"zscaler\"]",
                                    "mode": "managed",
                                    "type": "google_compute_firewall",
                                    "name": "k8s_fw_ips_ranges_to_whitelist",
                                    "index": "zscaler",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 1,
                                    "values": {
                                        "allow": [
                                            {
                                                "ports": [
                                                    "80",
                                                    "443"
                                                ],
                                                "protocol": "tcp"
                                            }
                                        ],
                                        "deny": [],
                                        "description": "Managed by Terraform to authorize zscaler",
                                        "direction": "INGRESS",
                                        "disabled": null,
                                        "log_config": [],
                                        "name": "k8s-fw-zscaler",
                                        "priority": 1001,
                                        "source_ranges": [
                                            "1.234.57.0/24",
                                            "104.129.192.0/20",
                                            "104.129.192.0/23",
                                            "104.129.194.0/23",
                                            "104.129.196.0/23",
                                            "104.129.198.0/23",
                                            "104.129.200.0/24",
                                            "104.129.204.0/23",
                                            "119.137.170.0/24",
                                            "124.248.141.0/24",
                                            "154.113.23.0/24",
                                            "165.225.0.0/17",
                                            "165.225.10.0/23",
                                            "165.225.102.0/24",
                                            "165.225.104.0/24",
                                            "165.225.106.0/23",
                                            "165.225.110.0/23",
                                            "165.225.112.0/23",
                                            "165.225.114.0/23",
                                            "165.225.116.0/23",
                                            "165.225.192.0/18",
                                            "165.225.192.0/23",
                                            "165.225.194.0/23",
                                            "165.225.196.0/23",
                                            "165.225.200.0/23",
                                            "165.225.204.0/23",
                                            "165.225.208.0/23",
                                            "165.225.210.0/23",
                                            "165.225.212.0/23",
                                            "165.225.214.0/23",
                                            "165.225.226.0/23",
                                            "165.225.26.0/23",
                                            "165.225.32.0/23",
                                            "165.225.34.0/23",
                                            "165.225.36.0/23",
                                            "165.225.38.0/23",
                                            "165.225.50.0/23",
                                            "165.225.56.0/22",
                                            "165.225.64.0/24",
                                            "165.225.66.0/24",
                                            "165.225.68.0/24",
                                            "165.225.72.0/22",
                                            "165.225.76.0/23",
                                            "165.225.8.0/23",
                                            "165.225.80.0/22",
                                            "165.225.84.0/23",
                                            "165.225.86.0/23",
                                            "165.225.88.0/23",
                                            "165.225.92.0/23",
                                            "165.225.98.0/24",
                                            "175.45.116.0/24",
                                            "185.46.212.0/22",
                                            "185.46.212.0/23",
                                            "185.46.212.88",
                                            "185.46.212.89",
                                            "185.46.212.90",
                                            "185.46.212.91",
                                            "185.46.212.92",
                                            "185.46.212.93",
                                            "185.46.212.97",
                                            "185.46.212.98",
                                            "185.46.214.0/23",
                                            "196.23.154.64/27",
                                            "197.156.241.224/27",
                                            "197.98.201.0/24",
                                            "211.144.19.0/24",
                                            "213.52.102.0/24",
                                            "221.122.91.0/24",
                                            "49.236.207.160/27",
                                            "58.220.95.0/24",
                                            "64.215.22.0/24",
                                            "89.167.129.0/24",
                                            "94.188.248.64/26"
                                        ],
                                        "source_service_accounts": null,
                                        "source_tags": null,
                                        "target_service_accounts": null,
                                        "target_tags": [
                                            "cnp-standalone-eghe"
                                        ],
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_network.vpc_network",
                                    "mode": "managed",
                                    "type": "google_compute_network",
                                    "name": "vpc_network",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "auto_create_subnetworks": false,
                                        "delete_default_routes_on_create": false,
                                        "description": null,
                                        "project": "cnp-standalone-eghe",
                                        "routing_mode": "GLOBAL",
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_project_service.servicenetworking_api",
                                    "mode": "managed",
                                    "type": "google_project_service",
                                    "name": "servicenetworking_api",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "disable_dependent_services": null,
                                        "disable_on_destroy": false,
                                        "project": "cnp-standalone-eghe",
                                        "service": "servicenetworking.googleapis.com",
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_project_service.serviceusage_api",
                                    "mode": "managed",
                                    "type": "google_project_service",
                                    "name": "serviceusage_api",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "disable_dependent_services": null,
                                        "disable_on_destroy": false,
                                        "project": "cnp-standalone-eghe",
                                        "service": "serviceusage.googleapis.com",
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_vpc[0].random_string.random",
                                    "mode": "managed",
                                    "type": "random_string",
                                    "name": "random",
                                    "provider_name": "registry.terraform.io/hashicorp/random",
                                    "schema_version": 1,
                                    "values": {
                                        "keepers": null,
                                        "length": 5,
                                        "lower": true,
                                        "min_lower": 0,
                                        "min_numeric": 0,
                                        "min_special": 0,
                                        "min_upper": 0,
                                        "number": true,
                                        "override_special": null,
                                        "special": false,
                                        "upper": false
                                    }
                                }
                            ],
                            "address": "module.cpe_stack_instance.module.base_networking_vpc[0]"
                        },
                        {
                            "resources": [
                                {
                                    "address": "module.cpe_stack_instance.module.cloud_nat.google_compute_address.ip_cloud_nat",
                                    "mode": "managed",
                                    "type": "google_compute_address",
                                    "name": "ip_cloud_nat",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "address_type": "EXTERNAL",
                                        "description": null,
                                        "name": "ip-cloud-nat",
                                        "project": "cnp-standalone-eghe",
                                        "region": "europe-west4",
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.cloud_nat.google_compute_router.router",
                                    "mode": "managed",
                                    "type": "google_compute_router",
                                    "name": "router",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "bgp": [
                                            {
                                                "advertise_mode": "DEFAULT",
                                                "advertised_groups": null,
                                                "advertised_ip_ranges": [],
                                                "asn": 4200000000
                                            }
                                        ],
                                        "description": null,
                                        "name": "cloud-router",
                                        "project": "cnp-standalone-eghe",
                                        "region": "europe-west4",
                                        "timeouts": null
                                    }
                                },
                                {
                                    "address": "module.cpe_stack_instance.module.cloud_nat.google_compute_router_nat.nat",
                                    "mode": "managed",
                                    "type": "google_compute_router_nat",
                                    "name": "nat",
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "drain_nat_ips": null,
                                        "icmp_idle_timeout_sec": 30,
                                        "log_config": [],
                                        "min_ports_per_vm": null,
                                        "name": "nat",
                                        "nat_ip_allocate_option": "MANUAL_ONLY",
                                        "project": "cnp-standalone-eghe",
                                        "region": "europe-west4",
                                        "router": "cloud-router",
                                        "source_subnetwork_ip_ranges_to_nat": "ALL_SUBNETWORKS_ALL_IP_RANGES",
                                        "subnetwork": [],
                                        "tcp_established_idle_timeout_sec": 1200,
                                        "tcp_transitory_idle_timeout_sec": 30,
                                        "timeouts": null,
                                        "udp_idle_timeout_sec": 30
                                    }
                                }
                            ],
                            "address": "module.cpe_stack_instance.module.cloud_nat"
                        },
                        {
                            "resources": [
                                {
                                    "address": "module.cpe_stack_instance.module.base_networking_subnets[0].google_compute_subnetwork.k8s_subnetwork[0]",
                                    "mode": "managed",
                                    "type": "google_compute_subnetwork",
                                    "name": "k8s_subnetwork",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/google",
                                    "schema_version": 0,
                                    "values": {
                                        "description": null,
                                        "ip_cidr_range": "10.0.12.0/22",
                                        "log_config": [
                                            {
                                                "aggregation_interval": "INTERVAL_1_MIN",
                                                "filter_expr": "true",
                                                "flow_sampling": 1,
                                                "metadata": "INCLUDE_ALL_METADATA",
                                                "metadata_fields": null
                                            }
                                        ],
                                        "name": "k8s-nodes-subnetwork",
                                        "private_ip_google_access": true,
                                        "project": "cnp-standalone-eghe",
                                        "region": "europe-west4",
                                        "secondary_ip_range": [
                                            {
                                                "ip_cidr_range": "10.0.64.0/18",
                                                "range_name": "k8s-services-range"
                                            },
                                            {
                                                "ip_cidr_range": "10.0.128.0/17",
                                                "range_name": "k8s-services-pods"
                                            }
                                        ],
                                        "timeouts": null
                                    }
                                }
                            ],
                            "address": "module.cpe_stack_instance.module.base_networking_subnets[0]"
                        }
                    ]
                }
            ]
        }
    },
    "resource_changes": [
        {
            "address": "module.cpe_stack_instance.google_artifact_registry_repository.docker_repository",
            "module_address": "module.cpe_stack_instance",
            "mode": "managed",
            "type": "google_artifact_registry_repository",
            "name": "docker_repository",
            "provider_name": "registry.terraform.io/hashicorp/google-beta",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "docker repository",
                    "format": "DOCKER",
                    "kms_key_name": null,
                    "labels": null,
                    "location": "europe-west4",
                    "repository_id": "docker",
                    "timeouts": null
                },
                "after_unknown": {
                    "create_time": true,
                    "id": true,
                    "name": true,
                    "project": true,
                    "update_time": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.google_artifact_registry_repository_iam_member.repository_iam",
            "module_address": "module.cpe_stack_instance",
            "mode": "managed",
            "type": "google_artifact_registry_repository_iam_member",
            "name": "repository_iam",
            "provider_name": "registry.terraform.io/hashicorp/google-beta",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "location": "europe-west4",
                    "role": "roles/artifactregistry.writer"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true,
                    "project": true,
                    "repository": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.google_project_service.artifact_registry",
            "module_address": "module.cpe_stack_instance",
            "mode": "managed",
            "type": "google_project_service",
            "name": "artifact_registry",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "disable_dependent_services": null,
                    "disable_on_destroy": false,
                    "project": "cnp-standalone-eghe",
                    "service": "artifactregistry.googleapis.com",
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.google_service_account.repository_account",
            "module_address": "module.cpe_stack_instance",
            "mode": "managed",
            "type": "google_service_account",
            "name": "repository_account",
            "provider_name": "registry.terraform.io/hashicorp/google-beta",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "account_id": "artifact-registry-sa",
                    "description": null,
                    "display_name": "Repository Service Account",
                    "timeouts": null
                },
                "after_unknown": {
                    "email": true,
                    "id": true,
                    "name": true,
                    "project": true,
                    "unique_id": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_subnets[0].google_compute_subnetwork.k8s_subnetwork[0]",
            "module_address": "module.cpe_stack_instance.module.base_networking_subnets[0]",
            "mode": "managed",
            "type": "google_compute_subnetwork",
            "name": "k8s_subnetwork",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": null,
                    "ip_cidr_range": "10.0.12.0/22",
                    "log_config": [
                        {
                            "aggregation_interval": "INTERVAL_1_MIN",
                            "filter_expr": "true",
                            "flow_sampling": 1,
                            "metadata": "INCLUDE_ALL_METADATA",
                            "metadata_fields": null
                        }
                    ],
                    "name": "k8s-nodes-subnetwork",
                    "private_ip_google_access": true,
                    "project": "cnp-standalone-eghe",
                    "region": "europe-west4",
                    "secondary_ip_range": [
                        {
                            "ip_cidr_range": "10.0.64.0/18",
                            "range_name": "k8s-services-range"
                        },
                        {
                            "ip_cidr_range": "10.0.128.0/17",
                            "range_name": "k8s-services-pods"
                        }
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "creation_timestamp": true,
                    "fingerprint": true,
                    "gateway_address": true,
                    "id": true,
                    "log_config": [
                        {}
                    ],
                    "network": true,
                    "private_ipv6_google_access": true,
                    "secondary_ip_range": [
                        {},
                        {}
                    ],
                    "self_link": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"dareboost\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "dareboost",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize dareboost",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-dareboost",
                    "priority": 1001,
                    "source_ranges": [
                        "159.8.108.64/27",
                        "159.8.93.128/28",
                        "169.51.4.64/26"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false,
                        false,
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-aws-china\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "decathlon-aws-china",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize decathlon-aws-china",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-decathlon-aws-china",
                    "priority": 1001,
                    "source_ranges": [
                        "52.80.59.8",
                        "52.80.96.216",
                        "54.222.184.98",
                        "54.223.103.31"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false,
                        false,
                        false,
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-aws-eu\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "decathlon-aws-eu",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize decathlon-aws-eu",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-decathlon-aws-eu",
                    "priority": 1001,
                    "source_ranges": [
                        "34.241.16.28",
                        "52.215.149.121"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false,
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-aws-sg\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "decathlon-aws-sg",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize decathlon-aws-sg",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-decathlon-aws-sg",
                    "priority": 1001,
                    "source_ranges": [
                        "18.136.13.195",
                        "18.136.171.100"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false,
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-aws-us\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "decathlon-aws-us",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize decathlon-aws-us",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-decathlon-aws-us",
                    "priority": 1001,
                    "source_ranges": [
                        "18.204.189.189",
                        "34.225.184.32"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false,
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-azure-china\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "decathlon-azure-china",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize decathlon-azure-china",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-decathlon-azure-china",
                    "priority": 1001,
                    "source_ranges": [
                        "40.73.104.195",
                        "40.73.105.107"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false,
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"decathlon-cube-china\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "decathlon-cube-china",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize decathlon-cube-china",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-decathlon-cube-china",
                    "priority": 1001,
                    "source_ranges": [
                        "52.76.100.183"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"imperva\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "imperva",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize imperva",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-imperva",
                    "priority": 1001,
                    "source_ranges": [
                        "103.28.248.0/22",
                        "107.154.0.0/16",
                        "149.126.72.0/21",
                        "185.11.124.0/22",
                        "192.230.64.0/18",
                        "198.143.32.0/19",
                        "199.83.128.0/21",
                        "45.223.0.0/16",
                        "45.60.0.0/16",
                        "45.64.64.0/22"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_firewall.k8s_fw_ips_ranges_to_whitelist[\"zscaler\"]",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "k8s_fw_ips_ranges_to_whitelist",
            "index": "zscaler",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "80",
                                "443"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by Terraform to authorize zscaler",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "k8s-fw-zscaler",
                    "priority": 1001,
                    "source_ranges": [
                        "1.234.57.0/24",
                        "104.129.192.0/20",
                        "104.129.192.0/23",
                        "104.129.194.0/23",
                        "104.129.196.0/23",
                        "104.129.198.0/23",
                        "104.129.200.0/24",
                        "104.129.204.0/23",
                        "119.137.170.0/24",
                        "124.248.141.0/24",
                        "154.113.23.0/24",
                        "165.225.0.0/17",
                        "165.225.10.0/23",
                        "165.225.102.0/24",
                        "165.225.104.0/24",
                        "165.225.106.0/23",
                        "165.225.110.0/23",
                        "165.225.112.0/23",
                        "165.225.114.0/23",
                        "165.225.116.0/23",
                        "165.225.192.0/18",
                        "165.225.192.0/23",
                        "165.225.194.0/23",
                        "165.225.196.0/23",
                        "165.225.200.0/23",
                        "165.225.204.0/23",
                        "165.225.208.0/23",
                        "165.225.210.0/23",
                        "165.225.212.0/23",
                        "165.225.214.0/23",
                        "165.225.226.0/23",
                        "165.225.26.0/23",
                        "165.225.32.0/23",
                        "165.225.34.0/23",
                        "165.225.36.0/23",
                        "165.225.38.0/23",
                        "165.225.50.0/23",
                        "165.225.56.0/22",
                        "165.225.64.0/24",
                        "165.225.66.0/24",
                        "165.225.68.0/24",
                        "165.225.72.0/22",
                        "165.225.76.0/23",
                        "165.225.8.0/23",
                        "165.225.80.0/22",
                        "165.225.84.0/23",
                        "165.225.86.0/23",
                        "165.225.88.0/23",
                        "165.225.92.0/23",
                        "165.225.98.0/24",
                        "175.45.116.0/24",
                        "185.46.212.0/22",
                        "185.46.212.0/23",
                        "185.46.212.88",
                        "185.46.212.89",
                        "185.46.212.90",
                        "185.46.212.91",
                        "185.46.212.92",
                        "185.46.212.93",
                        "185.46.212.97",
                        "185.46.212.98",
                        "185.46.214.0/23",
                        "196.23.154.64/27",
                        "197.156.241.224/27",
                        "197.98.201.0/24",
                        "211.144.19.0/24",
                        "213.52.102.0/24",
                        "221.122.91.0/24",
                        "49.236.207.160/27",
                        "58.220.95.0/24",
                        "64.215.22.0/24",
                        "89.167.129.0/24",
                        "94.188.248.64/26"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "cnp-standalone-eghe"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "project": true,
                    "self_link": true,
                    "source_ranges": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_compute_network.vpc_network",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_compute_network",
            "name": "vpc_network",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "auto_create_subnetworks": false,
                    "delete_default_routes_on_create": false,
                    "description": null,
                    "project": "cnp-standalone-eghe",
                    "routing_mode": "GLOBAL",
                    "timeouts": null
                },
                "after_unknown": {
                    "gateway_ipv4": true,
                    "id": true,
                    "mtu": true,
                    "name": true,
                    "self_link": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_project_service.servicenetworking_api",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_project_service",
            "name": "servicenetworking_api",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "disable_dependent_services": null,
                    "disable_on_destroy": false,
                    "project": "cnp-standalone-eghe",
                    "service": "servicenetworking.googleapis.com",
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].google_project_service.serviceusage_api",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "google_project_service",
            "name": "serviceusage_api",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "disable_dependent_services": null,
                    "disable_on_destroy": false,
                    "project": "cnp-standalone-eghe",
                    "service": "serviceusage.googleapis.com",
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.base_networking_vpc[0].random_string.random",
            "module_address": "module.cpe_stack_instance.module.base_networking_vpc[0]",
            "mode": "managed",
            "type": "random_string",
            "name": "random",
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "keepers": null,
                    "length": 5,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "override_special": null,
                    "special": false,
                    "upper": false
                },
                "after_unknown": {
                    "id": true,
                    "result": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.cloud_nat.google_compute_address.ip_cloud_nat",
            "module_address": "module.cpe_stack_instance.module.cloud_nat",
            "mode": "managed",
            "type": "google_compute_address",
            "name": "ip_cloud_nat",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address_type": "EXTERNAL",
                    "description": null,
                    "name": "ip-cloud-nat",
                    "project": "cnp-standalone-eghe",
                    "region": "europe-west4",
                    "timeouts": null
                },
                "after_unknown": {
                    "address": true,
                    "creation_timestamp": true,
                    "id": true,
                    "network_tier": true,
                    "purpose": true,
                    "self_link": true,
                    "subnetwork": true,
                    "users": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.cloud_nat.google_compute_router.router",
            "module_address": "module.cpe_stack_instance.module.cloud_nat",
            "mode": "managed",
            "type": "google_compute_router",
            "name": "router",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "bgp": [
                        {
                            "advertise_mode": "DEFAULT",
                            "advertised_groups": null,
                            "advertised_ip_ranges": [],
                            "asn": 4200000000
                        }
                    ],
                    "description": null,
                    "name": "cloud-router",
                    "project": "cnp-standalone-eghe",
                    "region": "europe-west4",
                    "timeouts": null
                },
                "after_unknown": {
                    "bgp": [
                        {
                            "advertised_ip_ranges": []
                        }
                    ],
                    "creation_timestamp": true,
                    "id": true,
                    "network": true,
                    "self_link": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.cloud_nat.google_compute_router_nat.nat",
            "module_address": "module.cpe_stack_instance.module.cloud_nat",
            "mode": "managed",
            "type": "google_compute_router_nat",
            "name": "nat",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "drain_nat_ips": null,
                    "icmp_idle_timeout_sec": 30,
                    "log_config": [],
                    "min_ports_per_vm": null,
                    "name": "nat",
                    "nat_ip_allocate_option": "MANUAL_ONLY",
                    "project": "cnp-standalone-eghe",
                    "region": "europe-west4",
                    "router": "cloud-router",
                    "source_subnetwork_ip_ranges_to_nat": "ALL_SUBNETWORKS_ALL_IP_RANGES",
                    "subnetwork": [],
                    "tcp_established_idle_timeout_sec": 1200,
                    "tcp_transitory_idle_timeout_sec": 30,
                    "timeouts": null,
                    "udp_idle_timeout_sec": 30
                },
                "after_unknown": {
                    "id": true,
                    "log_config": [],
                    "nat_ips": true,
                    "subnetwork": []
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.google_compute_address.public_ip_istiogateway",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "google_compute_address",
            "name": "public_ip_istiogateway",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address_type": "EXTERNAL",
                    "description": null,
                    "name": "cluster01-istiogw-ip",
                    "network_tier": "PREMIUM",
                    "project": "cnp-standalone-eghe",
                    "region": "europe-west4",
                    "timeouts": null
                },
                "after_unknown": {
                    "address": true,
                    "creation_timestamp": true,
                    "id": true,
                    "purpose": true,
                    "self_link": true,
                    "subnetwork": true,
                    "users": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_gar",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account_gar",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/artifactregistry.reader"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_log_writer",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account_log_writer",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/logging.logWriter"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_metric_writer",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account_metric_writer",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/monitoring.metricWriter"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_monitoring_viewer",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account_monitoring_viewer",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/monitoring.viewer"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.google_project_iam_member.cluster_service_account_resource_metadata_writer",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account_resource_metadata_writer",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/stackdriver.resourceMetadata.writer"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.google_project_service.kubernetesengine_api",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "google_project_service",
            "name": "kubernetesengine_api",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "disable_dependent_services": null,
                    "disable_on_destroy": false,
                    "project": "cnp-standalone-eghe",
                    "service": "container.googleapis.com",
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.google_service_account.cluster_service_account",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "google_service_account",
            "name": "cluster_service_account",
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "account_id": "cluster01",
                    "description": null,
                    "display_name": "Terraform-managed service account for gke cluster",
                    "project": "cnp-standalone-eghe",
                    "timeouts": null
                },
                "after_unknown": {
                    "email": true,
                    "id": true,
                    "name": true,
                    "unique_id": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.data.google_compute_subnetwork.gke_subnetwork[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "data",
            "type": "google_compute_subnetwork",
            "name": "gke_subnetwork",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "read"
                ],
                "before": null,
                "after": {
                    "project": "cnp-standalone-eghe",
                    "region": "europe-west4"
                },
                "after_unknown": {
                    "description": true,
                    "gateway_address": true,
                    "id": true,
                    "ip_cidr_range": true,
                    "name": true,
                    "network": true,
                    "private_ip_google_access": true,
                    "secondary_ip_range": true,
                    "self_link": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_compute_firewall.intra_egress[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "intra_egress",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [],
                            "protocol": "ah"
                        },
                        {
                            "ports": [],
                            "protocol": "esp"
                        },
                        {
                            "ports": [],
                            "protocol": "icmp"
                        },
                        {
                            "ports": [],
                            "protocol": "sctp"
                        },
                        {
                            "ports": [],
                            "protocol": "tcp"
                        },
                        {
                            "ports": [],
                            "protocol": "udp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by terraform gke module: Allow pods to communicate with each other and the master",
                    "direction": "EGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "gke-cluster01-intra-cluster-egress",
                    "priority": 1000,
                    "project": "cnp-standalone-eghe",
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "gke-cluster01"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": []
                        },
                        {
                            "ports": []
                        },
                        {
                            "ports": []
                        },
                        {
                            "ports": []
                        },
                        {
                            "ports": []
                        },
                        {
                            "ports": []
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "self_link": true,
                    "source_ranges": true,
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_compute_firewall.master_webhooks[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_compute_firewall",
            "name": "master_webhooks",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow": [
                        {
                            "ports": [
                                "443",
                                "10250",
                                "15017"
                            ],
                            "protocol": "tcp"
                        }
                    ],
                    "deny": [],
                    "description": "Managed by terraform gke module: Allow master to hit pods for admission controllers/webhooks",
                    "direction": "INGRESS",
                    "disabled": null,
                    "log_config": [],
                    "name": "gke-cluster01-webhooks",
                    "priority": 1000,
                    "project": "cnp-standalone-eghe",
                    "source_ranges": [
                        "10.253.0.0/28"
                    ],
                    "source_service_accounts": null,
                    "source_tags": null,
                    "target_service_accounts": null,
                    "target_tags": [
                        "gke-cluster01"
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "allow": [
                        {
                            "ports": [
                                false,
                                false,
                                false
                            ]
                        }
                    ],
                    "creation_timestamp": true,
                    "deny": [],
                    "destination_ranges": true,
                    "enable_logging": true,
                    "id": true,
                    "log_config": [],
                    "network": true,
                    "self_link": true,
                    "source_ranges": [
                        false
                    ],
                    "target_tags": [
                        false
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_container_cluster.primary",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_container_cluster",
            "name": "primary",
            "provider_name": "registry.terraform.io/hashicorp/google-beta",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "addons_config": [
                        {
                            "config_connector_config": [
                                {
                                    "enabled": false
                                }
                            ],
                            "dns_cache_config": [
                                {
                                    "enabled": false
                                }
                            ],
                            "gce_persistent_disk_csi_driver_config": [
                                {
                                    "enabled": false
                                }
                            ],
                            "horizontal_pod_autoscaling": [
                                {
                                    "disabled": false
                                }
                            ],
                            "http_load_balancing": [
                                {
                                    "disabled": true
                                }
                            ],
                            "istio_config": [
                                {
                                    "auth": "AUTH_MUTUAL_TLS",
                                    "disabled": false
                                }
                            ],
                            "kalm_config": [
                                {
                                    "enabled": false
                                }
                            ],
                            "network_policy_config": [
                                {
                                    "disabled": false
                                }
                            ]
                        }
                    ],
                    "authenticator_groups_config": [
                        {
                            "security_group": "gke-security-groups@decathlon.net"
                        }
                    ],
                    "cluster_autoscaling": [
                        {
                            "autoscaling_profile": "BALANCED",
                            "enabled": false,
                            "resource_limits": []
                        }
                    ],
                    "database_encryption": [
                        {
                            "key_name": "",
                            "state": "DECRYPTED"
                        }
                    ],
                    "default_max_pods_per_node": 110,
                    "default_snat_status": [
                        {
                            "disabled": false
                        }
                    ],
                    "description": "",
                    "enable_binary_authorization": false,
                    "enable_intranode_visibility": false,
                    "enable_kubernetes_alpha": false,
                    "enable_legacy_abac": false,
                    "enable_shielded_nodes": true,
                    "enable_tpu": false,
                    "initial_node_count": null,
                    "ip_allocation_policy": [
                        {
                            "cluster_secondary_range_name": "k8s-services-pods",
                            "services_secondary_range_name": "k8s-services-range"
                        }
                    ],
                    "location": "europe-west4",
                    "logging_service": "logging.googleapis.com/kubernetes",
                    "maintenance_policy": [
                        {
                            "daily_maintenance_window": [
                                {
                                    "start_time": "05:00"
                                }
                            ],
                            "recurring_window": []
                        }
                    ],
                    "master_auth": [
                        {
                            "client_certificate_config": [
                                {
                                    "issue_client_certificate": false
                                }
                            ],
                            "password": "",
                            "username": ""
                        }
                    ],
                    "master_authorized_networks_config": [],
                    "min_master_version": null,
                    "monitoring_service": "monitoring.googleapis.com/kubernetes",
                    "name": "cluster01",
                    "network_policy": [
                        {
                            "enabled": true,
                            "provider": "CALICO"
                        }
                    ],
                    "networking_mode": "VPC_NATIVE",
                    "node_pool": [
                        {
                            "autoscaling": [],
                            "initial_node_count": 0,
                            "name": "default-pool",
                            "node_config": [
                                {
                                    "boot_disk_kms_key": null,
                                    "kubelet_config": [],
                                    "linux_node_config": [],
                                    "min_cpu_platform": null,
                                    "preemptible": false,
                                    "sandbox_config": [],
                                    "tags": null,
                                    "workload_metadata_config": [
                                        {
                                            "node_metadata": "GKE_METADATA_SERVER"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "pod_security_policy_config": [],
                    "private_cluster_config": [
                        {
                            "enable_private_endpoint": null,
                            "enable_private_nodes": true,
                            "master_global_access_config": [
                                {
                                    "enabled": true
                                }
                            ],
                            "master_ipv4_cidr_block": "10.253.0.0/28"
                        }
                    ],
                    "project": "cnp-standalone-eghe",
                    "release_channel": [
                        {
                            "channel": "REGULAR"
                        }
                    ],
                    "remove_default_node_pool": true,
                    "resource_labels": {
                        "application": "monapp",
                        "cluster-name": "cluster01",
                        "project": "cnp-standalone-eghe",
                        "region": "europe-west4"
                    },
                    "resource_usage_export_config": [],
                    "timeouts": {
                        "create": "45m",
                        "delete": "45m",
                        "read": null,
                        "update": "45m"
                    },
                    "vertical_pod_autoscaling": [
                        {
                            "enabled": true
                        }
                    ],
                    "workload_identity_config": [
                        {
                            "identity_namespace": "cnp-standalone-eghe.svc.id.goog"
                        }
                    ]
                },
                "after_unknown": {
                    "addons_config": [
                        {
                            "cloudrun_config": true,
                            "config_connector_config": [
                                {}
                            ],
                            "dns_cache_config": [
                                {}
                            ],
                            "gce_persistent_disk_csi_driver_config": [
                                {}
                            ],
                            "horizontal_pod_autoscaling": [
                                {}
                            ],
                            "http_load_balancing": [
                                {}
                            ],
                            "istio_config": [
                                {}
                            ],
                            "kalm_config": [
                                {}
                            ],
                            "network_policy_config": [
                                {}
                            ]
                        }
                    ],
                    "authenticator_groups_config": [
                        {}
                    ],
                    "cluster_autoscaling": [
                        {
                            "auto_provisioning_defaults": true,
                            "resource_limits": []
                        }
                    ],
                    "cluster_ipv4_cidr": true,
                    "cluster_telemetry": true,
                    "confidential_nodes": true,
                    "database_encryption": [
                        {}
                    ],
                    "datapath_provider": true,
                    "default_snat_status": [
                        {}
                    ],
                    "endpoint": true,
                    "id": true,
                    "instance_group_urls": true,
                    "ip_allocation_policy": [
                        {
                            "cluster_ipv4_cidr_block": true,
                            "services_ipv4_cidr_block": true
                        }
                    ],
                    "label_fingerprint": true,
                    "maintenance_policy": [
                        {
                            "daily_maintenance_window": [
                                {
                                    "duration": true
                                }
                            ],
                            "recurring_window": []
                        }
                    ],
                    "master_auth": [
                        {
                            "client_certificate": true,
                            "client_certificate_config": [
                                {}
                            ],
                            "client_key": true,
                            "cluster_ca_certificate": true
                        }
                    ],
                    "master_authorized_networks_config": [],
                    "master_version": true,
                    "network": true,
                    "network_policy": [
                        {}
                    ],
                    "node_config": true,
                    "node_locations": true,
                    "node_pool": [
                        {
                            "autoscaling": [],
                            "instance_group_urls": true,
                            "management": true,
                            "max_pods_per_node": true,
                            "name_prefix": true,
                            "node_config": [
                                {
                                    "disk_size_gb": true,
                                    "disk_type": true,
                                    "guest_accelerator": true,
                                    "image_type": true,
                                    "kubelet_config": [],
                                    "labels": true,
                                    "linux_node_config": [],
                                    "local_ssd_count": true,
                                    "machine_type": true,
                                    "metadata": true,
                                    "oauth_scopes": true,
                                    "sandbox_config": [],
                                    "service_account": true,
                                    "shielded_instance_config": true,
                                    "taint": true,
                                    "workload_metadata_config": [
                                        {}
                                    ]
                                }
                            ],
                            "node_count": true,
                            "node_locations": true,
                            "upgrade_settings": true,
                            "version": true
                        }
                    ],
                    "node_version": true,
                    "notification_config": true,
                    "operation": true,
                    "pod_security_policy_config": [],
                    "private_cluster_config": [
                        {
                            "master_global_access_config": [
                                {}
                            ],
                            "peering_name": true,
                            "private_endpoint": true,
                            "public_endpoint": true
                        }
                    ],
                    "release_channel": [
                        {}
                    ],
                    "resource_labels": {},
                    "resource_usage_export_config": [],
                    "self_link": true,
                    "services_ipv4_cidr": true,
                    "subnetwork": true,
                    "timeouts": {},
                    "tpu_ipv4_cidr_block": true,
                    "vertical_pod_autoscaling": [
                        {}
                    ],
                    "workload_identity_config": [
                        {}
                    ]
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_container_node_pool.pools[\"pool-01\"]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_container_node_pool",
            "name": "pools",
            "index": "pool-01",
            "provider_name": "registry.terraform.io/hashicorp/google-beta",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "autoscaling": [
                        {
                            "max_node_count": 2,
                            "min_node_count": 1
                        }
                    ],
                    "cluster": "cluster01",
                    "initial_node_count": 1,
                    "location": "europe-west4",
                    "management": [
                        {
                            "auto_repair": true,
                            "auto_upgrade": true
                        }
                    ],
                    "name": "pool-01",
                    "node_config": [
                        {
                            "boot_disk_kms_key": "",
                            "disk_size_gb": 100,
                            "disk_type": "pd-standard",
                            "guest_accelerator": [],
                            "image_type": "CAS",
                            "kubelet_config": [],
                            "labels": {
                                "cluster_name": "cluster01",
                                "node_pool": "pool-01"
                            },
                            "linux_node_config": [],
                            "local_ssd_count": 0,
                            "machine_type": "n1-standard-4",
                            "metadata": {
                                "cluster_name": "cluster01",
                                "disable-legacy-endpoints": "true",
                                "node_pool": "pool-01"
                            },
                            "min_cpu_platform": null,
                            "oauth_scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ],
                            "preemptible": false,
                            "sandbox_config": [],
                            "shielded_instance_config": [
                                {
                                    "enable_integrity_monitoring": true,
                                    "enable_secure_boot": false
                                }
                            ],
                            "tags": [
                                "gke-cluster01",
                                "gke-cluster01-pool-01"
                            ],
                            "taint": [
                                {
                                    "effect": "PREFER_NO_SCHEDULE",
                                    "key": "pool-01",
                                    "value": "true"
                                }
                            ],
                            "workload_metadata_config": [
                                {
                                    "node_metadata": "GKE_METADATA_SERVER"
                                }
                            ]
                        }
                    ],
                    "project": "cnp-standalone-eghe",
                    "timeouts": {
                        "create": "45m",
                        "delete": "45m",
                        "update": "45m"
                    },
                    "upgrade_settings": [
                        {
                            "max_surge": 1,
                            "max_unavailable": 0
                        }
                    ]
                },
                "after_unknown": {
                    "autoscaling": [
                        {}
                    ],
                    "id": true,
                    "instance_group_urls": true,
                    "management": [
                        {}
                    ],
                    "max_pods_per_node": true,
                    "name_prefix": true,
                    "node_config": [
                        {
                            "guest_accelerator": [],
                            "kubelet_config": [],
                            "labels": {},
                            "linux_node_config": [],
                            "metadata": {},
                            "oauth_scopes": [
                                false
                            ],
                            "sandbox_config": [],
                            "service_account": true,
                            "shielded_instance_config": [
                                {}
                            ],
                            "tags": [
                                false,
                                false
                            ],
                            "taint": [
                                {}
                            ],
                            "workload_metadata_config": [
                                {}
                            ]
                        }
                    ],
                    "node_count": true,
                    "node_locations": true,
                    "timeouts": {},
                    "upgrade_settings": [
                        {}
                    ],
                    "version": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_container_node_pool.pools[\"pool-02\"]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_container_node_pool",
            "name": "pools",
            "index": "pool-02",
            "provider_name": "registry.terraform.io/hashicorp/google-beta",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "autoscaling": [
                        {
                            "max_node_count": 5,
                            "min_node_count": 0
                        }
                    ],
                    "cluster": "cluster01",
                    "initial_node_count": 0,
                    "location": "europe-west4",
                    "management": [
                        {
                            "auto_repair": true,
                            "auto_upgrade": true
                        }
                    ],
                    "name": "pool-02",
                    "node_config": [
                        {
                            "boot_disk_kms_key": "",
                            "disk_size_gb": 100,
                            "disk_type": "pd-standard",
                            "guest_accelerator": [],
                            "image_type": "CAS",
                            "kubelet_config": [],
                            "labels": {
                                "cluster_name": "cluster01",
                                "node_pool": "pool-02"
                            },
                            "linux_node_config": [],
                            "local_ssd_count": 0,
                            "machine_type": "n1-standard-4",
                            "metadata": {
                                "cluster_name": "cluster01",
                                "disable-legacy-endpoints": "true",
                                "node_pool": "pool-02"
                            },
                            "min_cpu_platform": null,
                            "oauth_scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ],
                            "preemptible": false,
                            "sandbox_config": [],
                            "shielded_instance_config": [
                                {
                                    "enable_integrity_monitoring": true,
                                    "enable_secure_boot": false
                                }
                            ],
                            "tags": [
                                "gke-cluster01",
                                "gke-cluster01-pool-02"
                            ],
                            "workload_metadata_config": [
                                {
                                    "node_metadata": "GKE_METADATA_SERVER"
                                }
                            ]
                        }
                    ],
                    "project": "cnp-standalone-eghe",
                    "timeouts": {
                        "create": "45m",
                        "delete": "45m",
                        "update": "45m"
                    },
                    "upgrade_settings": [
                        {
                            "max_surge": 1,
                            "max_unavailable": 0
                        }
                    ]
                },
                "after_unknown": {
                    "autoscaling": [
                        {}
                    ],
                    "id": true,
                    "instance_group_urls": true,
                    "management": [
                        {}
                    ],
                    "max_pods_per_node": true,
                    "name_prefix": true,
                    "node_config": [
                        {
                            "guest_accelerator": [],
                            "kubelet_config": [],
                            "labels": {},
                            "linux_node_config": [],
                            "metadata": {},
                            "oauth_scopes": [
                                false
                            ],
                            "sandbox_config": [],
                            "service_account": true,
                            "shielded_instance_config": [
                                {}
                            ],
                            "tags": [
                                false,
                                false
                            ],
                            "taint": true,
                            "workload_metadata_config": [
                                {}
                            ]
                        }
                    ],
                    "node_count": true,
                    "node_locations": true,
                    "timeouts": {},
                    "upgrade_settings": [
                        {}
                    ],
                    "version": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_project_iam_member.cluster_service_account-log_writer[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account-log_writer",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/logging.logWriter"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_project_iam_member.cluster_service_account-metric_writer[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account-metric_writer",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/monitoring.metricWriter"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account-monitoring_viewer",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/monitoring.viewer"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_project_iam_member.cluster_service_account-resourceMetadata-writer[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_project_iam_member",
            "name": "cluster_service_account-resourceMetadata-writer",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "condition": [],
                    "project": "cnp-standalone-eghe",
                    "role": "roles/stackdriver.resourceMetadata.writer"
                },
                "after_unknown": {
                    "condition": [],
                    "etag": true,
                    "id": true,
                    "member": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.google_service_account.cluster_service_account[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "google_service_account",
            "name": "cluster_service_account",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/google",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": null,
                    "display_name": "Terraform-managed service account for cluster cluster01",
                    "project": "cnp-standalone-eghe",
                    "timeouts": null
                },
                "after_unknown": {
                    "account_id": true,
                    "email": true,
                    "id": true,
                    "name": true,
                    "unique_id": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_delete_default_kube_dns_configmap.module.gcloud_kubectl.data.external.env_override",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_delete_default_kube_dns_configmap.module.gcloud_kubectl",
            "mode": "data",
            "type": "external",
            "name": "env_override",
            "provider_name": "registry.terraform.io/hashicorp/external",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "id": "-",
                    "program": [
                        ".terraform/modules/cpe_stack_instance.gcp_gke.gke.gcloud_delete_default_kube_dns_configmap/scripts/check_env.sh"
                    ],
                    "query": null,
                    "result": {
                        "download": ""
                    },
                    "working_dir": null
                },
                "after": {
                    "id": "-",
                    "program": [
                        ".terraform/modules/cpe_stack_instance.gcp_gke.gke.gcloud_delete_default_kube_dns_configmap/scripts/check_env.sh"
                    ],
                    "query": null,
                    "result": {
                        "download": ""
                    },
                    "working_dir": null
                },
                "after_unknown": {}
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_delete_default_kube_dns_configmap.module.gcloud_kubectl.null_resource.module_depends_on[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_delete_default_kube_dns_configmap.module.gcloud_kubectl",
            "mode": "managed",
            "type": "null_resource",
            "name": "module_depends_on",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/null",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "triggers": {
                        "value": "4"
                    }
                },
                "after_unknown": {
                    "id": true,
                    "triggers": {}
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_wait_for_cluster.data.external.env_override",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_wait_for_cluster",
            "mode": "data",
            "type": "external",
            "name": "env_override",
            "provider_name": "registry.terraform.io/hashicorp/external",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "id": "-",
                    "program": [
                        ".terraform/modules/cpe_stack_instance.gcp_gke.gke.gcloud_wait_for_cluster/scripts/check_env.sh"
                    ],
                    "query": null,
                    "result": {
                        "download": ""
                    },
                    "working_dir": null
                },
                "after": {
                    "id": "-",
                    "program": [
                        ".terraform/modules/cpe_stack_instance.gcp_gke.gke.gcloud_wait_for_cluster/scripts/check_env.sh"
                    ],
                    "query": null,
                    "result": {
                        "download": ""
                    },
                    "working_dir": null
                },
                "after_unknown": {}
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_wait_for_cluster.null_resource.module_depends_on[0]",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke.module.gcloud_wait_for_cluster",
            "mode": "managed",
            "type": "null_resource",
            "name": "module_depends_on",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/null",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "triggers": {
                        "value": "3"
                    }
                },
                "after_unknown": {
                    "id": true,
                    "triggers": {}
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.random_shuffle.available_zones",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "random_shuffle",
            "name": "available_zones",
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "input": [
                        "europe-west4-a",
                        "europe-west4-b",
                        "europe-west4-c"
                    ],
                    "keepers": null,
                    "result_count": 3,
                    "seed": null
                },
                "after_unknown": {
                    "id": true,
                    "input": [
                        false,
                        false,
                        false
                    ],
                    "result": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.module.gke.random_string.cluster_service_account_suffix",
            "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
            "mode": "managed",
            "type": "random_string",
            "name": "cluster_service_account_suffix",
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "keepers": null,
                    "length": 4,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "override_special": null,
                    "special": false,
                    "upper": false
                },
                "after_unknown": {
                    "id": true,
                    "result": true
                }
            }
        },
        {
            "address": "module.cpe_stack_instance.module.gcp_gke.null_resource.istio_loadbalancer_ip_patch",
            "module_address": "module.cpe_stack_instance.module.gcp_gke",
            "mode": "managed",
            "type": "null_resource",
            "name": "istio_loadbalancer_ip_patch",
            "provider_name": "registry.terraform.io/hashicorp/null",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "triggers": null
                },
                "after_unknown": {
                    "id": true
                }
            }
        }
    ],
    "prior_state": {
        "format_version": "0.1",
        "terraform_version": "0.13.4",
        "values": {
            "root_module": {}
        }
    },
    "configuration": {
        "provider_config": {
            "module.cpe_stack_instance.module.gcp_gke.module.gke:kubernetes": {
                "name": "kubernetes",
                "version_constraint": "~\u003e 1.10, != 1.11.0",
                "module_address": "module.cpe_stack_instance.module.gcp_gke.module.gke",
                "expressions": {
                    "cluster_ca_certificate": {
                        "references": [
                            "local.cluster_ca_certificate"
                        ]
                    },
                    "host": {
                        "references": [
                            "local.cluster_endpoint"
                        ]
                    },
                    "load_config_file": {
                        "constant_value": false
                    },
                    "token": {
                        "references": [
                            "data.google_client_config.default"
                        ]
                    }
                }
            },
            "module.cpe_stack_instance:aiven": {
                "name": "aiven",
                "module_address": "module.cpe_stack_instance",
                "expressions": {
                    "api_token": {
                        "references": [
                            "var.aiven_api_token"
                        ]
                    }
                }
            },
            "module.cpe_stack_instance:google": {
                "name": "google",
                "module_address": "module.cpe_stack_instance",
                "expressions": {
                    "project": {
                        "references": [
                            "local.gcp_project_id"
                        ]
                    },
                    "region": {
                        "references": [
                            "local.gcp_default_region"
                        ]
                    }
                }
            },
            "module.cpe_stack_instance:google-beta": {
                "name": "google-beta",
                "module_address": "module.cpe_stack_instance",
                "expressions": {
                    "project": {
                        "references": [
                            "local.gcp_project_id"
                        ]
                    },
                    "region": {
                        "references": [
                            "local.gcp_default_region"
                        ]
                    }
                }
            },
            "module.cpe_stack_instance:ultradns": {
                "name": "ultradns",
                "module_address": "module.cpe_stack_instance",
                "expressions": {
                    "baseurl": {
                        "constant_value": "https://api.ultradns.com/"
                    },
                    "password": {
                        "references": [
                            "var.ultradns_password"
                        ]
                    },
                    "username": {
                        "references": [
                            "var.ultradns_username"
                        ]
                    }
                }
            }
        },
        "root_module": {
            "module_calls": {
                "cpe_stack_instance": {
                    "source": "../meta/resources",
                    "expressions": {
                        "aiven_api_token": {
                            "references": [
                                "var.aiven_api_token"
                            ]
                        },
                        "aiven_project_id": {
                            "references": [
                                "var.aiven_project_id"
                            ]
                        },
                        "application_name": {
                            "references": [
                                "var.application_name"
                            ]
                        },
                        "gcp_project_id": {
                            "references": [
                                "var.gcp_project_id"
                            ]
                        },
                        "stack_config_file": {
                            "references": [
                                "var.stack_template",
                                "var.stack_vars"
                            ]
                        },
                        "ultradns_password": {
                            "references": [
                                "var.ultradns_password"
                            ]
                        },
                        "ultradns_username": {
                            "references": [
                                "var.ultradns_username"
                            ]
                        }
                    },
                    "module": {
                        "resources": [
                            {
                                "address": "google_artifact_registry_repository.docker_repository",
                                "mode": "managed",
                                "type": "google_artifact_registry_repository",
                                "name": "docker_repository",
                                "provider_config_key": "cpe_stack_instance:google-beta",
                                "expressions": {
                                    "description": {
                                        "constant_value": "docker repository"
                                    },
                                    "format": {
                                        "constant_value": "DOCKER"
                                    },
                                    "location": {
                                        "references": [
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "repository_id": {
                                        "constant_value": "docker"
                                    }
                                },
                                "schema_version": 0,
                                "depends_on": [
                                    "google_project_service.artifact_registry"
                                ]
                            },
                            {
                                "address": "google_artifact_registry_repository_iam_member.repository_iam",
                                "mode": "managed",
                                "type": "google_artifact_registry_repository_iam_member",
                                "name": "repository_iam",
                                "provider_config_key": "cpe_stack_instance:google-beta",
                                "expressions": {
                                    "location": {
                                        "references": [
                                            "google_artifact_registry_repository.docker_repository"
                                        ]
                                    },
                                    "member": {
                                        "references": [
                                            "google_service_account.repository_account"
                                        ]
                                    },
                                    "repository": {
                                        "references": [
                                            "google_artifact_registry_repository.docker_repository"
                                        ]
                                    },
                                    "role": {
                                        "constant_value": "roles/artifactregistry.writer"
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "google_compute_network_peering.aiven_gcp",
                                "mode": "managed",
                                "type": "google_compute_network_peering",
                                "name": "aiven_gcp",
                                "provider_config_key": "cpe_stack_instance:google",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "network": {
                                        "references": [
                                            "module.base_networking_vpc[0].vpc_selflink"
                                        ]
                                    },
                                    "peer_network": {
                                        "references": [
                                            "module.aiven_network[0].aiven_vpc_peering_connection",
                                            "local.gcp_default_region",
                                            "module.aiven_network[0].aiven_vpc_peering_connection",
                                            "local.gcp_default_region"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.aiven_is_defined"
                                    ]
                                }
                            },
                            {
                                "address": "google_project_service.artifact_registry",
                                "mode": "managed",
                                "type": "google_project_service",
                                "name": "artifact_registry",
                                "provider_config_key": "cpe_stack_instance:google",
                                "expressions": {
                                    "disable_on_destroy": {
                                        "constant_value": false
                                    },
                                    "project": {
                                        "references": [
                                            "local.gcp_project_id"
                                        ]
                                    },
                                    "service": {
                                        "constant_value": "artifactregistry.googleapis.com"
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "google_service_account.repository_account",
                                "mode": "managed",
                                "type": "google_service_account",
                                "name": "repository_account",
                                "provider_config_key": "cpe_stack_instance:google-beta",
                                "expressions": {
                                    "account_id": {
                                        "constant_value": "artifact-registry-sa"
                                    },
                                    "display_name": {
                                        "constant_value": "Repository Service Account"
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "data.aiven_project.project",
                                "mode": "data",
                                "type": "aiven_project",
                                "name": "project",
                                "provider_config_key": "cpe_stack_instance:aiven",
                                "expressions": {
                                    "project": {
                                        "references": [
                                            "local.aiven_project_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.aiven_is_defined"
                                    ]
                                }
                            }
                        ],
                        "module_calls": {
                            "aiven_elasticsearch": {
                                "source": "../../modules/aiven/service",
                                "expressions": {
                                    "aiven_project_id": {
                                        "references": [
                                            "local.aiven_project_id"
                                        ]
                                    },
                                    "aiven_project_vpc_id": {
                                        "references": [
                                            "local.aiven_project_vpc_id"
                                        ]
                                    },
                                    "csp_name": {
                                        "references": [
                                            "local.csp_name"
                                        ]
                                    },
                                    "csp_region": {
                                        "references": [
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "maintenance_window_dow": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "maintenance_window_time": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_advanced_configuration": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "each.key"
                                        ]
                                    },
                                    "service_plan": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_termination_protection": {
                                        "references": [
                                            "local.aiven_service_termination_protection"
                                        ]
                                    },
                                    "service_type": {
                                        "constant_value": "elasticsearch"
                                    },
                                    "service_users": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_version": {
                                        "references": [
                                            "each.value"
                                        ]
                                    }
                                },
                                "for_each_expression": {
                                    "references": [
                                        "local.aiven_block"
                                    ]
                                },
                                "module": {
                                    "outputs": {
                                        "services": {
                                            "expression": {
                                                "constant_value": "aiven_service.service"
                                            },
                                            "description": "aiven services"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aiven_elasticsearch_acl.elasticsearch_acl",
                                            "mode": "managed",
                                            "type": "aiven_elasticsearch_acl",
                                            "name": "elasticsearch_acl",
                                            "provider_config_key": "aiven_elasticsearch:aiven",
                                            "expressions": {
                                                "acl": [
                                                    {
                                                        "rule": [
                                                            {
                                                                "index": {
                                                                    "constant_value": "_*"
                                                                },
                                                                "permission": {
                                                                    "constant_value": "admin"
                                                                }
                                                            },
                                                            {
                                                                "index": {
                                                                    "constant_value": "*"
                                                                },
                                                                "permission": {
                                                                    "constant_value": "admin"
                                                                }
                                                            }
                                                        ],
                                                        "username": {
                                                            "constant_value": "avnadmin"
                                                        }
                                                    }
                                                ],
                                                "enabled": {
                                                    "constant_value": true
                                                },
                                                "extended_acl": {
                                                    "constant_value": false
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "local.elasticsearch_for_each"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_kafka_acl.kafka_acl",
                                            "mode": "managed",
                                            "type": "aiven_kafka_acl",
                                            "name": "kafka_acl",
                                            "provider_config_key": "aiven_elasticsearch:aiven",
                                            "expressions": {
                                                "permission": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "topic": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.service_type",
                                                    "local.kafka_users_acl_list"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_kafka_topic.topic",
                                            "mode": "managed",
                                            "type": "aiven_kafka_topic",
                                            "name": "topic",
                                            "provider_config_key": "aiven_elasticsearch:aiven",
                                            "expressions": {
                                                "cleanup_policy": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "minimum_in_sync_replicas": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "partitions": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "replication": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_bytes": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_hours": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "termination_protection": {
                                                    "references": [
                                                        "var.service_termination_protection"
                                                    ]
                                                },
                                                "topic_name": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.kafka_topics"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_service.service",
                                            "mode": "managed",
                                            "type": "aiven_service",
                                            "name": "service",
                                            "provider_config_key": "aiven_elasticsearch:aiven",
                                            "expressions": {
                                                "cloud_name": {
                                                    "references": [
                                                        "var.csp_name",
                                                        "var.csp_region"
                                                    ]
                                                },
                                                "maintenance_window_dow": {
                                                    "references": [
                                                        "var.maintenance_window_dow"
                                                    ]
                                                },
                                                "maintenance_window_time": {
                                                    "references": [
                                                        "var.maintenance_window_time"
                                                    ]
                                                },
                                                "plan": {
                                                    "references": [
                                                        "var.service_plan"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "project_vpc_id": {
                                                    "references": [
                                                        "var.aiven_project_vpc_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "var.service_type",
                                                        "var.service_name"
                                                    ]
                                                },
                                                "service_type": {
                                                    "references": [
                                                        "var.service_type"
                                                    ]
                                                },
                                                "termination_protection": {
                                                    "references": [
                                                        "var.service_termination_protection"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "aiven_service_user.service_user",
                                            "mode": "managed",
                                            "type": "aiven_service_user",
                                            "name": "service_user",
                                            "provider_config_key": "aiven_elasticsearch:aiven",
                                            "expressions": {
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.service_users"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "aiven_project_id": {
                                            "description": "Aiven project's id"
                                        },
                                        "aiven_project_vpc_id": {
                                            "default": "",
                                            "description": "The Aiven project VPC to use"
                                        },
                                        "csp_name": {
                                            "description": "The name of the Cloud Service Provider to use"
                                        },
                                        "csp_region": {
                                            "description": "The CSP's region to use"
                                        },
                                        "kafka_topics": {
                                            "default": [],
                                            "description": "Aiven Kafka instances to create"
                                        },
                                        "maintenance_window_dow": {
                                            "default": "tuesday",
                                            "description": "Aiven service maintenance_window_dow"
                                        },
                                        "maintenance_window_time": {
                                            "default": "04:00:00",
                                            "description": "Aiven service maintenance_window_time"
                                        },
                                        "service_advanced_configuration": {
                                            "default": {},
                                            "description": "Aiven service advanced configuration"
                                        },
                                        "service_ip_filter": {
                                            "default": [],
                                            "description": "Aiven Kafka instances to create"
                                        },
                                        "service_name": {
                                            "description": "Aiven service name"
                                        },
                                        "service_plan": {
                                            "description": "Aiven service plan"
                                        },
                                        "service_public_access": {
                                            "default": false,
                                            "description": "Aiven Service public access status (only for KAFKA)"
                                        },
                                        "service_termination_protection": {
                                            "default": false,
                                            "description": "Aiven service termination protection status"
                                        },
                                        "service_type": {
                                            "description": "Aiven service type (kafka|elasticsearch|pg)"
                                        },
                                        "service_users": {
                                            "default": [],
                                            "description": "Aiven service users to create"
                                        },
                                        "service_version": {
                                            "description": "Aiven service version"
                                        }
                                    }
                                }
                            },
                            "aiven_kafka": {
                                "source": "../../modules/aiven/service",
                                "expressions": {
                                    "aiven_project_id": {
                                        "references": [
                                            "local.aiven_project_id"
                                        ]
                                    },
                                    "aiven_project_vpc_id": {
                                        "references": [
                                            "local.aiven_project_vpc_id"
                                        ]
                                    },
                                    "csp_name": {
                                        "references": [
                                            "local.csp_name"
                                        ]
                                    },
                                    "csp_region": {
                                        "references": [
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "kafka_topics": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "maintenance_window_dow": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "maintenance_window_time": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_advanced_configuration": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "each.key"
                                        ]
                                    },
                                    "service_plan": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_public_access": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_termination_protection": {
                                        "references": [
                                            "local.aiven_service_termination_protection"
                                        ]
                                    },
                                    "service_type": {
                                        "constant_value": "kafka"
                                    },
                                    "service_users": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_version": {
                                        "references": [
                                            "each.value"
                                        ]
                                    }
                                },
                                "for_each_expression": {
                                    "references": [
                                        "local.aiven_block"
                                    ]
                                },
                                "module": {
                                    "outputs": {
                                        "services": {
                                            "expression": {
                                                "constant_value": "aiven_service.service"
                                            },
                                            "description": "aiven services"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aiven_elasticsearch_acl.elasticsearch_acl",
                                            "mode": "managed",
                                            "type": "aiven_elasticsearch_acl",
                                            "name": "elasticsearch_acl",
                                            "provider_config_key": "aiven_kafka:aiven",
                                            "expressions": {
                                                "acl": [
                                                    {
                                                        "rule": [
                                                            {
                                                                "index": {
                                                                    "constant_value": "_*"
                                                                },
                                                                "permission": {
                                                                    "constant_value": "admin"
                                                                }
                                                            },
                                                            {
                                                                "index": {
                                                                    "constant_value": "*"
                                                                },
                                                                "permission": {
                                                                    "constant_value": "admin"
                                                                }
                                                            }
                                                        ],
                                                        "username": {
                                                            "constant_value": "avnadmin"
                                                        }
                                                    }
                                                ],
                                                "enabled": {
                                                    "constant_value": true
                                                },
                                                "extended_acl": {
                                                    "constant_value": false
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "local.elasticsearch_for_each"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_kafka_acl.kafka_acl",
                                            "mode": "managed",
                                            "type": "aiven_kafka_acl",
                                            "name": "kafka_acl",
                                            "provider_config_key": "aiven_kafka:aiven",
                                            "expressions": {
                                                "permission": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "topic": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.service_type",
                                                    "local.kafka_users_acl_list"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_kafka_topic.topic",
                                            "mode": "managed",
                                            "type": "aiven_kafka_topic",
                                            "name": "topic",
                                            "provider_config_key": "aiven_kafka:aiven",
                                            "expressions": {
                                                "cleanup_policy": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "minimum_in_sync_replicas": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "partitions": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "replication": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_bytes": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_hours": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "termination_protection": {
                                                    "references": [
                                                        "var.service_termination_protection"
                                                    ]
                                                },
                                                "topic_name": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.kafka_topics"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_service.service",
                                            "mode": "managed",
                                            "type": "aiven_service",
                                            "name": "service",
                                            "provider_config_key": "aiven_kafka:aiven",
                                            "expressions": {
                                                "cloud_name": {
                                                    "references": [
                                                        "var.csp_name",
                                                        "var.csp_region"
                                                    ]
                                                },
                                                "maintenance_window_dow": {
                                                    "references": [
                                                        "var.maintenance_window_dow"
                                                    ]
                                                },
                                                "maintenance_window_time": {
                                                    "references": [
                                                        "var.maintenance_window_time"
                                                    ]
                                                },
                                                "plan": {
                                                    "references": [
                                                        "var.service_plan"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "project_vpc_id": {
                                                    "references": [
                                                        "var.aiven_project_vpc_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "var.service_type",
                                                        "var.service_name"
                                                    ]
                                                },
                                                "service_type": {
                                                    "references": [
                                                        "var.service_type"
                                                    ]
                                                },
                                                "termination_protection": {
                                                    "references": [
                                                        "var.service_termination_protection"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "aiven_service_user.service_user",
                                            "mode": "managed",
                                            "type": "aiven_service_user",
                                            "name": "service_user",
                                            "provider_config_key": "aiven_kafka:aiven",
                                            "expressions": {
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.service_users"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "aiven_project_id": {
                                            "description": "Aiven project's id"
                                        },
                                        "aiven_project_vpc_id": {
                                            "default": "",
                                            "description": "The Aiven project VPC to use"
                                        },
                                        "csp_name": {
                                            "description": "The name of the Cloud Service Provider to use"
                                        },
                                        "csp_region": {
                                            "description": "The CSP's region to use"
                                        },
                                        "kafka_topics": {
                                            "default": [],
                                            "description": "Aiven Kafka instances to create"
                                        },
                                        "maintenance_window_dow": {
                                            "default": "tuesday",
                                            "description": "Aiven service maintenance_window_dow"
                                        },
                                        "maintenance_window_time": {
                                            "default": "04:00:00",
                                            "description": "Aiven service maintenance_window_time"
                                        },
                                        "service_advanced_configuration": {
                                            "default": {},
                                            "description": "Aiven service advanced configuration"
                                        },
                                        "service_ip_filter": {
                                            "default": [],
                                            "description": "Aiven Kafka instances to create"
                                        },
                                        "service_name": {
                                            "description": "Aiven service name"
                                        },
                                        "service_plan": {
                                            "description": "Aiven service plan"
                                        },
                                        "service_public_access": {
                                            "default": false,
                                            "description": "Aiven Service public access status (only for KAFKA)"
                                        },
                                        "service_termination_protection": {
                                            "default": false,
                                            "description": "Aiven service termination protection status"
                                        },
                                        "service_type": {
                                            "description": "Aiven service type (kafka|elasticsearch|pg)"
                                        },
                                        "service_users": {
                                            "default": [],
                                            "description": "Aiven service users to create"
                                        },
                                        "service_version": {
                                            "description": "Aiven service version"
                                        }
                                    }
                                }
                            },
                            "aiven_network": {
                                "source": "../../modules/aiven/vpc",
                                "expressions": {
                                    "aiven_project_id": {
                                        "references": [
                                            "local.aiven_project_id"
                                        ]
                                    },
                                    "csp_account": {
                                        "references": [
                                            "local.gcp_project_id"
                                        ]
                                    },
                                    "csp_name": {
                                        "references": [
                                            "local.csp_name"
                                        ]
                                    },
                                    "csp_region_list": {
                                        "references": [
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "csp_vpc_name_to_pair": {
                                        "references": [
                                            "module.base_networking_vpc[0].vpc_name"
                                        ]
                                    }
                                },
                                "count_expression": {
                                    "references": [
                                        "local.aiven_is_defined"
                                    ]
                                },
                                "module": {
                                    "outputs": {
                                        "aiven_vpc": {
                                            "expression": {
                                                "references": [
                                                    "aiven_project_vpc.main"
                                                ]
                                            },
                                            "description": "The Aiven VPC Resource created as list"
                                        },
                                        "aiven_vpc_peering_connection": {
                                            "expression": {
                                                "references": [
                                                    "aiven_vpc_peering_connection.main"
                                                ]
                                            },
                                            "description": "The Aiven VPC Peering Connection Resource created as list"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aiven_project_vpc.main",
                                            "mode": "managed",
                                            "type": "aiven_project_vpc",
                                            "name": "main",
                                            "provider_config_key": "aiven_network:aiven",
                                            "expressions": {
                                                "cloud_name": {
                                                    "references": [
                                                        "var.csp_name",
                                                        "each.key"
                                                    ]
                                                },
                                                "network_cidr": {
                                                    "references": [
                                                        "var.aiven_vpc_ip_cidr_range",
                                                        "var.aiven_vpc_ip_cidr_range",
                                                        "var.aiven_vpc_ip_cidr_range",
                                                        "var.aiven_vpc_ip_cidr_range",
                                                        "var.csp_region_list",
                                                        "each.key"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    },
                                                    "delete": {
                                                        "constant_value": "15m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.csp_region_list"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_vpc_peering_connection.main",
                                            "mode": "managed",
                                            "type": "aiven_vpc_peering_connection",
                                            "name": "main",
                                            "provider_config_key": "aiven_network:aiven",
                                            "expressions": {
                                                "peer_cloud_account": {
                                                    "references": [
                                                        "var.csp_account"
                                                    ]
                                                },
                                                "peer_vpc": {
                                                    "references": [
                                                        "var.csp_vpc_name_to_pair"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "aiven_project_vpc.main"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "aiven_project_id": {
                                            "description": "Aiven project's name"
                                        },
                                        "aiven_vpc_ip_cidr_range": {
                                            "default": "192.168.0.0/18",
                                            "description": "The range of IP addresses. Only IPv4 is supported."
                                        },
                                        "csp_account": {
                                            "description": "The account of the CSP use for the Aiven VPC"
                                        },
                                        "csp_name": {
                                            "description": "The name of the CSP use for the Aiven VPC (google,aws,azure)"
                                        },
                                        "csp_region_list": {
                                            "description": "list of the CSP region to use"
                                        },
                                        "csp_vpc_name_to_pair": {
                                            "description": "The CSP VPC to pair with the aiven network"
                                        }
                                    }
                                }
                            },
                            "aiven_postegresql": {
                                "source": "../../modules/aiven/service",
                                "expressions": {
                                    "aiven_project_id": {
                                        "references": [
                                            "local.aiven_project_id"
                                        ]
                                    },
                                    "aiven_project_vpc_id": {
                                        "references": [
                                            "local.aiven_project_vpc_id"
                                        ]
                                    },
                                    "csp_name": {
                                        "references": [
                                            "local.csp_name"
                                        ]
                                    },
                                    "csp_region": {
                                        "references": [
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "maintenance_window_dow": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "maintenance_window_time": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_advanced_configuration": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "each.key"
                                        ]
                                    },
                                    "service_plan": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_termination_protection": {
                                        "references": [
                                            "local.aiven_service_termination_protection"
                                        ]
                                    },
                                    "service_type": {
                                        "constant_value": "pg"
                                    },
                                    "service_users": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "service_version": {
                                        "references": [
                                            "each.value"
                                        ]
                                    }
                                },
                                "for_each_expression": {
                                    "references": [
                                        "local.aiven_block"
                                    ]
                                },
                                "module": {
                                    "outputs": {
                                        "services": {
                                            "expression": {
                                                "constant_value": "aiven_service.service"
                                            },
                                            "description": "aiven services"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aiven_elasticsearch_acl.elasticsearch_acl",
                                            "mode": "managed",
                                            "type": "aiven_elasticsearch_acl",
                                            "name": "elasticsearch_acl",
                                            "provider_config_key": "aiven_postegresql:aiven",
                                            "expressions": {
                                                "acl": [
                                                    {
                                                        "rule": [
                                                            {
                                                                "index": {
                                                                    "constant_value": "_*"
                                                                },
                                                                "permission": {
                                                                    "constant_value": "admin"
                                                                }
                                                            },
                                                            {
                                                                "index": {
                                                                    "constant_value": "*"
                                                                },
                                                                "permission": {
                                                                    "constant_value": "admin"
                                                                }
                                                            }
                                                        ],
                                                        "username": {
                                                            "constant_value": "avnadmin"
                                                        }
                                                    }
                                                ],
                                                "enabled": {
                                                    "constant_value": true
                                                },
                                                "extended_acl": {
                                                    "constant_value": false
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "local.elasticsearch_for_each"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_kafka_acl.kafka_acl",
                                            "mode": "managed",
                                            "type": "aiven_kafka_acl",
                                            "name": "kafka_acl",
                                            "provider_config_key": "aiven_postegresql:aiven",
                                            "expressions": {
                                                "permission": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "topic": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.service_type",
                                                    "local.kafka_users_acl_list"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_kafka_topic.topic",
                                            "mode": "managed",
                                            "type": "aiven_kafka_topic",
                                            "name": "topic",
                                            "provider_config_key": "aiven_postegresql:aiven",
                                            "expressions": {
                                                "cleanup_policy": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "minimum_in_sync_replicas": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "partitions": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "replication": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_bytes": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "retention_hours": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "termination_protection": {
                                                    "references": [
                                                        "var.service_termination_protection"
                                                    ]
                                                },
                                                "topic_name": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.kafka_topics"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aiven_service.service",
                                            "mode": "managed",
                                            "type": "aiven_service",
                                            "name": "service",
                                            "provider_config_key": "aiven_postegresql:aiven",
                                            "expressions": {
                                                "cloud_name": {
                                                    "references": [
                                                        "var.csp_name",
                                                        "var.csp_region"
                                                    ]
                                                },
                                                "maintenance_window_dow": {
                                                    "references": [
                                                        "var.maintenance_window_dow"
                                                    ]
                                                },
                                                "maintenance_window_time": {
                                                    "references": [
                                                        "var.maintenance_window_time"
                                                    ]
                                                },
                                                "plan": {
                                                    "references": [
                                                        "var.service_plan"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "project_vpc_id": {
                                                    "references": [
                                                        "var.aiven_project_vpc_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "var.service_type",
                                                        "var.service_name"
                                                    ]
                                                },
                                                "service_type": {
                                                    "references": [
                                                        "var.service_type"
                                                    ]
                                                },
                                                "termination_protection": {
                                                    "references": [
                                                        "var.service_termination_protection"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "aiven_service_user.service_user",
                                            "mode": "managed",
                                            "type": "aiven_service_user",
                                            "name": "service_user",
                                            "provider_config_key": "aiven_postegresql:aiven",
                                            "expressions": {
                                                "project": {
                                                    "references": [
                                                        "var.aiven_project_id"
                                                    ]
                                                },
                                                "service_name": {
                                                    "references": [
                                                        "aiven_service.service"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.service_users"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "aiven_project_id": {
                                            "description": "Aiven project's id"
                                        },
                                        "aiven_project_vpc_id": {
                                            "default": "",
                                            "description": "The Aiven project VPC to use"
                                        },
                                        "csp_name": {
                                            "description": "The name of the Cloud Service Provider to use"
                                        },
                                        "csp_region": {
                                            "description": "The CSP's region to use"
                                        },
                                        "kafka_topics": {
                                            "default": [],
                                            "description": "Aiven Kafka instances to create"
                                        },
                                        "maintenance_window_dow": {
                                            "default": "tuesday",
                                            "description": "Aiven service maintenance_window_dow"
                                        },
                                        "maintenance_window_time": {
                                            "default": "04:00:00",
                                            "description": "Aiven service maintenance_window_time"
                                        },
                                        "service_advanced_configuration": {
                                            "default": {},
                                            "description": "Aiven service advanced configuration"
                                        },
                                        "service_ip_filter": {
                                            "default": [],
                                            "description": "Aiven Kafka instances to create"
                                        },
                                        "service_name": {
                                            "description": "Aiven service name"
                                        },
                                        "service_plan": {
                                            "description": "Aiven service plan"
                                        },
                                        "service_public_access": {
                                            "default": false,
                                            "description": "Aiven Service public access status (only for KAFKA)"
                                        },
                                        "service_termination_protection": {
                                            "default": false,
                                            "description": "Aiven service termination protection status"
                                        },
                                        "service_type": {
                                            "description": "Aiven service type (kafka|elasticsearch|pg)"
                                        },
                                        "service_users": {
                                            "default": [],
                                            "description": "Aiven service users to create"
                                        },
                                        "service_version": {
                                            "description": "Aiven service version"
                                        }
                                    }
                                }
                            },
                            "base_networking_subnets": {
                                "source": "../../modules/base_networking_subnets/",
                                "expressions": {
                                    "gcp_project_id": {
                                        "references": [
                                            "local.gcp_project_id"
                                        ]
                                    },
                                    "gcp_region": {
                                        "references": [
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "k8s_cidrs": {
                                        "constant_value": {
                                            "nodes": "10.0.12.0/22",
                                            "pods": "10.0.128.0/17",
                                            "services": "10.0.64.0/18"
                                        }
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "module.base_networking_vpc[0].vpc_selflink"
                                        ]
                                    }
                                },
                                "count_expression": {
                                    "references": [
                                        "local.gke_is_defined"
                                    ]
                                },
                                "module": {
                                    "outputs": {
                                        "k8s_pods_cidr_range_name": {
                                            "expression": {
                                                "references": [
                                                    "var.k8s_cidrs",
                                                    "google_compute_subnetwork.k8s_subnetwork[0]"
                                                ]
                                            },
                                            "description": "name of the additional cidr range dedicated to pods deployments"
                                        },
                                        "k8s_services_cidr_range_name": {
                                            "expression": {
                                                "references": [
                                                    "var.k8s_cidrs",
                                                    "google_compute_subnetwork.k8s_subnetwork[0]"
                                                ]
                                            },
                                            "description": "name of the additional cidr range dedicated to services deployments"
                                        },
                                        "k8s_subnet_id": {
                                            "expression": {
                                                "references": [
                                                    "var.k8s_cidrs",
                                                    "google_compute_subnetwork.k8s_subnetwork[0]"
                                                ]
                                            },
                                            "description": "id of the k8s dedicated network, returns none if the subnet is not created in the stack"
                                        },
                                        "k8s_subnet_selflink": {
                                            "expression": {
                                                "references": [
                                                    "var.k8s_cidrs",
                                                    "google_compute_subnetwork.k8s_subnetwork[0]"
                                                ]
                                            },
                                            "description": "selflink of the k8s dedicated network, returns none if the subnet is not created in the stack"
                                        },
                                        "managed_lb_subnet_id": {
                                            "expression": {
                                                "references": [
                                                    "var.managed_lb_cidr",
                                                    "google_compute_subnetwork.managed_lb_subnetwork[0]"
                                                ]
                                            },
                                            "description": "id of the managed lb dedicated network, returns none if the subnet is not created in the stack"
                                        },
                                        "managed_lb_subnet_selflink": {
                                            "expression": {
                                                "references": [
                                                    "var.managed_lb_cidr",
                                                    "google_compute_subnetwork.managed_lb_subnetwork[0]"
                                                ]
                                            },
                                            "description": "selflink of the managed lb dedicated network, returns none if the subnet is not created in the stack"
                                        },
                                        "vm_subnet_id": {
                                            "expression": {
                                                "references": [
                                                    "var.vm_cidr",
                                                    "google_compute_subnetwork.vm_subnetwork[0]"
                                                ]
                                            },
                                            "description": "id of the managed VMs dedicated network, returns none if the subnet is not created in the stack"
                                        },
                                        "vm_subnet_selflink": {
                                            "expression": {
                                                "references": [
                                                    "var.vm_cidr",
                                                    "google_compute_subnetwork.vm_subnetwork[0]"
                                                ]
                                            },
                                            "description": "selflink of the managed VMs dedicated network, returns none if the subnet is not created in the stack"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "google_compute_global_address.private_ip_alloc_cloudsql",
                                            "mode": "managed",
                                            "type": "google_compute_global_address",
                                            "name": "private_ip_alloc_cloudsql",
                                            "provider_config_key": "base_networking_subnets:google",
                                            "expressions": {
                                                "address": {
                                                    "references": [
                                                        "var.cloudsql_cidr"
                                                    ]
                                                },
                                                "address_type": {
                                                    "constant_value": "INTERNAL"
                                                },
                                                "name": {
                                                    "constant_value": "cloudsql-ip-range"
                                                },
                                                "network": {
                                                    "references": [
                                                        "var.vpc_id"
                                                    ]
                                                },
                                                "prefix_length": {
                                                    "references": [
                                                        "var.cloudsql_cidr"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "purpose": {
                                                    "constant_value": "VPC_PEERING"
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.cloudsql_cidr"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "google_compute_subnetwork.k8s_subnetwork",
                                            "mode": "managed",
                                            "type": "google_compute_subnetwork",
                                            "name": "k8s_subnetwork",
                                            "provider_config_key": "base_networking_subnets:google",
                                            "expressions": {
                                                "ip_cidr_range": {
                                                    "references": [
                                                        "var.k8s_cidrs"
                                                    ]
                                                },
                                                "log_config": [
                                                    {
                                                        "aggregation_interval": {
                                                            "constant_value": "INTERVAL_1_MIN"
                                                        },
                                                        "flow_sampling": {
                                                            "constant_value": 1
                                                        },
                                                        "metadata": {
                                                            "constant_value": "INCLUDE_ALL_METADATA"
                                                        }
                                                    }
                                                ],
                                                "name": {
                                                    "constant_value": "k8s-nodes-subnetwork"
                                                },
                                                "network": {
                                                    "references": [
                                                        "var.vpc_id"
                                                    ]
                                                },
                                                "private_ip_google_access": {
                                                    "constant_value": true
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "region": {
                                                    "references": [
                                                        "var.gcp_region"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.k8s_cidrs"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "google_compute_subnetwork.managed_lb_subnetwork",
                                            "mode": "managed",
                                            "type": "google_compute_subnetwork",
                                            "name": "managed_lb_subnetwork",
                                            "provider_config_key": "base_networking_subnets:google",
                                            "expressions": {
                                                "ip_cidr_range": {
                                                    "references": [
                                                        "var.managed_lb_cidr"
                                                    ]
                                                },
                                                "log_config": [
                                                    {
                                                        "aggregation_interval": {
                                                            "constant_value": "INTERVAL_1_MIN"
                                                        },
                                                        "flow_sampling": {
                                                            "constant_value": 1
                                                        },
                                                        "metadata": {
                                                            "constant_value": "INCLUDE_ALL_METADATA"
                                                        }
                                                    }
                                                ],
                                                "name": {
                                                    "constant_value": "managed-lb-subnetwork"
                                                },
                                                "network": {
                                                    "references": [
                                                        "var.vpc_id"
                                                    ]
                                                },
                                                "private_ip_google_access": {
                                                    "constant_value": true
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "region": {
                                                    "references": [
                                                        "var.gcp_region"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.managed_lb_cidr"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "google_compute_subnetwork.vm_subnetwork",
                                            "mode": "managed",
                                            "type": "google_compute_subnetwork",
                                            "name": "vm_subnetwork",
                                            "provider_config_key": "base_networking_subnets:google",
                                            "expressions": {
                                                "ip_cidr_range": {
                                                    "references": [
                                                        "var.vm_cidr"
                                                    ]
                                                },
                                                "name": {
                                                    "constant_value": "vm-subnetwork"
                                                },
                                                "network": {
                                                    "references": [
                                                        "var.vpc_id"
                                                    ]
                                                },
                                                "private_ip_google_access": {
                                                    "constant_value": true
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "region": {
                                                    "references": [
                                                        "var.gcp_region"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.vm_cidr"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "google_service_networking_connection.peering_cloudsql",
                                            "mode": "managed",
                                            "type": "google_service_networking_connection",
                                            "name": "peering_cloudsql",
                                            "provider_config_key": "base_networking_subnets:google",
                                            "expressions": {
                                                "network": {
                                                    "references": [
                                                        "var.vpc_id"
                                                    ]
                                                },
                                                "reserved_peering_ranges": {
                                                    "references": [
                                                        "google_compute_global_address.private_ip_alloc_cloudsql[0]"
                                                    ]
                                                },
                                                "service": {
                                                    "constant_value": "servicenetworking.googleapis.com"
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.cloudsql_cidr"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "cloudsql_cidr": {
                                            "default": "none",
                                            "description": "Variable used to store cloudSQL service peering CIDR, default value is used to avoid the deployment"
                                        },
                                        "gcp_project_id": {
                                            "description": "id of the gcp project you'll deploy in"
                                        },
                                        "gcp_region": {
                                            "description": "gcp region in which we'll deploy the subnet set"
                                        },
                                        "k8s_cidrs": {
                                            "default": {
                                                "nodes": "none",
                                                "pods": "none",
                                                "services": "none"
                                            },
                                            "description": "Variable used to store K8s subnets CIDRs, default value is used to avoid the deployment"
                                        },
                                        "managed_lb_cidr": {
                                            "default": "none",
                                            "description": "Variable used to store managed_lb subnet CIDR, default value is used to avoid the deployment"
                                        },
                                        "vm_cidr": {
                                            "default": "none",
                                            "description": "Variable used to store vm subnet CIDR, default value is used to avoid the deployment"
                                        },
                                        "vpc_id": {
                                            "description": "id of the vpc in which we'll deploy the subnets"
                                        }
                                    }
                                }
                            },
                            "base_networking_vpc": {
                                "source": "../../modules/base_networking_vpc/",
                                "expressions": {
                                    "gcp_project_id": {
                                        "references": [
                                            "local.gcp_project_id"
                                        ]
                                    },
                                    "ips_ranges_to_whitelist": {
                                        "references": [
                                            "local.ips_ranges_to_whitelist"
                                        ]
                                    }
                                },
                                "count_expression": {
                                    "references": [
                                        "local.gcp_is_defined"
                                    ]
                                },
                                "module": {
                                    "outputs": {
                                        "vpc_id": {
                                            "expression": {
                                                "references": [
                                                    "google_compute_network.vpc_network"
                                                ]
                                            },
                                            "description": "id of the created vpc"
                                        },
                                        "vpc_name": {
                                            "expression": {
                                                "references": [
                                                    "google_compute_network.vpc_network"
                                                ]
                                            },
                                            "description": "name of the created vpc"
                                        },
                                        "vpc_selflink": {
                                            "expression": {
                                                "references": [
                                                    "google_compute_network.vpc_network"
                                                ]
                                            },
                                            "description": "selflink of the created vpc"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "google_compute_firewall.k8s_fw_ips_ranges_to_whitelist",
                                            "mode": "managed",
                                            "type": "google_compute_firewall",
                                            "name": "k8s_fw_ips_ranges_to_whitelist",
                                            "provider_config_key": "base_networking_vpc:google",
                                            "expressions": {
                                                "allow": [
                                                    {
                                                        "ports": {
                                                            "constant_value": [
                                                                "80",
                                                                "443"
                                                            ]
                                                        },
                                                        "protocol": {
                                                            "constant_value": "tcp"
                                                        }
                                                    }
                                                ],
                                                "description": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                },
                                                "direction": {
                                                    "constant_value": "INGRESS"
                                                },
                                                "name": {
                                                    "references": [
                                                        "each.key"
                                                    ]
                                                },
                                                "network": {
                                                    "references": [
                                                        "google_compute_network.vpc_network"
                                                    ]
                                                },
                                                "priority": {
                                                    "constant_value": 1001
                                                },
                                                "source_ranges": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "target_tags": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.ips_ranges_to_whitelist"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "google_compute_network.vpc_network",
                                            "mode": "managed",
                                            "type": "google_compute_network",
                                            "name": "vpc_network",
                                            "provider_config_key": "base_networking_vpc:google",
                                            "expressions": {
                                                "auto_create_subnetworks": {
                                                    "constant_value": false
                                                },
                                                "delete_default_routes_on_create": {
                                                    "constant_value": false
                                                },
                                                "name": {
                                                    "references": [
                                                        "random_string.random"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "routing_mode": {
                                                    "constant_value": "GLOBAL"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_project_service.servicenetworking_api",
                                            "mode": "managed",
                                            "type": "google_project_service",
                                            "name": "servicenetworking_api",
                                            "provider_config_key": "base_networking_vpc:google",
                                            "expressions": {
                                                "disable_on_destroy": {
                                                    "constant_value": false
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "service": {
                                                    "constant_value": "servicenetworking.googleapis.com"
                                                }
                                            },
                                            "schema_version": 0,
                                            "depends_on": [
                                                "google_project_service.serviceusage_api"
                                            ]
                                        },
                                        {
                                            "address": "google_project_service.serviceusage_api",
                                            "mode": "managed",
                                            "type": "google_project_service",
                                            "name": "serviceusage_api",
                                            "provider_config_key": "base_networking_vpc:google",
                                            "expressions": {
                                                "disable_on_destroy": {
                                                    "constant_value": false
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "service": {
                                                    "constant_value": "serviceusage.googleapis.com"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "random_string.random",
                                            "mode": "managed",
                                            "type": "random_string",
                                            "name": "random",
                                            "provider_config_key": "base_networking_vpc:random",
                                            "expressions": {
                                                "length": {
                                                    "constant_value": 5
                                                },
                                                "special": {
                                                    "constant_value": false
                                                },
                                                "upper": {
                                                    "constant_value": false
                                                }
                                            },
                                            "schema_version": 1
                                        }
                                    ],
                                    "variables": {
                                        "gcp_project_id": {
                                            "description": "GCP project in which we'll deploy the stack"
                                        },
                                        "ips_ranges_to_whitelist": {
                                            "default": [],
                                            "description": "IPs address list to authorize network access when kafka_access_type is setted to restricted"
                                        }
                                    }
                                }
                            },
                            "cloud_nat": {
                                "source": "../../modules/base_cloudnat",
                                "expressions": {
                                    "gcp_project_id": {
                                        "references": [
                                            "local.gcp_project_id"
                                        ]
                                    },
                                    "gcp_region": {
                                        "references": [
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "vpc_name": {
                                        "references": [
                                            "module.base_networking_vpc[0].vpc_name"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "nat_public_ip": {
                                            "expression": {
                                                "references": [
                                                    "google_compute_address.ip_cloud_nat"
                                                ]
                                            },
                                            "description": "value of the public ip address used by cloudnat"
                                        },
                                        "nat_public_ip_id": {
                                            "expression": {
                                                "references": [
                                                    "google_compute_address.ip_cloud_nat"
                                                ]
                                            },
                                            "description": "id of the public ip address used by cloudnat"
                                        },
                                        "nat_public_ip_selflink": {
                                            "expression": {
                                                "references": [
                                                    "google_compute_address.ip_cloud_nat"
                                                ]
                                            },
                                            "description": "selflink of the public ip address used by cloudnat"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "google_compute_address.ip_cloud_nat",
                                            "mode": "managed",
                                            "type": "google_compute_address",
                                            "name": "ip_cloud_nat",
                                            "provider_config_key": "cloud_nat:google",
                                            "expressions": {
                                                "name": {
                                                    "constant_value": "ip-cloud-nat"
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "region": {
                                                    "references": [
                                                        "var.gcp_region"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_compute_router.router",
                                            "mode": "managed",
                                            "type": "google_compute_router",
                                            "name": "router",
                                            "provider_config_key": "cloud_nat:google",
                                            "expressions": {
                                                "bgp": [
                                                    {
                                                        "asn": {
                                                            "constant_value": 4200000000
                                                        }
                                                    }
                                                ],
                                                "name": {
                                                    "constant_value": "cloud-router"
                                                },
                                                "network": {
                                                    "references": [
                                                        "var.vpc_name"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "region": {
                                                    "references": [
                                                        "var.gcp_region"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_compute_router_nat.nat",
                                            "mode": "managed",
                                            "type": "google_compute_router_nat",
                                            "name": "nat",
                                            "provider_config_key": "cloud_nat:google",
                                            "expressions": {
                                                "name": {
                                                    "constant_value": "nat"
                                                },
                                                "nat_ip_allocate_option": {
                                                    "constant_value": "MANUAL_ONLY"
                                                },
                                                "nat_ips": {
                                                    "references": [
                                                        "google_compute_address.ip_cloud_nat"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "region": {
                                                    "references": [
                                                        "var.gcp_region"
                                                    ]
                                                },
                                                "router": {
                                                    "references": [
                                                        "google_compute_router.router"
                                                    ]
                                                },
                                                "source_subnetwork_ip_ranges_to_nat": {
                                                    "constant_value": "ALL_SUBNETWORKS_ALL_IP_RANGES"
                                                }
                                            },
                                            "schema_version": 0
                                        }
                                    ],
                                    "variables": {
                                        "gcp_project_id": {
                                            "description": "id of the project in which we'll deploy the module"
                                        },
                                        "gcp_region": {
                                            "description": "region in which we'll deploy the module"
                                        },
                                        "vpc_name": {
                                            "description": "name of the vpc in which we'll deploy"
                                        }
                                    }
                                }
                            },
                            "dns_zone_delegation": {
                                "source": "../../modules/commons/dns_zone_delegation",
                                "expressions": {
                                    "gcp_project_id": {
                                        "references": [
                                            "local.gcp_project_id"
                                        ]
                                    },
                                    "public_domain_name": {
                                        "references": [
                                            "var.dns_public_domain_name"
                                        ]
                                    },
                                    "public_subdomain_name": {
                                        "references": [
                                            "local.dns_public_subdomain_name"
                                        ]
                                    }
                                },
                                "count_expression": {
                                    "references": [
                                        "local.ultradns_is_defined",
                                        "local.gcp_is_defined"
                                    ]
                                },
                                "module": {
                                    "resources": [
                                        {
                                            "address": "google_dns_managed_zone.project_public_zone",
                                            "mode": "managed",
                                            "type": "google_dns_managed_zone",
                                            "name": "project_public_zone",
                                            "provider_config_key": "dns_zone_delegation:google",
                                            "expressions": {
                                                "description": {
                                                    "constant_value": "public subdomain reserved for this project"
                                                },
                                                "dns_name": {
                                                    "references": [
                                                        "local.dns_name"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.public_subdomain_name"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "visibility": {
                                                    "constant_value": "public"
                                                }
                                            },
                                            "schema_version": 0,
                                            "depends_on": [
                                                "null_resource.check_ns_status",
                                                "google_project_service.dns_api"
                                            ]
                                        },
                                        {
                                            "address": "google_project_service.dns_api",
                                            "mode": "managed",
                                            "type": "google_project_service",
                                            "name": "dns_api",
                                            "provider_config_key": "dns_zone_delegation:google",
                                            "expressions": {
                                                "disable_on_destroy": {
                                                    "constant_value": false
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "service": {
                                                    "constant_value": "dns.googleapis.com"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "null_resource.check_ns_status",
                                            "mode": "managed",
                                            "type": "null_resource",
                                            "name": "check_ns_status",
                                            "provider_config_key": "dns_zone_delegation:null",
                                            "provisioners": [
                                                {
                                                    "type": "local-exec",
                                                    "expressions": {
                                                        "command": {
                                                            "references": [
                                                                "var.gcp_project_id",
                                                                "var.public_subdomain_name",
                                                                "local.dns_name",
                                                                "path.module"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ],
                                            "schema_version": 0,
                                            "depends_on": [
                                                "google_project_service.dns_api"
                                            ]
                                        },
                                        {
                                            "address": "ultradns_record.records",
                                            "mode": "managed",
                                            "type": "ultradns_record",
                                            "name": "records",
                                            "provider_config_key": "dns_zone_delegation:ultradns",
                                            "expressions": {
                                                "name": {
                                                    "references": [
                                                        "var.public_subdomain_name"
                                                    ]
                                                },
                                                "rdata": {
                                                    "references": [
                                                        "google_dns_managed_zone.project_public_zone"
                                                    ]
                                                },
                                                "ttl": {
                                                    "constant_value": 1800
                                                },
                                                "type": {
                                                    "constant_value": "NS"
                                                },
                                                "zone": {
                                                    "references": [
                                                        "var.public_domain_name"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0
                                        }
                                    ],
                                    "variables": {
                                        "gcp_project_id": {
                                            "description": "The project_id on GCP"
                                        },
                                        "public_domain_name": {
                                            "description": "Ultradns informations"
                                        },
                                        "public_subdomain_name": {
                                            "description": "Ultradns informations"
                                        }
                                    }
                                }
                            },
                            "gcp_gke": {
                                "source": "../../modules/kubernetes/gke/",
                                "expressions": {
                                    "cluster_resource_labels": {
                                        "references": [
                                            "local.application_name",
                                            "local.gcp_project_id",
                                            "local.gcp_block",
                                            "local.gcp_default_region",
                                            "local.gcp_block"
                                        ]
                                    },
                                    "gcp_project_id": {
                                        "references": [
                                            "local.gcp_project_id"
                                        ]
                                    },
                                    "gcp_region": {
                                        "references": [
                                            "local.gcp_block",
                                            "local.gcp_default_region"
                                        ]
                                    },
                                    "gke_service_account_name": {
                                        "references": [
                                            "local.gcp_block"
                                        ]
                                    },
                                    "ip_range_pods": {
                                        "references": [
                                            "module.base_networking_subnets[0].k8s_pods_cidr_range_name"
                                        ]
                                    },
                                    "ip_range_services": {
                                        "references": [
                                            "module.base_networking_subnets[0].k8s_services_cidr_range_name"
                                        ]
                                    },
                                    "master_ipv4_cidr_block": {
                                        "constant_value": "10.253.0.0/28"
                                    },
                                    "name": {
                                        "references": [
                                            "local.gcp_block"
                                        ]
                                    },
                                    "network": {
                                        "references": [
                                            "module.base_networking_vpc[0].vpc_name"
                                        ]
                                    },
                                    "regional": {
                                        "constant_value": true
                                    },
                                    "subnetwork": {
                                        "references": [
                                            "module.base_networking_subnets[0].k8s_subnet_id"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "ca_certificate": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "module.gke.ca_certificate"
                                                ]
                                            },
                                            "description": "Cluster ca certificate (base64 encoded)"
                                        },
                                        "cluster_istiogateway_ip": {
                                            "expression": {
                                                "references": [
                                                    "google_compute_address.public_ip_istiogateway"
                                                ]
                                            },
                                            "description": "static ip address for current cluster istiogateway"
                                        },
                                        "cluster_service_account": {
                                            "expression": {
                                                "references": [
                                                    "google_service_account.cluster_service_account"
                                                ]
                                            },
                                            "description": "google service account used as default for cluster nodes"
                                        },
                                        "endpoint": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "module.gke.endpoint"
                                                ]
                                            },
                                            "depends_on": [
                                                "module.gke"
                                            ],
                                            "description": "Cluster endpoint"
                                        },
                                        "horizontal_pod_autoscaling_enabled": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.horizontal_pod_autoscaling_enabled"
                                                ]
                                            },
                                            "description": "Whether horizontal pod autoscaling enabled"
                                        },
                                        "http_load_balancing_enabled": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.http_load_balancing_enabled"
                                                ]
                                            },
                                            "description": "Whether http load balancing enabled"
                                        },
                                        "location": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.location"
                                                ]
                                            },
                                            "description": "Cluster location (region if regional cluster, zone if zonal cluster)"
                                        },
                                        "logging_service": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.logging_service"
                                                ]
                                            },
                                            "description": "Logging service used"
                                        },
                                        "master_authorized_networks_config": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.master_authorized_networks_config"
                                                ]
                                            },
                                            "description": "Networks from which access to master is permitted"
                                        },
                                        "master_ipv4_cidr_block": {
                                            "expression": {
                                                "references": [
                                                    "var.master_ipv4_cidr_block"
                                                ]
                                            },
                                            "description": "The IP range in CIDR notation used for the hosted master network"
                                        },
                                        "master_version": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.master_version"
                                                ]
                                            },
                                            "description": "Current master kubernetes version"
                                        },
                                        "min_master_version": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.min_master_version"
                                                ]
                                            },
                                            "description": "Minimum master kubernetes version"
                                        },
                                        "monitoring_service": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.monitoring_service"
                                                ]
                                            },
                                            "description": "Monitoring service used"
                                        },
                                        "name": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.name"
                                                ]
                                            },
                                            "description": "Cluster name"
                                        },
                                        "network_policy_enabled": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.network_policy_enabled"
                                                ]
                                            },
                                            "description": "Whether network policy enabled"
                                        },
                                        "node_pools_names": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.node_pools_names"
                                                ]
                                            },
                                            "description": "List of node pools names"
                                        },
                                        "node_pools_versions": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.node_pools_versions"
                                                ]
                                            },
                                            "description": "List of node pools versions"
                                        },
                                        "peering_name": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.peering_name"
                                                ]
                                            },
                                            "description": "The name of the peering between this cluster and the Google owned VPC."
                                        },
                                        "region": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.region"
                                                ]
                                            },
                                            "description": "Cluster region"
                                        },
                                        "service_account": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.service_account"
                                                ]
                                            },
                                            "description": "The service account to default running nodes as if not overridden in `node_pools`."
                                        },
                                        "type": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.type"
                                                ]
                                            },
                                            "description": "Cluster type (regional / zonal)"
                                        },
                                        "zones": {
                                            "expression": {
                                                "references": [
                                                    "module.gke.zones"
                                                ]
                                            },
                                            "description": "List of zones in which the cluster resides"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "google_compute_address.public_ip_istiogateway",
                                            "mode": "managed",
                                            "type": "google_compute_address",
                                            "name": "public_ip_istiogateway",
                                            "provider_config_key": "gcp_gke:google",
                                            "expressions": {
                                                "address_type": {
                                                    "constant_value": "EXTERNAL"
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.name"
                                                    ]
                                                },
                                                "network_tier": {
                                                    "constant_value": "PREMIUM"
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "region": {
                                                    "references": [
                                                        "var.gcp_region"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_project_iam_member.cluster_service_account_gar",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account_gar",
                                            "provider_config_key": "gcp_gke:google",
                                            "expressions": {
                                                "member": {
                                                    "references": [
                                                        "google_service_account.cluster_service_account"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "role": {
                                                    "constant_value": "roles/artifactregistry.reader"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_project_iam_member.cluster_service_account_log_writer",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account_log_writer",
                                            "provider_config_key": "gcp_gke:google",
                                            "expressions": {
                                                "member": {
                                                    "references": [
                                                        "google_service_account.cluster_service_account"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "role": {
                                                    "constant_value": "roles/logging.logWriter"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_project_iam_member.cluster_service_account_metric_writer",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account_metric_writer",
                                            "provider_config_key": "gcp_gke:google",
                                            "expressions": {
                                                "member": {
                                                    "references": [
                                                        "google_service_account.cluster_service_account"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "role": {
                                                    "constant_value": "roles/monitoring.metricWriter"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_project_iam_member.cluster_service_account_monitoring_viewer",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account_monitoring_viewer",
                                            "provider_config_key": "gcp_gke:google",
                                            "expressions": {
                                                "member": {
                                                    "references": [
                                                        "google_service_account.cluster_service_account"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "role": {
                                                    "constant_value": "roles/monitoring.viewer"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_project_iam_member.cluster_service_account_resource_metadata_writer",
                                            "mode": "managed",
                                            "type": "google_project_iam_member",
                                            "name": "cluster_service_account_resource_metadata_writer",
                                            "provider_config_key": "gcp_gke:google",
                                            "expressions": {
                                                "member": {
                                                    "references": [
                                                        "google_service_account.cluster_service_account"
                                                    ]
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "role": {
                                                    "constant_value": "roles/stackdriver.resourceMetadata.writer"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_project_service.kubernetesengine_api",
                                            "mode": "managed",
                                            "type": "google_project_service",
                                            "name": "kubernetesengine_api",
                                            "provider_config_key": "gcp_gke:google",
                                            "expressions": {
                                                "disable_on_destroy": {
                                                    "constant_value": false
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "service": {
                                                    "constant_value": "container.googleapis.com"
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "google_service_account.cluster_service_account",
                                            "mode": "managed",
                                            "type": "google_service_account",
                                            "name": "cluster_service_account",
                                            "provider_config_key": "gcp_gke:google",
                                            "expressions": {
                                                "account_id": {
                                                    "references": [
                                                        "var.gke_service_account_name"
                                                    ]
                                                },
                                                "display_name": {
                                                    "constant_value": "Terraform-managed service account for gke cluster"
                                                },
                                                "project": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "null_resource.istio_loadbalancer_ip_patch",
                                            "mode": "managed",
                                            "type": "null_resource",
                                            "name": "istio_loadbalancer_ip_patch",
                                            "provider_config_key": "gcp_gke:null",
                                            "provisioners": [
                                                {
                                                    "type": "local-exec",
                                                    "expressions": {
                                                        "command": {
                                                            "references": [
                                                                "module.gke.ca_certificate",
                                                                "module.gke.endpoint",
                                                                "data.google_client_config.current",
                                                                "google_compute_address.public_ip_istiogateway"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ],
                                            "schema_version": 0
                                        },
                                        {
                                            "address": "data.google_client_config.current",
                                            "mode": "data",
                                            "type": "google_client_config",
                                            "name": "current",
                                            "provider_config_key": "gcp_gke:google",
                                            "schema_version": 0
                                        }
                                    ],
                                    "module_calls": {
                                        "gke": {
                                            "source": "terraform-google-modules/kubernetes-engine/google//modules/beta-private-cluster",
                                            "expressions": {
                                                "add_cluster_firewall_rules": {
                                                    "references": [
                                                        "var.add_cluster_firewall_rules"
                                                    ]
                                                },
                                                "authenticator_security_group": {
                                                    "constant_value": "gke-security-groups@decathlon.net"
                                                },
                                                "basic_auth_password": {
                                                    "constant_value": ""
                                                },
                                                "basic_auth_username": {
                                                    "constant_value": ""
                                                },
                                                "cluster_resource_labels": {
                                                    "references": [
                                                        "var.cluster_resource_labels"
                                                    ]
                                                },
                                                "default_max_pods_per_node": {
                                                    "references": [
                                                        "var.default_max_pods_per_node"
                                                    ]
                                                },
                                                "enable_private_nodes": {
                                                    "constant_value": true
                                                },
                                                "enable_vertical_pod_autoscaling": {
                                                    "references": [
                                                        "var.enable_vertical_pod_autoscaling"
                                                    ]
                                                },
                                                "firewall_inbound_ports": {
                                                    "references": [
                                                        "var.firewall_inbound_ports"
                                                    ]
                                                },
                                                "firewall_priority": {
                                                    "references": [
                                                        "var.firewall_priority"
                                                    ]
                                                },
                                                "http_load_balancing": {
                                                    "references": [
                                                        "var.http_load_balancing"
                                                    ]
                                                },
                                                "identity_namespace": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "initial_node_count": {
                                                    "references": [
                                                        "var.initial_node_count"
                                                    ]
                                                },
                                                "ip_range_pods": {
                                                    "references": [
                                                        "var.ip_range_pods"
                                                    ]
                                                },
                                                "ip_range_services": {
                                                    "references": [
                                                        "var.ip_range_services"
                                                    ]
                                                },
                                                "issue_client_certificate": {
                                                    "constant_value": false
                                                },
                                                "istio": {
                                                    "references": [
                                                        "var.istio"
                                                    ]
                                                },
                                                "istio_auth": {
                                                    "references": [
                                                        "var.istio_auth"
                                                    ]
                                                },
                                                "kubernetes_version": {
                                                    "references": [
                                                        "var.kubernetes_version"
                                                    ]
                                                },
                                                "maintenance_start_time": {
                                                    "references": [
                                                        "var.maintenance_start_time"
                                                    ]
                                                },
                                                "master_authorized_networks": {
                                                    "references": [
                                                        "var.master_authorized_networks"
                                                    ]
                                                },
                                                "master_global_access_enabled": {
                                                    "constant_value": true
                                                },
                                                "master_ipv4_cidr_block": {
                                                    "references": [
                                                        "var.master_ipv4_cidr_block"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.name"
                                                    ]
                                                },
                                                "network": {
                                                    "references": [
                                                        "var.network"
                                                    ]
                                                },
                                                "node_metadata": {
                                                    "constant_value": "GKE_METADATA_SERVER"
                                                },
                                                "node_pools": {
                                                    "references": [
                                                        "var.infranodes_machine_type",
                                                        "var.infranodes_max_count",
                                                        "var.appnodes_machine_type",
                                                        "var.appnodes_max_count"
                                                    ]
                                                },
                                                "node_pools_labels": {
                                                    "references": [
                                                        "var.node_pools_labels"
                                                    ]
                                                },
                                                "node_pools_metadata": {
                                                    "references": [
                                                        "var.node_pools_metadata"
                                                    ]
                                                },
                                                "node_pools_oauth_scopes": {
                                                    "references": [
                                                        "var.node_pools_oauth_scopes"
                                                    ]
                                                },
                                                "node_pools_tags": {
                                                    "references": [
                                                        "var.node_pools_tags"
                                                    ]
                                                },
                                                "node_pools_taints": {
                                                    "constant_value": {
                                                        "pool-01": [
                                                            {
                                                                "effect": "PREFER_NO_SCHEDULE",
                                                                "key": "pool-01",
                                                                "value": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                "project_id": {
                                                    "references": [
                                                        "var.gcp_project_id"
                                                    ]
                                                },
                                                "region": {
                                                    "references": [
                                                        "var.gcp_region"
                                                    ]
                                                },
                                                "regional": {
                                                    "references": [
                                                        "var.regional"
                                                    ]
                                                },
                                                "release_channel": {
                                                    "references": [
                                                        "var.release_channel"
                                                    ]
                                                },
                                                "remove_default_node_pool": {
                                                    "constant_value": true
                                                },
                                                "service_account": {
                                                    "references": [
                                                        "google_service_account.cluster_service_account"
                                                    ]
                                                },
                                                "subnetwork": {
                                                    "references": [
                                                        "var.subnetwork"
                                                    ]
                                                },
                                                "zones": {
                                                    "references": [
                                                        "var.zones"
                                                    ]
                                                }
                                            },
                                            "module": {
                                                "outputs": {
                                                    "ca_certificate": {
                                                        "sensitive": true,
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_ca_certificate"
                                                            ]
                                                        },
                                                        "description": "Cluster ca certificate (base64 encoded)"
                                                    },
                                                    "cloudrun_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_cloudrun_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether CloudRun enabled"
                                                    },
                                                    "dns_cache_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_dns_cache_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether DNS Cache enabled"
                                                    },
                                                    "endpoint": {
                                                        "sensitive": true,
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_endpoint"
                                                            ]
                                                        },
                                                        "depends_on": [
                                                            "google_container_cluster.primary",
                                                            "google_container_node_pool.pools",
                                                            "module.gcloud_wait_for_cluster.wait"
                                                        ],
                                                        "description": "Cluster endpoint"
                                                    },
                                                    "horizontal_pod_autoscaling_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_horizontal_pod_autoscaling_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether horizontal pod autoscaling enabled"
                                                    },
                                                    "http_load_balancing_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_http_load_balancing_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether http load balancing enabled"
                                                    },
                                                    "identity_namespace": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_workload_identity_config",
                                                                "local.cluster_workload_identity_config"
                                                            ]
                                                        },
                                                        "depends_on": [
                                                            "google_container_cluster.primary"
                                                        ],
                                                        "description": "Workload Identity namespace"
                                                    },
                                                    "intranode_visibility_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_intranode_visibility_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether intra-node visibility is enabled"
                                                    },
                                                    "istio_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_istio_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether Istio is enabled"
                                                    },
                                                    "location": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_location"
                                                            ]
                                                        },
                                                        "description": "Cluster location (region if regional cluster, zone if zonal cluster)"
                                                    },
                                                    "logging_service": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_logging_service"
                                                            ]
                                                        },
                                                        "description": "Logging service used"
                                                    },
                                                    "master_authorized_networks_config": {
                                                        "expression": {
                                                            "references": [
                                                                "google_container_cluster.primary"
                                                            ]
                                                        },
                                                        "description": "Networks from which access to master is permitted"
                                                    },
                                                    "master_ipv4_cidr_block": {
                                                        "expression": {
                                                            "references": [
                                                                "var.master_ipv4_cidr_block"
                                                            ]
                                                        },
                                                        "description": "The IP range in CIDR notation used for the hosted master network"
                                                    },
                                                    "master_version": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_master_version"
                                                            ]
                                                        },
                                                        "description": "Current master kubernetes version"
                                                    },
                                                    "min_master_version": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_min_master_version"
                                                            ]
                                                        },
                                                        "description": "Minimum master kubernetes version"
                                                    },
                                                    "monitoring_service": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_monitoring_service"
                                                            ]
                                                        },
                                                        "description": "Monitoring service used"
                                                    },
                                                    "name": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_name"
                                                            ]
                                                        },
                                                        "description": "Cluster name"
                                                    },
                                                    "network_policy_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_network_policy_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether network policy enabled"
                                                    },
                                                    "node_pools_names": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_node_pools_names"
                                                            ]
                                                        },
                                                        "description": "List of node pools names"
                                                    },
                                                    "node_pools_versions": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_node_pools_versions"
                                                            ]
                                                        },
                                                        "description": "List of node pools versions"
                                                    },
                                                    "peering_name": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_peering_name"
                                                            ]
                                                        },
                                                        "description": "The name of the peering between this cluster and the Google owned VPC."
                                                    },
                                                    "pod_security_policy_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_pod_security_policy_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether pod security policy is enabled"
                                                    },
                                                    "region": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_region"
                                                            ]
                                                        },
                                                        "description": "Cluster region"
                                                    },
                                                    "release_channel": {
                                                        "expression": {
                                                            "references": [
                                                                "var.release_channel"
                                                            ]
                                                        },
                                                        "description": "The release channel of this cluster"
                                                    },
                                                    "service_account": {
                                                        "expression": {
                                                            "references": [
                                                                "local.service_account"
                                                            ]
                                                        },
                                                        "description": "The service account to default running nodes as if not overridden in `node_pools`."
                                                    },
                                                    "type": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_type"
                                                            ]
                                                        },
                                                        "description": "Cluster type (regional / zonal)"
                                                    },
                                                    "vertical_pod_autoscaling_enabled": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_vertical_pod_autoscaling_enabled"
                                                            ]
                                                        },
                                                        "description": "Whether veritical pod autoscaling is enabled"
                                                    },
                                                    "zones": {
                                                        "expression": {
                                                            "references": [
                                                                "local.cluster_zones"
                                                            ]
                                                        },
                                                        "description": "List of zones in which the cluster resides"
                                                    }
                                                },
                                                "resources": [
                                                    {
                                                        "address": "google_compute_firewall.intra_egress",
                                                        "mode": "managed",
                                                        "type": "google_compute_firewall",
                                                        "name": "intra_egress",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "allow": [
                                                                {
                                                                    "protocol": {
                                                                        "constant_value": "tcp"
                                                                    }
                                                                },
                                                                {
                                                                    "protocol": {
                                                                        "constant_value": "udp"
                                                                    }
                                                                },
                                                                {
                                                                    "protocol": {
                                                                        "constant_value": "icmp"
                                                                    }
                                                                },
                                                                {
                                                                    "protocol": {
                                                                        "constant_value": "sctp"
                                                                    }
                                                                },
                                                                {
                                                                    "protocol": {
                                                                        "constant_value": "esp"
                                                                    }
                                                                },
                                                                {
                                                                    "protocol": {
                                                                        "constant_value": "ah"
                                                                    }
                                                                }
                                                            ],
                                                            "description": {
                                                                "constant_value": "Managed by terraform gke module: Allow pods to communicate with each other and the master"
                                                            },
                                                            "destination_ranges": {
                                                                "references": [
                                                                    "local.cluster_endpoint_for_nodes",
                                                                    "local.cluster_subnet_cidr",
                                                                    "local.cluster_alias_ranges_cidr",
                                                                    "var.ip_range_pods"
                                                                ]
                                                            },
                                                            "direction": {
                                                                "constant_value": "EGRESS"
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "var.name",
                                                                    "var.name"
                                                                ]
                                                            },
                                                            "network": {
                                                                "references": [
                                                                    "var.network"
                                                                ]
                                                            },
                                                            "priority": {
                                                                "references": [
                                                                    "var.firewall_priority"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "local.network_project_id"
                                                                ]
                                                            },
                                                            "target_tags": {
                                                                "references": [
                                                                    "local.cluster_network_tag"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 1,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.add_cluster_firewall_rules"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "google_compute_firewall.master_webhooks",
                                                        "mode": "managed",
                                                        "type": "google_compute_firewall",
                                                        "name": "master_webhooks",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "allow": [
                                                                {
                                                                    "ports": {
                                                                        "references": [
                                                                            "var.firewall_inbound_ports"
                                                                        ]
                                                                    },
                                                                    "protocol": {
                                                                        "constant_value": "tcp"
                                                                    }
                                                                }
                                                            ],
                                                            "description": {
                                                                "constant_value": "Managed by terraform gke module: Allow master to hit pods for admission controllers/webhooks"
                                                            },
                                                            "direction": {
                                                                "constant_value": "INGRESS"
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "var.name",
                                                                    "var.name"
                                                                ]
                                                            },
                                                            "network": {
                                                                "references": [
                                                                    "var.network"
                                                                ]
                                                            },
                                                            "priority": {
                                                                "references": [
                                                                    "var.firewall_priority"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "local.network_project_id"
                                                                ]
                                                            },
                                                            "source_ranges": {
                                                                "references": [
                                                                    "local.cluster_endpoint_for_nodes"
                                                                ]
                                                            },
                                                            "target_tags": {
                                                                "references": [
                                                                    "local.cluster_network_tag"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 1,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.add_cluster_firewall_rules"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "google_container_cluster.primary",
                                                        "mode": "managed",
                                                        "type": "google_container_cluster",
                                                        "name": "primary",
                                                        "provider_config_key": "gke:google-beta",
                                                        "expressions": {
                                                            "addons_config": [
                                                                {
                                                                    "config_connector_config": [
                                                                        {
                                                                            "enabled": {
                                                                                "references": [
                                                                                    "var.config_connector"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "dns_cache_config": [
                                                                        {
                                                                            "enabled": {
                                                                                "references": [
                                                                                    "var.dns_cache"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "horizontal_pod_autoscaling": [
                                                                        {
                                                                            "disabled": {
                                                                                "references": [
                                                                                    "var.horizontal_pod_autoscaling"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "http_load_balancing": [
                                                                        {
                                                                            "disabled": {
                                                                                "references": [
                                                                                    "var.http_load_balancing"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "istio_config": [
                                                                        {
                                                                            "auth": {
                                                                                "references": [
                                                                                    "var.istio_auth"
                                                                                ]
                                                                            },
                                                                            "disabled": {
                                                                                "references": [
                                                                                    "var.istio"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kalm_config": [
                                                                        {
                                                                            "enabled": {
                                                                                "references": [
                                                                                    "var.kalm_config"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "network_policy_config": [
                                                                        {
                                                                            "disabled": {
                                                                                "references": [
                                                                                    "var.network_policy"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "cluster_autoscaling": [
                                                                {
                                                                    "autoscaling_profile": {
                                                                        "references": [
                                                                            "var.cluster_autoscaling",
                                                                            "var.cluster_autoscaling"
                                                                        ]
                                                                    },
                                                                    "enabled": {
                                                                        "references": [
                                                                            "var.cluster_autoscaling"
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "cluster_ipv4_cidr": {
                                                                "references": [
                                                                    "var.cluster_ipv4_cidr"
                                                                ]
                                                            },
                                                            "default_max_pods_per_node": {
                                                                "references": [
                                                                    "var.default_max_pods_per_node"
                                                                ]
                                                            },
                                                            "default_snat_status": [
                                                                {
                                                                    "disabled": {
                                                                        "references": [
                                                                            "var.disable_default_snat"
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "description": {
                                                                "references": [
                                                                    "var.description"
                                                                ]
                                                            },
                                                            "enable_binary_authorization": {
                                                                "references": [
                                                                    "var.enable_binary_authorization"
                                                                ]
                                                            },
                                                            "enable_intranode_visibility": {
                                                                "references": [
                                                                    "var.enable_intranode_visibility"
                                                                ]
                                                            },
                                                            "enable_kubernetes_alpha": {
                                                                "references": [
                                                                    "var.enable_kubernetes_alpha"
                                                                ]
                                                            },
                                                            "enable_shielded_nodes": {
                                                                "references": [
                                                                    "var.enable_shielded_nodes"
                                                                ]
                                                            },
                                                            "ip_allocation_policy": [
                                                                {
                                                                    "cluster_secondary_range_name": {
                                                                        "references": [
                                                                            "var.ip_range_pods"
                                                                        ]
                                                                    },
                                                                    "services_secondary_range_name": {
                                                                        "references": [
                                                                            "var.ip_range_services"
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "location": {
                                                                "references": [
                                                                    "local.location"
                                                                ]
                                                            },
                                                            "logging_service": {
                                                                "references": [
                                                                    "var.logging_service"
                                                                ]
                                                            },
                                                            "maintenance_policy": [
                                                                {}
                                                            ],
                                                            "master_auth": [
                                                                {
                                                                    "client_certificate_config": [
                                                                        {
                                                                            "issue_client_certificate": {
                                                                                "references": [
                                                                                    "var.issue_client_certificate"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "password": {
                                                                        "references": [
                                                                            "var.basic_auth_password"
                                                                        ]
                                                                    },
                                                                    "username": {
                                                                        "references": [
                                                                            "var.basic_auth_username"
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "min_master_version": {
                                                                "references": [
                                                                    "var.release_channel",
                                                                    "local.master_version"
                                                                ]
                                                            },
                                                            "monitoring_service": {
                                                                "references": [
                                                                    "var.monitoring_service"
                                                                ]
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "var.name"
                                                                ]
                                                            },
                                                            "network": {
                                                                "references": [
                                                                    "local.network_project_id",
                                                                    "var.network"
                                                                ]
                                                            },
                                                            "networking_mode": {
                                                                "constant_value": "VPC_NATIVE"
                                                            },
                                                            "node_locations": {
                                                                "references": [
                                                                    "local.node_locations"
                                                                ]
                                                            },
                                                            "node_pool": [
                                                                {
                                                                    "initial_node_count": {
                                                                        "references": [
                                                                            "var.initial_node_count"
                                                                        ]
                                                                    },
                                                                    "name": {
                                                                        "constant_value": "default-pool"
                                                                    },
                                                                    "node_config": [
                                                                        {
                                                                            "service_account": {
                                                                                "references": [
                                                                                    "var.node_pools",
                                                                                    "local.service_account"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "project": {
                                                                "references": [
                                                                    "var.project_id"
                                                                ]
                                                            },
                                                            "remove_default_node_pool": {
                                                                "references": [
                                                                    "var.remove_default_node_pool"
                                                                ]
                                                            },
                                                            "resource_labels": {
                                                                "references": [
                                                                    "var.cluster_resource_labels"
                                                                ]
                                                            },
                                                            "subnetwork": {
                                                                "references": [
                                                                    "local.network_project_id",
                                                                    "var.region",
                                                                    "var.subnetwork"
                                                                ]
                                                            },
                                                            "timeouts": {
                                                                "create": {
                                                                    "constant_value": "45m"
                                                                },
                                                                "delete": {
                                                                    "constant_value": "45m"
                                                                },
                                                                "update": {
                                                                    "constant_value": "45m"
                                                                }
                                                            },
                                                            "vertical_pod_autoscaling": [
                                                                {
                                                                    "enabled": {
                                                                        "references": [
                                                                            "var.enable_vertical_pod_autoscaling"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "schema_version": 1
                                                    },
                                                    {
                                                        "address": "google_container_node_pool.pools",
                                                        "mode": "managed",
                                                        "type": "google_container_node_pool",
                                                        "name": "pools",
                                                        "provider_config_key": "gke:google-beta",
                                                        "expressions": {
                                                            "cluster": {
                                                                "references": [
                                                                    "google_container_cluster.primary"
                                                                ]
                                                            },
                                                            "initial_node_count": {
                                                                "references": [
                                                                    "each.value",
                                                                    "each.value",
                                                                    "each.value"
                                                                ]
                                                            },
                                                            "location": {
                                                                "references": [
                                                                    "local.location"
                                                                ]
                                                            },
                                                            "management": [
                                                                {
                                                                    "auto_repair": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "auto_upgrade": {
                                                                        "references": [
                                                                            "each.value",
                                                                            "local.default_auto_upgrade"
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "max_pods_per_node": {
                                                                "references": [
                                                                    "each.value"
                                                                ]
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "each.key"
                                                                ]
                                                            },
                                                            "node_config": [
                                                                {
                                                                    "boot_disk_kms_key": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "disk_size_gb": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "disk_type": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "guest_accelerator": {
                                                                        "references": [
                                                                            "each.value",
                                                                            "each.value",
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "image_type": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "labels": {
                                                                        "references": [
                                                                            "local.node_pools_labels",
                                                                            "var.name",
                                                                            "local.node_pools_labels",
                                                                            "each.value",
                                                                            "local.node_pools_labels",
                                                                            "local.node_pools_labels",
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "local_ssd_count": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "machine_type": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "metadata": {
                                                                        "references": [
                                                                            "local.node_pools_metadata",
                                                                            "var.name",
                                                                            "local.node_pools_metadata",
                                                                            "each.value",
                                                                            "local.node_pools_metadata",
                                                                            "local.node_pools_metadata",
                                                                            "each.value",
                                                                            "var.disable_legacy_metadata_endpoints"
                                                                        ]
                                                                    },
                                                                    "oauth_scopes": {
                                                                        "references": [
                                                                            "local.node_pools_oauth_scopes",
                                                                            "local.node_pools_oauth_scopes",
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "preemptible": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "service_account": {
                                                                        "references": [
                                                                            "each.value",
                                                                            "local.service_account"
                                                                        ]
                                                                    },
                                                                    "shielded_instance_config": [
                                                                        {
                                                                            "enable_integrity_monitoring": {
                                                                                "references": [
                                                                                    "each.value"
                                                                                ]
                                                                            },
                                                                            "enable_secure_boot": {
                                                                                "references": [
                                                                                    "each.value"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "tags": {
                                                                        "references": [
                                                                            "local.node_pools_tags",
                                                                            "local.cluster_network_tag",
                                                                            "local.node_pools_tags",
                                                                            "local.cluster_network_tag",
                                                                            "each.value",
                                                                            "local.node_pools_tags",
                                                                            "local.node_pools_tags",
                                                                            "each.value"
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "node_count": {
                                                                "references": [
                                                                    "each.value",
                                                                    "each.value"
                                                                ]
                                                            },
                                                            "node_locations": {
                                                                "references": [
                                                                    "each.value",
                                                                    "each.value"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "var.project_id"
                                                                ]
                                                            },
                                                            "timeouts": {
                                                                "create": {
                                                                    "constant_value": "45m"
                                                                },
                                                                "delete": {
                                                                    "constant_value": "45m"
                                                                },
                                                                "update": {
                                                                    "constant_value": "45m"
                                                                }
                                                            },
                                                            "upgrade_settings": [
                                                                {
                                                                    "max_surge": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    },
                                                                    "max_unavailable": {
                                                                        "references": [
                                                                            "each.value"
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "version": {
                                                                "references": [
                                                                    "each.value",
                                                                    "each.value",
                                                                    "google_container_cluster.primary"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 1,
                                                        "for_each_expression": {
                                                            "references": [
                                                                "local.node_pools"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "google_project_iam_member.cluster_service_account-gcr",
                                                        "mode": "managed",
                                                        "type": "google_project_iam_member",
                                                        "name": "cluster_service_account-gcr",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "member": {
                                                                "references": [
                                                                    "google_service_account.cluster_service_account[0]"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "var.registry_project_id",
                                                                    "var.project_id",
                                                                    "var.registry_project_id"
                                                                ]
                                                            },
                                                            "role": {
                                                                "constant_value": "roles/storage.objectViewer"
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create_service_account",
                                                                "var.grant_registry_access"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "google_project_iam_member.cluster_service_account-log_writer",
                                                        "mode": "managed",
                                                        "type": "google_project_iam_member",
                                                        "name": "cluster_service_account-log_writer",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "member": {
                                                                "references": [
                                                                    "google_service_account.cluster_service_account[0]"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "google_service_account.cluster_service_account[0]"
                                                                ]
                                                            },
                                                            "role": {
                                                                "constant_value": "roles/logging.logWriter"
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create_service_account"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "google_project_iam_member.cluster_service_account-metric_writer",
                                                        "mode": "managed",
                                                        "type": "google_project_iam_member",
                                                        "name": "cluster_service_account-metric_writer",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "member": {
                                                                "references": [
                                                                    "google_service_account.cluster_service_account[0]"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "google_project_iam_member.cluster_service_account-log_writer[0]"
                                                                ]
                                                            },
                                                            "role": {
                                                                "constant_value": "roles/monitoring.metricWriter"
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create_service_account"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "google_project_iam_member.cluster_service_account-monitoring_viewer",
                                                        "mode": "managed",
                                                        "type": "google_project_iam_member",
                                                        "name": "cluster_service_account-monitoring_viewer",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "member": {
                                                                "references": [
                                                                    "google_service_account.cluster_service_account[0]"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "google_project_iam_member.cluster_service_account-metric_writer[0]"
                                                                ]
                                                            },
                                                            "role": {
                                                                "constant_value": "roles/monitoring.viewer"
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create_service_account"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "google_project_iam_member.cluster_service_account-resourceMetadata-writer",
                                                        "mode": "managed",
                                                        "type": "google_project_iam_member",
                                                        "name": "cluster_service_account-resourceMetadata-writer",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "member": {
                                                                "references": [
                                                                    "google_service_account.cluster_service_account[0]"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "google_project_iam_member.cluster_service_account-monitoring_viewer[0]"
                                                                ]
                                                            },
                                                            "role": {
                                                                "constant_value": "roles/stackdriver.resourceMetadata.writer"
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create_service_account"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "google_service_account.cluster_service_account",
                                                        "mode": "managed",
                                                        "type": "google_service_account",
                                                        "name": "cluster_service_account",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "account_id": {
                                                                "references": [
                                                                    "var.name",
                                                                    "var.name",
                                                                    "random_string.cluster_service_account_suffix"
                                                                ]
                                                            },
                                                            "display_name": {
                                                                "references": [
                                                                    "var.name"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "var.project_id"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create_service_account"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "kubernetes_config_map.ip-masq-agent",
                                                        "mode": "managed",
                                                        "type": "kubernetes_config_map",
                                                        "name": "ip-masq-agent",
                                                        "provider_config_key": "gke:kubernetes",
                                                        "expressions": {
                                                            "data": {
                                                                "references": [
                                                                    "var.non_masquerade_cidrs",
                                                                    "var.ip_masq_resync_interval",
                                                                    "var.ip_masq_link_local"
                                                                ]
                                                            },
                                                            "metadata": [
                                                                {
                                                                    "labels": {
                                                                        "constant_value": {
                                                                            "maintained_by": "terraform"
                                                                        }
                                                                    },
                                                                    "name": {
                                                                        "constant_value": "ip-masq-agent"
                                                                    },
                                                                    "namespace": {
                                                                        "constant_value": "kube-system"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.configure_ip_masq"
                                                            ]
                                                        },
                                                        "depends_on": [
                                                            "data.google_client_config.default",
                                                            "google_container_cluster.primary",
                                                            "google_container_node_pool.pools"
                                                        ]
                                                    },
                                                    {
                                                        "address": "kubernetes_config_map.kube-dns",
                                                        "mode": "managed",
                                                        "type": "kubernetes_config_map",
                                                        "name": "kube-dns",
                                                        "provider_config_key": "gke:kubernetes",
                                                        "expressions": {
                                                            "data": {
                                                                "references": [
                                                                    "var.stub_domains"
                                                                ]
                                                            },
                                                            "metadata": [
                                                                {
                                                                    "labels": {
                                                                        "constant_value": {
                                                                            "maintained_by": "terraform"
                                                                        }
                                                                    },
                                                                    "name": {
                                                                        "constant_value": "kube-dns"
                                                                    },
                                                                    "namespace": {
                                                                        "constant_value": "kube-system"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "local.custom_kube_dns_config",
                                                                "local.upstream_nameservers_config"
                                                            ]
                                                        },
                                                        "depends_on": [
                                                            "module.gcloud_delete_default_kube_dns_configmap.wait",
                                                            "data.google_client_config.default",
                                                            "google_container_cluster.primary",
                                                            "google_container_node_pool.pools"
                                                        ]
                                                    },
                                                    {
                                                        "address": "kubernetes_config_map.kube-dns-upstream-nameservers-and-stub-domains",
                                                        "mode": "managed",
                                                        "type": "kubernetes_config_map",
                                                        "name": "kube-dns-upstream-nameservers-and-stub-domains",
                                                        "provider_config_key": "gke:kubernetes",
                                                        "expressions": {
                                                            "data": {
                                                                "references": [
                                                                    "var.upstream_nameservers",
                                                                    "var.stub_domains"
                                                                ]
                                                            },
                                                            "metadata": [
                                                                {
                                                                    "labels": {
                                                                        "constant_value": {
                                                                            "maintained_by": "terraform"
                                                                        }
                                                                    },
                                                                    "name": {
                                                                        "constant_value": "kube-dns"
                                                                    },
                                                                    "namespace": {
                                                                        "constant_value": "kube-system"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "local.custom_kube_dns_config",
                                                                "local.upstream_nameservers_config"
                                                            ]
                                                        },
                                                        "depends_on": [
                                                            "module.gcloud_delete_default_kube_dns_configmap.wait",
                                                            "data.google_client_config.default",
                                                            "google_container_cluster.primary",
                                                            "google_container_node_pool.pools"
                                                        ]
                                                    },
                                                    {
                                                        "address": "kubernetes_config_map.kube-dns-upstream-namservers",
                                                        "mode": "managed",
                                                        "type": "kubernetes_config_map",
                                                        "name": "kube-dns-upstream-namservers",
                                                        "provider_config_key": "gke:kubernetes",
                                                        "expressions": {
                                                            "data": {
                                                                "references": [
                                                                    "var.upstream_nameservers"
                                                                ]
                                                            },
                                                            "metadata": [
                                                                {
                                                                    "labels": {
                                                                        "constant_value": {
                                                                            "maintained_by": "terraform"
                                                                        }
                                                                    },
                                                                    "name": {
                                                                        "constant_value": "kube-dns"
                                                                    },
                                                                    "namespace": {
                                                                        "constant_value": "kube-system"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "local.custom_kube_dns_config",
                                                                "local.upstream_nameservers_config"
                                                            ]
                                                        },
                                                        "depends_on": [
                                                            "module.gcloud_delete_default_kube_dns_configmap.wait",
                                                            "data.google_client_config.default",
                                                            "google_container_cluster.primary",
                                                            "google_container_node_pool.pools"
                                                        ]
                                                    },
                                                    {
                                                        "address": "random_shuffle.available_zones",
                                                        "mode": "managed",
                                                        "type": "random_shuffle",
                                                        "name": "available_zones",
                                                        "provider_config_key": "gke:random",
                                                        "expressions": {
                                                            "input": {
                                                                "references": [
                                                                    "data.google_compute_zones.available"
                                                                ]
                                                            },
                                                            "result_count": {
                                                                "constant_value": 3
                                                            }
                                                        },
                                                        "schema_version": 0
                                                    },
                                                    {
                                                        "address": "random_string.cluster_service_account_suffix",
                                                        "mode": "managed",
                                                        "type": "random_string",
                                                        "name": "cluster_service_account_suffix",
                                                        "provider_config_key": "gke:random",
                                                        "expressions": {
                                                            "length": {
                                                                "constant_value": 4
                                                            },
                                                            "lower": {
                                                                "constant_value": true
                                                            },
                                                            "special": {
                                                                "constant_value": false
                                                            },
                                                            "upper": {
                                                                "constant_value": false
                                                            }
                                                        },
                                                        "schema_version": 1
                                                    },
                                                    {
                                                        "address": "data.google_client_config.default",
                                                        "mode": "data",
                                                        "type": "google_client_config",
                                                        "name": "default",
                                                        "provider_config_key": "gke:google-beta",
                                                        "schema_version": 0
                                                    },
                                                    {
                                                        "address": "data.google_compute_subnetwork.gke_subnetwork",
                                                        "mode": "data",
                                                        "type": "google_compute_subnetwork",
                                                        "name": "gke_subnetwork",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "name": {
                                                                "references": [
                                                                    "var.subnetwork"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "local.network_project_id"
                                                                ]
                                                            },
                                                            "region": {
                                                                "references": [
                                                                    "local.region"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.add_cluster_firewall_rules"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "data.google_compute_zones.available",
                                                        "mode": "data",
                                                        "type": "google_compute_zones",
                                                        "name": "available",
                                                        "provider_config_key": "gke:google-beta",
                                                        "expressions": {
                                                            "project": {
                                                                "references": [
                                                                    "var.project_id"
                                                                ]
                                                            },
                                                            "region": {
                                                                "references": [
                                                                    "local.region"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0
                                                    },
                                                    {
                                                        "address": "data.google_container_engine_versions.region",
                                                        "mode": "data",
                                                        "type": "google_container_engine_versions",
                                                        "name": "region",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "location": {
                                                                "references": [
                                                                    "local.location"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "var.project_id"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0
                                                    },
                                                    {
                                                        "address": "data.google_container_engine_versions.zone",
                                                        "mode": "data",
                                                        "type": "google_container_engine_versions",
                                                        "name": "zone",
                                                        "provider_config_key": "gke:google",
                                                        "expressions": {
                                                            "location": {
                                                                "references": [
                                                                    "local.zone_count",
                                                                    "data.google_compute_zones.available",
                                                                    "var.zones"
                                                                ]
                                                            },
                                                            "project": {
                                                                "references": [
                                                                    "var.project_id"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0
                                                    }
                                                ],
                                                "module_calls": {
                                                    "gcloud_delete_default_kube_dns_configmap": {
                                                        "source": "terraform-google-modules/gcloud/google//modules/kubectl-wrapper",
                                                        "expressions": {
                                                            "cluster_location": {
                                                                "references": [
                                                                    "google_container_cluster.primary"
                                                                ]
                                                            },
                                                            "cluster_name": {
                                                                "references": [
                                                                    "google_container_cluster.primary"
                                                                ]
                                                            },
                                                            "enabled": {
                                                                "references": [
                                                                    "local.custom_kube_dns_config",
                                                                    "local.upstream_nameservers_config",
                                                                    "var.skip_provisioners"
                                                                ]
                                                            },
                                                            "kubectl_create_command": {
                                                                "references": [
                                                                    "path.module"
                                                                ]
                                                            },
                                                            "kubectl_destroy_command": {
                                                                "constant_value": ""
                                                            },
                                                            "module_depends_on": {
                                                                "references": [
                                                                    "data.google_client_config.default",
                                                                    "google_container_cluster.primary",
                                                                    "google_container_node_pool.pools"
                                                                ]
                                                            },
                                                            "project_id": {
                                                                "references": [
                                                                    "var.project_id"
                                                                ]
                                                            },
                                                            "skip_download": {
                                                                "references": [
                                                                    "var.gcloud_skip_download"
                                                                ]
                                                            },
                                                            "upgrade": {
                                                                "references": [
                                                                    "var.gcloud_upgrade"
                                                                ]
                                                            }
                                                        },
                                                        "module": {
                                                            "outputs": {
                                                                "bin_dir": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "module.gcloud_kubectl.bin_dir"
                                                                        ]
                                                                    },
                                                                    "description": "The full bin path of the modules executables"
                                                                },
                                                                "create_cmd_bin": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "module.gcloud_kubectl.create_cmd_bin"
                                                                        ]
                                                                    },
                                                                    "description": "The full bin path \u0026 command used on create"
                                                                },
                                                                "destroy_cmd_bin": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "module.gcloud_kubectl.destroy_cmd_bin"
                                                                        ]
                                                                    },
                                                                    "description": "The full bin path \u0026 command used on destroy"
                                                                },
                                                                "wait": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "module.gcloud_kubectl.wait"
                                                                        ]
                                                                    },
                                                                    "description": "An output to use when you want to depend on cmd finishing"
                                                                }
                                                            },
                                                            "module_calls": {
                                                                "gcloud_kubectl": {
                                                                    "source": "../..",
                                                                    "expressions": {
                                                                        "additional_components": {
                                                                            "references": [
                                                                                "var.additional_components"
                                                                            ]
                                                                        },
                                                                        "create_cmd_body": {
                                                                            "references": [
                                                                                "local.base_cmd",
                                                                                "var.kubectl_create_command"
                                                                            ]
                                                                        },
                                                                        "create_cmd_entrypoint": {
                                                                            "references": [
                                                                                "path.module"
                                                                            ]
                                                                        },
                                                                        "create_cmd_triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        },
                                                                        "destroy_cmd_body": {
                                                                            "references": [
                                                                                "local.base_cmd",
                                                                                "var.kubectl_destroy_command"
                                                                            ]
                                                                        },
                                                                        "destroy_cmd_entrypoint": {
                                                                            "references": [
                                                                                "path.module"
                                                                            ]
                                                                        },
                                                                        "enabled": {
                                                                            "references": [
                                                                                "var.enabled"
                                                                            ]
                                                                        },
                                                                        "gcloud_sdk_version": {
                                                                            "references": [
                                                                                "var.gcloud_sdk_version"
                                                                            ]
                                                                        },
                                                                        "module_depends_on": {
                                                                            "references": [
                                                                                "var.module_depends_on"
                                                                            ]
                                                                        },
                                                                        "service_account_key_file": {
                                                                            "references": [
                                                                                "var.service_account_key_file"
                                                                            ]
                                                                        },
                                                                        "skip_download": {
                                                                            "references": [
                                                                                "var.skip_download"
                                                                            ]
                                                                        },
                                                                        "upgrade": {
                                                                            "references": [
                                                                                "var.upgrade"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "module": {
                                                                        "outputs": {
                                                                            "bin_dir": {
                                                                                "expression": {
                                                                                    "references": [
                                                                                        "local.gcloud_bin_path"
                                                                                    ]
                                                                                },
                                                                                "description": "The full bin path of the modules executables"
                                                                            },
                                                                            "create_cmd_bin": {
                                                                                "expression": {
                                                                                    "references": [
                                                                                        "local.create_cmd_bin"
                                                                                    ]
                                                                                },
                                                                                "description": "The full bin path \u0026 command used on create"
                                                                            },
                                                                            "destroy_cmd_bin": {
                                                                                "expression": {
                                                                                    "references": [
                                                                                        "local.destroy_cmd_bin"
                                                                                    ]
                                                                                },
                                                                                "description": "The full bin path \u0026 command used on destroy"
                                                                            },
                                                                            "downloaded": {
                                                                                "expression": {
                                                                                    "references": [
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "local.wait"
                                                                                ],
                                                                                "description": "Whether gcloud was downloaded or not"
                                                                            },
                                                                            "wait": {
                                                                                "expression": {
                                                                                    "references": [
                                                                                        "local.wait"
                                                                                    ]
                                                                                },
                                                                                "description": "An output to use when you want to depend on cmd finishing"
                                                                            }
                                                                        },
                                                                        "resources": [
                                                                            {
                                                                                "address": "null_resource.additional_components",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "additional_components",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "local.additional_components_command",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "var.additional_components"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.upgrade"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.additional_components_destroy",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "additional_components_destroy",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "local.additional_components_command"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "var.additional_components"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.run_command"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.decompress",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "decompress",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "local.decompress_command",
                                                                                            "local.download_gcloud_command",
                                                                                            "local.download_jq_command",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.download_gcloud",
                                                                                    "null_resource.download_jq"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.decompress_destroy",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "decompress_destroy",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "local.decompress_wrapper"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.upgrade_destroy"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.download_gcloud",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "download_gcloud",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "local.download_gcloud_command",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.prepare_cache"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.download_jq",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "download_jq",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "local.download_jq_command",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.prepare_cache"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.gcloud_auth_google_credentials",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "gcloud_auth_google_credentials",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "local.gcloud_auth_google_credentials_command",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "var.use_tf_google_credentials_env_var"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.upgrade"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.gcloud_auth_google_credentials_destroy",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "gcloud_auth_google_credentials_destroy",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "local.gcloud_auth_google_credentials_command"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "var.use_tf_google_credentials_env_var"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.run_command"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.gcloud_auth_service_account_key_file",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "gcloud_auth_service_account_key_file",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "local.gcloud_auth_service_account_key_file_command",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "var.service_account_key_file"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.upgrade"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.gcloud_auth_service_account_key_file_destroy",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "gcloud_auth_service_account_key_file_destroy",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "local.gcloud_auth_service_account_key_file_command"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "var.service_account_key_file"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.run_command"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.module_depends_on",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "module_depends_on",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.module_depends_on"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.module_depends_on"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "address": "null_resource.prepare_cache",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "prepare_cache",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "local.prepare_cache_command",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.module_depends_on"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.run_command",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "run_command",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self",
                                                                                                    "self",
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self",
                                                                                                    "self",
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "var.destroy_cmd_entrypoint",
                                                                                            "var.destroy_cmd_body",
                                                                                            "local.gcloud_bin_abs_path",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.module_depends_on",
                                                                                    "null_resource.decompress",
                                                                                    "null_resource.additional_components",
                                                                                    "null_resource.gcloud_auth_google_credentials",
                                                                                    "null_resource.gcloud_auth_service_account_key_file"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.upgrade",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "upgrade",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "var.create_cmd_entrypoint",
                                                                                            "var.create_cmd_body",
                                                                                            "local.upgrade_command",
                                                                                            "var.create_cmd_triggers"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "var.upgrade",
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.decompress"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "null_resource.upgrade_destroy",
                                                                                "mode": "managed",
                                                                                "type": "null_resource",
                                                                                "name": "upgrade_destroy",
                                                                                "provider_config_key": "gcloud_kubectl:null",
                                                                                "provisioners": [
                                                                                    {
                                                                                        "type": "local-exec",
                                                                                        "expressions": {
                                                                                            "command": {
                                                                                                "references": [
                                                                                                    "self"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expressions": {
                                                                                    "triggers": {
                                                                                        "references": [
                                                                                            "local.upgrade_command"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "var.enabled",
                                                                                        "var.upgrade",
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                },
                                                                                "depends_on": [
                                                                                    "null_resource.additional_components_destroy",
                                                                                    "null_resource.gcloud_auth_service_account_key_file_destroy",
                                                                                    "null_resource.gcloud_auth_google_credentials_destroy"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "address": "random_id.cache",
                                                                                "mode": "managed",
                                                                                "type": "random_id",
                                                                                "name": "cache",
                                                                                "provider_config_key": "gcloud_kubectl:random",
                                                                                "expressions": {
                                                                                    "byte_length": {
                                                                                        "constant_value": 4
                                                                                    }
                                                                                },
                                                                                "schema_version": 0,
                                                                                "count_expression": {
                                                                                    "references": [
                                                                                        "local.skip_download"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "address": "data.external.env_override",
                                                                                "mode": "data",
                                                                                "type": "external",
                                                                                "name": "env_override",
                                                                                "provider_config_key": "gcloud_kubectl:external",
                                                                                "expressions": {
                                                                                    "program": {
                                                                                        "references": [
                                                                                            "path.module"
                                                                                        ]
                                                                                    },
                                                                                    "query": {
                                                                                        "constant_value": {}
                                                                                    }
                                                                                },
                                                                                "schema_version": 0
                                                                            }
                                                                        ],
                                                                        "variables": {
                                                                            "additional_components": {
                                                                                "default": [],
                                                                                "description": "Additional gcloud CLI components to install. Defaults to none. Valid value are components listed in `gcloud components list`"
                                                                            },
                                                                            "create_cmd_body": {
                                                                                "default": "info",
                                                                                "description": "On create, the command body you'd like to run with your entrypoint."
                                                                            },
                                                                            "create_cmd_entrypoint": {
                                                                                "default": "gcloud",
                                                                                "description": "On create, the command entrypoint you'd like to use. Can also be set to a custom script. Module's bin directory will be prepended to path."
                                                                            },
                                                                            "create_cmd_triggers": {
                                                                                "default": {},
                                                                                "description": "List of any additional triggers for the create command execution."
                                                                            },
                                                                            "destroy_cmd_body": {
                                                                                "default": "info",
                                                                                "description": "On destroy, the command body you'd like to run with your entrypoint."
                                                                            },
                                                                            "destroy_cmd_entrypoint": {
                                                                                "default": "gcloud",
                                                                                "description": "On destroy, the command entrypoint you'd like to use.  Can also be set to a custom script. Module's bin directory will be prepended to path."
                                                                            },
                                                                            "enabled": {
                                                                                "default": true,
                                                                                "description": "Flag to optionally disable usage of this module."
                                                                            },
                                                                            "gcloud_download_url": {
                                                                                "default": "",
                                                                                "description": "Custom gcloud download url. Optional."
                                                                            },
                                                                            "gcloud_sdk_version": {
                                                                                "default": "281.0.0",
                                                                                "description": "The gcloud sdk version to download."
                                                                            },
                                                                            "jq_download_url": {
                                                                                "default": "",
                                                                                "description": "Custom jq download url. Optional."
                                                                            },
                                                                            "jq_version": {
                                                                                "default": "1.6",
                                                                                "description": "The jq version to download."
                                                                            },
                                                                            "module_depends_on": {
                                                                                "default": [],
                                                                                "description": "List of modules or resources this module depends on."
                                                                            },
                                                                            "platform": {
                                                                                "default": "linux",
                                                                                "description": "Platform CLI will run on. Defaults to linux. Valid values: linux, darwin"
                                                                            },
                                                                            "service_account_key_file": {
                                                                                "default": "",
                                                                                "description": "Path to service account key file to run `gcloud auth activate-service-account` with. Optional."
                                                                            },
                                                                            "skip_download": {
                                                                                "default": false,
                                                                                "description": "Whether to skip downloading gcloud (assumes gcloud is already available outside the module)"
                                                                            },
                                                                            "upgrade": {
                                                                                "default": true,
                                                                                "description": "Whether to upgrade gcloud at runtime"
                                                                            },
                                                                            "use_tf_google_credentials_env_var": {
                                                                                "default": false,
                                                                                "description": "Use GOOGLE_CREDENTIALS environment variable to run `gcloud auth activate-service-account` with. Optional."
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "variables": {
                                                                "additional_components": {
                                                                    "default": [
                                                                        "kubectl"
                                                                    ],
                                                                    "description": "Additional gcloud CLI components to install. Defaults to installing kubectl. Valid value are components listed in `gcloud components list`"
                                                                },
                                                                "cluster_location": {
                                                                    "default": "",
                                                                    "description": "Cluster location (Zone/Region). Optional if use_existing_context is true."
                                                                },
                                                                "cluster_name": {
                                                                    "default": "",
                                                                    "description": "Cluster name. Optional if use_existing_context is true."
                                                                },
                                                                "create_cmd_triggers": {
                                                                    "default": {},
                                                                    "description": "List of any additional triggers for the create command execution."
                                                                },
                                                                "enabled": {
                                                                    "default": true,
                                                                    "description": "Flag to optionally disable usage of this module."
                                                                },
                                                                "gcloud_sdk_version": {
                                                                    "default": "281.0.0",
                                                                    "description": "The gcloud sdk version to download."
                                                                },
                                                                "internal_ip": {
                                                                    "default": false,
                                                                    "description": "Use internal ip for the cluster endpoint."
                                                                },
                                                                "kubectl_create_command": {
                                                                    "description": "The kubectl command to create resources."
                                                                },
                                                                "kubectl_destroy_command": {
                                                                    "description": "The kubectl command to destroy resources."
                                                                },
                                                                "module_depends_on": {
                                                                    "default": [],
                                                                    "description": "List of modules or resources this module depends on."
                                                                },
                                                                "project_id": {
                                                                    "default": "",
                                                                    "description": "The project ID hosting the cluster. Optional if use_existing_context is true."
                                                                },
                                                                "service_account_key_file": {
                                                                    "default": "",
                                                                    "description": "Path to service account key file to auth as for running `gcloud container clusters get-credentials`."
                                                                },
                                                                "skip_download": {
                                                                    "default": true,
                                                                    "description": "Whether to skip downloading gcloud (assumes gcloud and kubectl is already available outside the module)"
                                                                },
                                                                "upgrade": {
                                                                    "default": true,
                                                                    "description": "Whether to upgrade gcloud at runtime"
                                                                },
                                                                "use_existing_context": {
                                                                    "default": false,
                                                                    "description": "Use existing kubecontext to auth kube-api."
                                                                }
                                                            }
                                                        },
                                                        "version_constraint": "~\u003e 1.4"
                                                    },
                                                    "gcloud_wait_for_cluster": {
                                                        "source": "terraform-google-modules/gcloud/google",
                                                        "expressions": {
                                                            "create_cmd_body": {
                                                                "references": [
                                                                    "var.project_id",
                                                                    "var.name"
                                                                ]
                                                            },
                                                            "create_cmd_entrypoint": {
                                                                "references": [
                                                                    "path.module"
                                                                ]
                                                            },
                                                            "destroy_cmd_body": {
                                                                "references": [
                                                                    "var.project_id",
                                                                    "var.name"
                                                                ]
                                                            },
                                                            "destroy_cmd_entrypoint": {
                                                                "references": [
                                                                    "path.module"
                                                                ]
                                                            },
                                                            "enabled": {
                                                                "references": [
                                                                    "var.skip_provisioners"
                                                                ]
                                                            },
                                                            "module_depends_on": {
                                                                "references": [
                                                                    "google_container_cluster.primary",
                                                                    "google_container_node_pool.pools"
                                                                ]
                                                            },
                                                            "skip_download": {
                                                                "references": [
                                                                    "var.gcloud_skip_download"
                                                                ]
                                                            },
                                                            "upgrade": {
                                                                "references": [
                                                                    "var.gcloud_upgrade"
                                                                ]
                                                            }
                                                        },
                                                        "module": {
                                                            "outputs": {
                                                                "bin_dir": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "local.gcloud_bin_path"
                                                                        ]
                                                                    },
                                                                    "description": "The full bin path of the modules executables"
                                                                },
                                                                "create_cmd_bin": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "local.create_cmd_bin"
                                                                        ]
                                                                    },
                                                                    "description": "The full bin path \u0026 command used on create"
                                                                },
                                                                "destroy_cmd_bin": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "local.destroy_cmd_bin"
                                                                        ]
                                                                    },
                                                                    "description": "The full bin path \u0026 command used on destroy"
                                                                },
                                                                "downloaded": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "local.skip_download"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "local.wait"
                                                                    ],
                                                                    "description": "Whether gcloud was downloaded or not"
                                                                },
                                                                "wait": {
                                                                    "expression": {
                                                                        "references": [
                                                                            "local.wait"
                                                                        ]
                                                                    },
                                                                    "description": "An output to use when you want to depend on cmd finishing"
                                                                }
                                                            },
                                                            "resources": [
                                                                {
                                                                    "address": "null_resource.additional_components",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "additional_components",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "local.additional_components_command",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "var.additional_components"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.upgrade"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.additional_components_destroy",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "additional_components_destroy",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "local.additional_components_command"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "var.additional_components"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.run_command"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.decompress",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "decompress",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "local.decompress_command",
                                                                                "local.download_gcloud_command",
                                                                                "local.download_jq_command",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "local.skip_download"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.download_gcloud",
                                                                        "null_resource.download_jq"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.decompress_destroy",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "decompress_destroy",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "local.decompress_wrapper"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "local.skip_download"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.upgrade_destroy"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.download_gcloud",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "download_gcloud",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "local.download_gcloud_command",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "local.skip_download"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.prepare_cache"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.download_jq",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "download_jq",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "local.download_jq_command",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "local.skip_download"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.prepare_cache"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.gcloud_auth_google_credentials",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "gcloud_auth_google_credentials",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "local.gcloud_auth_google_credentials_command",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "var.use_tf_google_credentials_env_var"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.upgrade"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.gcloud_auth_google_credentials_destroy",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "gcloud_auth_google_credentials_destroy",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "local.gcloud_auth_google_credentials_command"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "var.use_tf_google_credentials_env_var"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.run_command"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.gcloud_auth_service_account_key_file",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "gcloud_auth_service_account_key_file",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "local.gcloud_auth_service_account_key_file_command",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "var.service_account_key_file"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.upgrade"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.gcloud_auth_service_account_key_file_destroy",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "gcloud_auth_service_account_key_file_destroy",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "local.gcloud_auth_service_account_key_file_command"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "var.service_account_key_file"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.run_command"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.module_depends_on",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "module_depends_on",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.module_depends_on"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.module_depends_on"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "address": "null_resource.prepare_cache",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "prepare_cache",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "local.prepare_cache_command",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "local.skip_download"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.module_depends_on"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.run_command",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "run_command",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self",
                                                                                        "self",
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self",
                                                                                        "self",
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "var.destroy_cmd_entrypoint",
                                                                                "var.destroy_cmd_body",
                                                                                "local.gcloud_bin_abs_path",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.module_depends_on",
                                                                        "null_resource.decompress",
                                                                        "null_resource.additional_components",
                                                                        "null_resource.gcloud_auth_google_credentials",
                                                                        "null_resource.gcloud_auth_service_account_key_file"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.upgrade",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "upgrade",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "var.create_cmd_entrypoint",
                                                                                "var.create_cmd_body",
                                                                                "local.upgrade_command",
                                                                                "var.create_cmd_triggers"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "var.upgrade",
                                                                            "local.skip_download"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.decompress"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "null_resource.upgrade_destroy",
                                                                    "mode": "managed",
                                                                    "type": "null_resource",
                                                                    "name": "upgrade_destroy",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:null",
                                                                    "provisioners": [
                                                                        {
                                                                            "type": "local-exec",
                                                                            "expressions": {
                                                                                "command": {
                                                                                    "references": [
                                                                                        "self"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expressions": {
                                                                        "triggers": {
                                                                            "references": [
                                                                                "local.upgrade_command"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "var.enabled",
                                                                            "var.upgrade",
                                                                            "local.skip_download"
                                                                        ]
                                                                    },
                                                                    "depends_on": [
                                                                        "null_resource.additional_components_destroy",
                                                                        "null_resource.gcloud_auth_service_account_key_file_destroy",
                                                                        "null_resource.gcloud_auth_google_credentials_destroy"
                                                                    ]
                                                                },
                                                                {
                                                                    "address": "random_id.cache",
                                                                    "mode": "managed",
                                                                    "type": "random_id",
                                                                    "name": "cache",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:random",
                                                                    "expressions": {
                                                                        "byte_length": {
                                                                            "constant_value": 4
                                                                        }
                                                                    },
                                                                    "schema_version": 0,
                                                                    "count_expression": {
                                                                        "references": [
                                                                            "local.skip_download"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "address": "data.external.env_override",
                                                                    "mode": "data",
                                                                    "type": "external",
                                                                    "name": "env_override",
                                                                    "provider_config_key": "gcloud_wait_for_cluster:external",
                                                                    "expressions": {
                                                                        "program": {
                                                                            "references": [
                                                                                "path.module"
                                                                            ]
                                                                        },
                                                                        "query": {
                                                                            "constant_value": {}
                                                                        }
                                                                    },
                                                                    "schema_version": 0
                                                                }
                                                            ],
                                                            "variables": {
                                                                "additional_components": {
                                                                    "default": [],
                                                                    "description": "Additional gcloud CLI components to install. Defaults to none. Valid value are components listed in `gcloud components list`"
                                                                },
                                                                "create_cmd_body": {
                                                                    "default": "info",
                                                                    "description": "On create, the command body you'd like to run with your entrypoint."
                                                                },
                                                                "create_cmd_entrypoint": {
                                                                    "default": "gcloud",
                                                                    "description": "On create, the command entrypoint you'd like to use. Can also be set to a custom script. Module's bin directory will be prepended to path."
                                                                },
                                                                "create_cmd_triggers": {
                                                                    "default": {},
                                                                    "description": "List of any additional triggers for the create command execution."
                                                                },
                                                                "destroy_cmd_body": {
                                                                    "default": "info",
                                                                    "description": "On destroy, the command body you'd like to run with your entrypoint."
                                                                },
                                                                "destroy_cmd_entrypoint": {
                                                                    "default": "gcloud",
                                                                    "description": "On destroy, the command entrypoint you'd like to use.  Can also be set to a custom script. Module's bin directory will be prepended to path."
                                                                },
                                                                "enabled": {
                                                                    "default": true,
                                                                    "description": "Flag to optionally disable usage of this module."
                                                                },
                                                                "gcloud_download_url": {
                                                                    "default": "",
                                                                    "description": "Custom gcloud download url. Optional."
                                                                },
                                                                "gcloud_sdk_version": {
                                                                    "default": "281.0.0",
                                                                    "description": "The gcloud sdk version to download."
                                                                },
                                                                "jq_download_url": {
                                                                    "default": "",
                                                                    "description": "Custom jq download url. Optional."
                                                                },
                                                                "jq_version": {
                                                                    "default": "1.6",
                                                                    "description": "The jq version to download."
                                                                },
                                                                "module_depends_on": {
                                                                    "default": [],
                                                                    "description": "List of modules or resources this module depends on."
                                                                },
                                                                "platform": {
                                                                    "default": "linux",
                                                                    "description": "Platform CLI will run on. Defaults to linux. Valid values: linux, darwin"
                                                                },
                                                                "service_account_key_file": {
                                                                    "default": "",
                                                                    "description": "Path to service account key file to run `gcloud auth activate-service-account` with. Optional."
                                                                },
                                                                "skip_download": {
                                                                    "default": false,
                                                                    "description": "Whether to skip downloading gcloud (assumes gcloud is already available outside the module)"
                                                                },
                                                                "upgrade": {
                                                                    "default": true,
                                                                    "description": "Whether to upgrade gcloud at runtime"
                                                                },
                                                                "use_tf_google_credentials_env_var": {
                                                                    "default": false,
                                                                    "description": "Use GOOGLE_CREDENTIALS environment variable to run `gcloud auth activate-service-account` with. Optional."
                                                                }
                                                            }
                                                        },
                                                        "version_constraint": "~\u003e 1.3.0"
                                                    }
                                                },
                                                "variables": {
                                                    "add_cluster_firewall_rules": {
                                                        "default": false,
                                                        "description": "Create additional firewall rules"
                                                    },
                                                    "authenticator_security_group": {
                                                        "default": null,
                                                        "description": "The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format gke-security-groups@yourdomain.com"
                                                    },
                                                    "basic_auth_password": {
                                                        "default": "",
                                                        "description": "The password to be used with Basic Authentication."
                                                    },
                                                    "basic_auth_username": {
                                                        "default": "",
                                                        "description": "The username to be used with Basic Authentication. An empty value will disable Basic Authentication, which is the recommended configuration."
                                                    },
                                                    "cloudrun": {
                                                        "default": false,
                                                        "description": "(Beta) Enable CloudRun addon"
                                                    },
                                                    "cluster_autoscaling": {
                                                        "default": {
                                                            "autoscaling_profile": "BALANCED",
                                                            "enabled": false,
                                                            "max_cpu_cores": 0,
                                                            "max_memory_gb": 0,
                                                            "min_cpu_cores": 0,
                                                            "min_memory_gb": 0
                                                        },
                                                        "description": "Cluster autoscaling configuration. See [more details](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#clusterautoscaling)"
                                                    },
                                                    "cluster_ipv4_cidr": {
                                                        "default": null,
                                                        "description": "The IP address range of the kubernetes pods in this cluster. Default is an automatically assigned CIDR."
                                                    },
                                                    "cluster_resource_labels": {
                                                        "default": {},
                                                        "description": "The GCE resource labels (a map of key/value pairs) to be applied to the cluster"
                                                    },
                                                    "config_connector": {
                                                        "default": false,
                                                        "description": "(Beta) Whether ConfigConnector is enabled for this cluster."
                                                    },
                                                    "configure_ip_masq": {
                                                        "default": false,
                                                        "description": "Enables the installation of ip masquerading, which is usually no longer required when using aliasied IP addresses. IP masquerading uses a kubectl call, so when you have a private cluster, you will need access to the API server."
                                                    },
                                                    "create_service_account": {
                                                        "default": true,
                                                        "description": "Defines if service account specified to run nodes should be created."
                                                    },
                                                    "database_encryption": {
                                                        "default": [
                                                            {
                                                                "key_name": "",
                                                                "state": "DECRYPTED"
                                                            }
                                                        ],
                                                        "description": "Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of state are: \"ENCRYPTED\"; \"DECRYPTED\". key_name is the name of a CloudKMS key."
                                                    },
                                                    "default_max_pods_per_node": {
                                                        "default": 110,
                                                        "description": "The maximum number of pods to schedule per node"
                                                    },
                                                    "deploy_using_private_endpoint": {
                                                        "default": false,
                                                        "description": "(Beta) A toggle for Terraform and kubectl to connect to the master's internal IP address during deployment."
                                                    },
                                                    "description": {
                                                        "default": "",
                                                        "description": "The description of the cluster"
                                                    },
                                                    "disable_default_snat": {
                                                        "default": false,
                                                        "description": "Whether to disable the default SNAT to support the private use of public IP addresses"
                                                    },
                                                    "disable_legacy_metadata_endpoints": {
                                                        "default": true,
                                                        "description": "Disable the /0.1/ and /v1beta1/ metadata server endpoints on the node. Changing this value will cause all node pools to be recreated."
                                                    },
                                                    "dns_cache": {
                                                        "default": false,
                                                        "description": "(Beta) The status of the NodeLocal DNSCache addon."
                                                    },
                                                    "enable_binary_authorization": {
                                                        "default": false,
                                                        "description": "Enable BinAuthZ Admission controller"
                                                    },
                                                    "enable_intranode_visibility": {
                                                        "default": false,
                                                        "description": "Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network"
                                                    },
                                                    "enable_kubernetes_alpha": {
                                                        "default": false,
                                                        "description": "Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot be upgraded and will be automatically deleted after 30 days."
                                                    },
                                                    "enable_network_egress_export": {
                                                        "default": false,
                                                        "description": "Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic."
                                                    },
                                                    "enable_pod_security_policy": {
                                                        "default": false,
                                                        "description": "enabled - Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created."
                                                    },
                                                    "enable_private_endpoint": {
                                                        "default": false,
                                                        "description": "(Beta) Whether the master's internal IP address is used as the cluster endpoint"
                                                    },
                                                    "enable_private_nodes": {
                                                        "default": false,
                                                        "description": "(Beta) Whether nodes have internal IP addresses only"
                                                    },
                                                    "enable_resource_consumption_export": {
                                                        "default": true,
                                                        "description": "Whether to enable resource consumption metering on this cluster. When enabled, a table will be created in the resource export BigQuery dataset to store resource consumption data. The resulting table can be joined with the resource usage table or with BigQuery billing export."
                                                    },
                                                    "enable_shielded_nodes": {
                                                        "default": true,
                                                        "description": "Enable Shielded Nodes features on all nodes in this cluster"
                                                    },
                                                    "enable_vertical_pod_autoscaling": {
                                                        "default": false,
                                                        "description": "Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it"
                                                    },
                                                    "firewall_inbound_ports": {
                                                        "default": [
                                                            "8443",
                                                            "9443",
                                                            "15017"
                                                        ],
                                                        "description": "List of TCP ports for admission/webhook controllers"
                                                    },
                                                    "firewall_priority": {
                                                        "default": 1000,
                                                        "description": "Priority rule for firewall rules"
                                                    },
                                                    "gce_pd_csi_driver": {
                                                        "default": false,
                                                        "description": "(Beta) Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver."
                                                    },
                                                    "gcloud_skip_download": {
                                                        "default": true,
                                                        "description": "Whether to skip downloading gcloud (assumes gcloud is already available outside the module)"
                                                    },
                                                    "gcloud_upgrade": {
                                                        "default": false,
                                                        "description": "Whether to upgrade gcloud at runtime"
                                                    },
                                                    "grant_registry_access": {
                                                        "default": false,
                                                        "description": "Grants created cluster-specific service account storage.objectViewer role."
                                                    },
                                                    "horizontal_pod_autoscaling": {
                                                        "default": true,
                                                        "description": "Enable horizontal pod autoscaling addon"
                                                    },
                                                    "http_load_balancing": {
                                                        "default": true,
                                                        "description": "Enable httpload balancer addon"
                                                    },
                                                    "identity_namespace": {
                                                        "default": "enabled",
                                                        "description": "Workload Identity namespace. (Default value of `enabled` automatically sets project based namespace `[project_id].svc.id.goog`)"
                                                    },
                                                    "initial_node_count": {
                                                        "default": 0,
                                                        "description": "The number of nodes to create in this cluster's default node pool."
                                                    },
                                                    "ip_masq_link_local": {
                                                        "default": false,
                                                        "description": "Whether to masquerade traffic to the link-local prefix (169.254.0.0/16)."
                                                    },
                                                    "ip_masq_resync_interval": {
                                                        "default": "60s",
                                                        "description": "The interval at which the agent attempts to sync its ConfigMap file from the disk."
                                                    },
                                                    "ip_range_pods": {
                                                        "description": "The _name_ of the secondary subnet ip range to use for pods"
                                                    },
                                                    "ip_range_services": {
                                                        "description": "The _name_ of the secondary subnet range to use for services"
                                                    },
                                                    "issue_client_certificate": {
                                                        "default": false,
                                                        "description": "Issues a client certificate to authenticate to the cluster endpoint. To maximize the security of your cluster, leave this option disabled. Client certificates don't automatically rotate and aren't easily revocable. WARNING: changing this after cluster creation is destructive!"
                                                    },
                                                    "istio": {
                                                        "default": false,
                                                        "description": "(Beta) Enable Istio addon"
                                                    },
                                                    "istio_auth": {
                                                        "default": "AUTH_MUTUAL_TLS",
                                                        "description": "(Beta) The authentication type between services in Istio."
                                                    },
                                                    "kalm_config": {
                                                        "default": false,
                                                        "description": "(Beta) Whether KALM is enabled for this cluster."
                                                    },
                                                    "kubernetes_version": {
                                                        "default": "latest",
                                                        "description": "The Kubernetes version of the masters. If set to 'latest' it will pull latest available version in the selected region."
                                                    },
                                                    "logging_service": {
                                                        "default": "logging.googleapis.com/kubernetes",
                                                        "description": "The logging service that the cluster should write logs to. Available options include logging.googleapis.com, logging.googleapis.com/kubernetes (beta), and none"
                                                    },
                                                    "maintenance_end_time": {
                                                        "default": "",
                                                        "description": "Time window specified for recurring maintenance operations in RFC3339 format"
                                                    },
                                                    "maintenance_recurrence": {
                                                        "default": "",
                                                        "description": "Frequency of the recurring maintenance window in RFC5545 format."
                                                    },
                                                    "maintenance_start_time": {
                                                        "default": "05:00",
                                                        "description": "Time window specified for daily or recurring maintenance operations in RFC3339 format"
                                                    },
                                                    "master_authorized_networks": {
                                                        "default": [],
                                                        "description": "List of master authorized networks. If none are provided, disallow external access (except the cluster node IPs, which GKE automatically whitelists)."
                                                    },
                                                    "master_global_access_enabled": {
                                                        "default": true,
                                                        "description": "(Beta) Whether the cluster master is accessible globally (from any region) or only within the same region as the private endpoint."
                                                    },
                                                    "master_ipv4_cidr_block": {
                                                        "default": "10.0.0.0/28",
                                                        "description": "(Beta) The IP range in CIDR notation to use for the hosted master network"
                                                    },
                                                    "monitoring_service": {
                                                        "default": "monitoring.googleapis.com/kubernetes",
                                                        "description": "The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting Available options include monitoring.googleapis.com, monitoring.googleapis.com/kubernetes (beta) and none"
                                                    },
                                                    "name": {
                                                        "description": "The name of the cluster (required)"
                                                    },
                                                    "network": {
                                                        "description": "The VPC network to host the cluster in (required)"
                                                    },
                                                    "network_policy": {
                                                        "default": true,
                                                        "description": "Enable network policy addon"
                                                    },
                                                    "network_policy_provider": {
                                                        "default": "CALICO",
                                                        "description": "The network policy provider."
                                                    },
                                                    "network_project_id": {
                                                        "default": "",
                                                        "description": "The project ID of the shared VPC's host (for shared vpc support)"
                                                    },
                                                    "node_metadata": {
                                                        "default": "GKE_METADATA_SERVER",
                                                        "description": "Specifies how node metadata is exposed to the workload running on the node"
                                                    },
                                                    "node_pools": {
                                                        "default": [
                                                            {
                                                                "name": "default-node-pool"
                                                            }
                                                        ],
                                                        "description": "List of maps containing node pools"
                                                    },
                                                    "node_pools_labels": {
                                                        "default": {
                                                            "all": {},
                                                            "default-node-pool": {}
                                                        },
                                                        "description": "Map of maps containing node labels by node-pool name"
                                                    },
                                                    "node_pools_metadata": {
                                                        "default": {
                                                            "all": {},
                                                            "default-node-pool": {}
                                                        },
                                                        "description": "Map of maps containing node metadata by node-pool name"
                                                    },
                                                    "node_pools_oauth_scopes": {
                                                        "default": {
                                                            "all": [
                                                                "https://www.googleapis.com/auth/cloud-platform"
                                                            ],
                                                            "default-node-pool": []
                                                        },
                                                        "description": "Map of lists containing node oauth scopes by node-pool name"
                                                    },
                                                    "node_pools_tags": {
                                                        "default": {
                                                            "all": [],
                                                            "default-node-pool": []
                                                        },
                                                        "description": "Map of lists containing node network tags by node-pool name"
                                                    },
                                                    "node_pools_taints": {
                                                        "default": {
                                                            "all": [],
                                                            "default-node-pool": []
                                                        },
                                                        "description": "Map of lists containing node taints by node-pool name"
                                                    },
                                                    "non_masquerade_cidrs": {
                                                        "default": [
                                                            "10.0.0.0/8",
                                                            "172.16.0.0/12",
                                                            "192.168.0.0/16"
                                                        ],
                                                        "description": "List of strings in CIDR notation that specify the IP address ranges that do not use IP masquerading."
                                                    },
                                                    "project_id": {
                                                        "description": "The project ID to host the cluster in (required)"
                                                    },
                                                    "region": {
                                                        "default": null,
                                                        "description": "The region to host the cluster in (optional if zonal cluster / required if regional)"
                                                    },
                                                    "regional": {
                                                        "default": true,
                                                        "description": "Whether is a regional cluster (zonal cluster if set false. WARNING: changing this after cluster creation is destructive!)"
                                                    },
                                                    "registry_project_id": {
                                                        "default": "",
                                                        "description": "Project holding the Google Container Registry. If empty, we use the cluster project. If grant_registry_access is true, storage.objectViewer role is assigned on this project."
                                                    },
                                                    "release_channel": {
                                                        "default": null,
                                                        "description": "(Beta) The release channel of this cluster. Accepted values are `UNSPECIFIED`, `RAPID`, `REGULAR` and `STABLE`. Defaults to `UNSPECIFIED`."
                                                    },
                                                    "remove_default_node_pool": {
                                                        "default": false,
                                                        "description": "Remove default node pool while setting up the cluster"
                                                    },
                                                    "resource_usage_export_dataset_id": {
                                                        "default": "",
                                                        "description": "The ID of a BigQuery Dataset for using BigQuery as the destination of resource usage export."
                                                    },
                                                    "sandbox_enabled": {
                                                        "default": false,
                                                        "description": "(Beta) Enable GKE Sandbox (Do not forget to set `image_type` = `COS_CONTAINERD` to use it)."
                                                    },
                                                    "service_account": {
                                                        "default": "",
                                                        "description": "The service account to run nodes as if not overridden in `node_pools`. The create_service_account variable default value (true) will cause a cluster-specific service account to be created."
                                                    },
                                                    "skip_provisioners": {
                                                        "default": false,
                                                        "description": "Flag to skip all local-exec provisioners. It breaks `stub_domains` and `upstream_nameservers` variables functionality."
                                                    },
                                                    "stub_domains": {
                                                        "default": {},
                                                        "description": "Map of stub domains and their resolvers to forward DNS queries for a certain domain to an external DNS server"
                                                    },
                                                    "subnetwork": {
                                                        "description": "The subnetwork to host the cluster in (required)"
                                                    },
                                                    "upstream_nameservers": {
                                                        "default": [],
                                                        "description": "If specified, the values replace the nameservers taken by default from the node’s /etc/resolv.conf"
                                                    },
                                                    "zones": {
                                                        "default": [],
                                                        "description": "The zones to host the cluster in (optional if regional cluster / required if zonal)"
                                                    }
                                                }
                                            },
                                            "version_constraint": "11.1.0"
                                        }
                                    },
                                    "variables": {
                                        "add_cluster_firewall_rules": {
                                            "default": true,
                                            "description": "Create additional firewall rules"
                                        },
                                        "appnodes_machine_type": {
                                            "default": "n1-standard-4",
                                            "description": "default machine_type for nodes in app dedicated node-pool"
                                        },
                                        "appnodes_max_count": {
                                            "default": 5,
                                            "description": "number of node by zone for node pool dedicated to apps"
                                        },
                                        "authenticator_security_group": {
                                            "default": null,
                                            "description": "The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format gke-security-groups@yourdomain.com"
                                        },
                                        "cluster_resource_labels": {
                                            "default": {},
                                            "description": "The GCE resource labels (a map of key/value pairs) to be applied to the cluster"
                                        },
                                        "compute_engine_service_account": {
                                            "default": "",
                                            "description": "Use the given service account for nodes rather than creating a new dedicated service account."
                                        },
                                        "default_max_pods_per_node": {
                                            "default": 110,
                                            "description": "The maximum number of pods to schedule per node"
                                        },
                                        "description": {
                                            "default": "",
                                            "description": "The description of the cluster"
                                        },
                                        "enable_pod_security_policy": {
                                            "default": false,
                                            "description": "enabled - Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created."
                                        },
                                        "enable_private_endpoint": {
                                            "default": true,
                                            "description": "When true, the cluster's private endpoint is used as the cluster endpoint and access through the public endpoint is disabled. When false, either endpoint can be used. This field only applies to private clusters, when enable_private_nodes is true"
                                        },
                                        "enable_shielded_nodes": {
                                            "default": false,
                                            "description": "Enable Shielded Nodes features on all nodes in this cluster."
                                        },
                                        "enable_vertical_pod_autoscaling": {
                                            "default": true,
                                            "description": "Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it"
                                        },
                                        "firewall_inbound_ports": {
                                            "default": [
                                                "443",
                                                "10250",
                                                "15017"
                                            ],
                                            "description": "List of TCP ports for admission/webhook controllers. For Istio 1.7, 443,10250 and 15017 ports are required in private cluster. For Prisma and Vault admission controller, 443 port is needed."
                                        },
                                        "firewall_priority": {
                                            "default": 1000,
                                            "description": "Priority rule for firewall rules"
                                        },
                                        "gce_pd_csi_driver": {
                                            "default": false,
                                            "description": "(Beta) Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver."
                                        },
                                        "gcp_project_id": {
                                            "description": "The project ID to host the cluster in"
                                        },
                                        "gcp_region": {
                                            "description": "The region to host the cluster in"
                                        },
                                        "gke_service_account_name": {
                                            "default": "tf-gke-default",
                                            "description": "default name for dedicated GSA for gke usage"
                                        },
                                        "horizontal_pod_autoscaling": {
                                            "default": true,
                                            "description": "Enable horizontal pod autoscaling addon"
                                        },
                                        "http_load_balancing": {
                                            "default": false,
                                            "description": "Enable httpload balancer addon. The addon allows whoever can create Ingress objects to expose an application to a public IP. Network policies or Gatekeeper policies should be used to verify that only authorized applications are exposed."
                                        },
                                        "infranodes_machine_type": {
                                            "default": "n1-standard-4",
                                            "description": "default machine_type for nodes in infra dedicated node-pool"
                                        },
                                        "infranodes_max_count": {
                                            "default": 2,
                                            "description": "number of node by zone for node pool dedicated to infra"
                                        },
                                        "initial_node_count": {
                                            "default": 0,
                                            "description": "The number of nodes to create in this cluster's default node pool."
                                        },
                                        "ip_range_pods": {
                                            "description": "The _name_ of the secondary subnet ip range to use for pods"
                                        },
                                        "ip_range_services": {
                                            "description": "The _name_ of the secondary subnet range to use for services"
                                        },
                                        "istio": {
                                            "default": true,
                                            "description": "(Beta) Enable Istio addon"
                                        },
                                        "istio_auth": {
                                            "default": "AUTH_MUTUAL_TLS",
                                            "description": "(Beta) The authentication type between services in Istio."
                                        },
                                        "kubernetes_version": {
                                            "default": null,
                                            "description": "The Kubernetes version of the masters. If set to 'latest' it will pull latest available version in the selected region. The module enforces certain minimum versions to ensure that specific features are available. "
                                        },
                                        "logging_service": {
                                            "default": "logging.googleapis.com/kubernetes",
                                            "description": "The logging service that the cluster should write logs to. Available options include logging.googleapis.com, logging.googleapis.com/kubernetes (beta), and none"
                                        },
                                        "maintenance_start_time": {
                                            "default": "05:00",
                                            "description": "Time window specified for daily maintenance operations in RFC3339 format"
                                        },
                                        "master_authorized_networks": {
                                            "default": [],
                                            "description": "List of master authorized networks. If none are provided, disallow external access (except the cluster node IPs, which GKE automatically whitelists)."
                                        },
                                        "master_ipv4_cidr_block": {
                                            "default": "10.0.0.0/28",
                                            "description": "The IP range in CIDR notation to use for the hosted master network"
                                        },
                                        "monitoring_service": {
                                            "default": "monitoring.googleapis.com/kubernetes",
                                            "description": "The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting Available options include monitoring.googleapis.com, monitoring.googleapis.com/kubernetes (beta) and none"
                                        },
                                        "name": {
                                            "description": "The name of the cluster"
                                        },
                                        "network": {
                                            "description": "The VPC network to host the cluster in"
                                        },
                                        "node_pools": {
                                            "default": [
                                                {
                                                    "name": "default-node-pool"
                                                }
                                            ],
                                            "description": "List of maps containing node pools"
                                        },
                                        "node_pools_labels": {
                                            "default": {
                                                "all": {},
                                                "default-node-pool": {}
                                            },
                                            "description": "Map of maps containing node labels by node-pool name"
                                        },
                                        "node_pools_metadata": {
                                            "default": {
                                                "all": {},
                                                "default-node-pool": {}
                                            },
                                            "description": "Map of maps containing node metadata by node-pool name"
                                        },
                                        "node_pools_oauth_scopes": {
                                            "default": {
                                                "all": [
                                                    "https://www.googleapis.com/auth/cloud-platform"
                                                ],
                                                "default-node-pool": []
                                            },
                                            "description": "Map of lists containing node oauth scopes by node-pool name"
                                        },
                                        "node_pools_tags": {
                                            "default": {
                                                "all": [],
                                                "default-node-pool": []
                                            },
                                            "description": "Map of lists containing node network tags by node-pool name"
                                        },
                                        "node_pools_taints": {
                                            "default": {
                                                "all": [],
                                                "default-node-pool": []
                                            },
                                            "description": "Map of lists containing node taints by node-pool name"
                                        },
                                        "regional": {
                                            "default": true,
                                            "description": "Whether is a regional cluster (zonal cluster if set false. WARNING: changing this after cluster creation is destructive!)"
                                        },
                                        "release_channel": {
                                            "default": "REGULAR",
                                            "description": "(Beta) The release channel of this cluster. Accepted values are `UNSPECIFIED`, `RAPID`, `REGULAR` and `STABLE`. Defaults to `REGULAR`."
                                        },
                                        "skip_provisioners": {
                                            "default": false,
                                            "description": "Flag to skip all local-exec provisioners. It breaks `stub_domains` and `upstream_nameservers` variables functionality."
                                        },
                                        "stub_domains": {
                                            "default": {},
                                            "description": "Map of stub domains and their resolvers to forward DNS queries for a certain domain to an external DNS server"
                                        },
                                        "subnetwork": {
                                            "description": "The subnetwork to host the cluster in"
                                        },
                                        "upstream_nameservers": {
                                            "default": [],
                                            "description": "If specified, the values replace the nameservers taken by default from the node’s /etc/resolv.conf"
                                        },
                                        "zones": {
                                            "default": [],
                                            "description": "The zones to host the cluster in"
                                        }
                                    }
                                }
                            }
                        },
                        "variables": {
                            "aiven_api_token": {
                                "description": "Aiven Token API"
                            },
                            "aiven_project_id": {
                                "default": null,
                                "description": "The project_id on Aiven"
                            },
                            "application_name": {
                                "default": null,
                                "description": "The unique name for your application"
                            },
                            "dns_private_domain_name": {
                                "default": "decathlon.tech",
                                "description": "The name of the public domain"
                            },
                            "dns_public_domain_name": {
                                "default": "decathlon.io",
                                "description": "The name of the public domain"
                            },
                            "environment_name": {
                                "default": null,
                                "description": "The name of the environment"
                            },
                            "gcp_project_id": {
                                "default": null,
                                "description": "The project_id on GCP"
                            },
                            "ips_ranges_to_whitelist": {
                                "default": [],
                                "description": "IPs address list to authorize network access"
                            },
                            "stack_config_file": {
                                "description": "YAML file description of the stack"
                            },
                            "ultradns_password": {
                                "description": "The password of the UltraDNS registrar"
                            },
                            "ultradns_username": {
                                "description": "The username of the UltraDNS registrar"
                            }
                        }
                    }
                }
            },
            "variables": {
                "aiven_api_token": {
                    "default": "test",
                    "description": "Aiven Token API"
                },
                "aiven_project_id": {
                    "default": "",
                    "description": "Provide the Aiven project ID if not defined in stack.yaml"
                },
                "application_name": {
                    "default": "",
                    "description": "App name"
                },
                "gcp_project_id": {
                    "default": "",
                    "description": "Provide the GCP project ID if not defined in stack.yaml"
                },
                "stack_template": {
                    "default": "local/stack.yaml",
                    "description": "path to the stack template file"
                },
                "stack_vars": {
                    "default": {},
                    "description": "variables to used in stack template file"
                },
                "ultradns_password": {
                    "default": "test",
                    "description": "UltraDNS password"
                },
                "ultradns_username": {
                    "default": "test",
                    "description": "UltraDNS user"
                }
            }
        }
    }
}